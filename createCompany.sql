--
-- PostgreSQL database dump
--

-- Dumped from database version 17.5
-- Dumped by pg_dump version 17.5

-- Started on 2025-07-21 11:29:16

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 11 (class 2615 OID 184658)
-- Name: 10083_10833; Type: SCHEMA; Schema: -; Owner: 10083
--

CREATE SCHEMA "10083_10833";


ALTER SCHEMA "10083_10833" OWNER TO "10083";

--
-- TOC entry 2349 (class 1255 OID 186203)
-- Name: customer_update_add(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".customer_update_add(IN customer_data jsonb, OUT customer_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; flag char(1); temp_id integer; item_count integer; begin customer_id := (customer_data->>'CustomerId') ::integer; flag := (customer_data->>'Flag'); if flag = 'U' then update "10083_10833"."Customer" set "CustomerGroupId" = (customer_data->>'CustomerGroupId')::integer, "CurrencyId" = (customer_data->>'CurrencyId')::integer, "TradeName" = (customer_data->>'TradeName'), "LegalName" = (customer_data->>'LegalName'), "PAN" = (customer_data->>'PAN'), "GSTIN" = (customer_data->>'GSTIN'), "GSTCategoryCode" = (customer_data->>'GSTCategoryCode')::integer, "GSTCategoryName" = (customer_data->>'GSTCategoryName'), "Email" = (customer_data->>'Email'), "PhoneNumber" = (customer_data->>'PhoneNumber'), "MobileNumber" = (customer_data->>'MobileNumber'), "ChartsOfAccountsId" = (customer_data->>'ChartsOfAccountsId')::integer, "ActiveStatus" = (customer_data->>'ActiveStatus')::boolean, "Code" = (customer_data->>'Code') where "Customer"."CustomerId" = customer_id; elseif flag = 'A' then insert into "10083_10833"."Customer" ( "CustomerGroupId", "CurrencyId", "TradeName", "LegalName", "PAN", "GSTIN", "GSTCategoryCode", "GSTCategoryName", "Email", "PhoneNumber", "MobileNumber", "ChartsOfAccountsId", "Code" ) values( (customer_data->>'CustomerGroupId')::integer, (customer_data->>'CurrencyId')::integer, (customer_data->>'TradeName'), (customer_data->>'LegalName'), (customer_data->>'PAN'), (customer_data->>'GSTIN'), (customer_data->>'GSTCategoryCode')::integer, (customer_data->>'GSTCategoryName'), (customer_data->>'Email'), (customer_data->>'PhoneNumber'), (customer_data->>'MobileNumber'), (customer_data->>'ChartsOfAccountsId')::integer, (customer_data->>'Code') ) returning "CustomerId" into customer_id; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((customer_data ->> 'CustomerBillingAddress')::jsonb); if item_count > 0 then FOR i IN 0..item_count-1 LOOP tempJson = (customer_data ->> 'CustomerBillingAddress')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'CustomerBillingAddressId'); if flag = 'D' then delete from "10083_10833"."CustomerBillingAddress" cba where cba."CustomerBillingAddressId" = temp_id; elseif flag = 'U' then update "10083_10833"."CustomerBillingAddress" set "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "Pincode" = tempJson->> 'Pincode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName', "Location" = tempJson->> 'Location' where "CustomerBillingAddressId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."CustomerBillingAddress" ( "CustomerId", "Address", "City", "StateCode", "StateName", "Pincode", "CountryCode", "CountryName", "Location" ) values ( (customer_id), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'Pincode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'Location') ); end if; end if; END loop; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((customer_data ->> 'CustomerShippingAddress')::jsonb); if item_count > 0 then FOR i IN 0..item_count-1 LOOP tempJson = (customer_data ->> 'CustomerShippingAddress')::jsonb->i; if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'CustomerShippingAddressId'); if flag = 'D' then delete from "10083_10833"."CustomerShippingAddress" csa where csa."CustomerShippingAddressId" = temp_id; elseif flag = 'U' then update "10083_10833"."CustomerShippingAddress" set "TradeName" = (tempJson->> 'TradeName'), "LegalName" = (tempJson->> 'LegalName'), "GSTIN" = (tempJson->> 'GSTIN'), "Email" = (tempJson->> 'Email'), "MobileNumber" = (tempJson->> 'MobileNumber'), "ContactPersonName" = (tempJson->> 'ContactPersonName'), "ContactPersonMobile" = (tempJson->> 'ContactPersonMobile'), "Address" = (tempJson->> 'Address'), "City" = (tempJson->> 'City'), "StateCode" = (tempJson->> 'StateCode'), "StateName" = (tempJson->> 'StateName'), "Pincode" = (tempJson->> 'Pincode'), "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = (tempJson->> 'CountryName'), "Inactive" = (tempJson->> 'Inactive')::boolean, "IsDefault" = (tempJson->> 'IsDefault')::boolean, "SearchCode" = (tempJson->> 'SearchCode') WHERE "CustomerShippingAddressId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."CustomerShippingAddress" ( "CustomerId", "TradeName", "LegalName", "GSTIN", "Email", "MobileNumber", "ContactPersonName", "ContactPersonMobile", "Address", "City", "StateCode", "StateName", "Pincode", "CountryCode", "CountryName", "Inactive", "IsDefault", "SearchCode" ) values ( (customer_id), (tempJson->> 'TradeName'), (tempJson->> 'LegalName'), (tempJson->> 'GSTIN'), (tempJson->> 'Email'), (tempJson->> 'MobileNumber'), (tempJson->> 'ContactPersonName'), (tempJson->> 'ContactPersonMobile'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'Pincode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'Inactive')::boolean, (tempJson->> 'IsDefault')::boolean, (tempJson->> 'SearchCode') ); end if; end if; END loop; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((customer_data ->> 'CustomerContactPerson')::jsonb); if item_count > 0 then FOR i IN 0..item_count-1 LOOP tempJson = (customer_data ->> 'CustomerContactPerson')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'CustomerContactPersonId'); if flag = 'D' then delete from "10083_10833"."CustomerContactPerson" ccp Where ccp."CustomerContactPersonId" = temp_id; elseif flag = 'U' then UPDATE "10083_10833"."CustomerContactPerson" SET "Name" = (tempJson ->> 'Name'), "PhoneNumber" = (tempJson ->> 'PhoneNumber'), "MobileNumber" = (tempJson ->> 'MobileNumber'), "Email" = (tempJson ->> 'Email'), "Designation" = (tempJson ->> 'Designation') WHERE "CustomerContactPersonId" = temp_id; elseif flag = 'A' then INSERT INTO "10083_10833"."CustomerContactPerson" ( "CustomerId", "Name", "PhoneNumber", "MobileNumber", "Email", "Designation" ) values ( (customer_id), (tempJson ->> 'Name'), (tempJson ->> 'PhoneNumber'), (tempJson ->> 'MobileNumber'), (tempJson ->> 'Email'), (tempJson ->> 'Designation') ); end if; end if; END loop; end if; end; $$;


ALTER PROCEDURE "10083_10833".customer_update_add(IN customer_data jsonb, OUT customer_id integer) OWNER TO "10083";

--
-- TOC entry 2344 (class 1255 OID 186206)
-- Name: deliverynote_update_add(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".deliverynote_update_add(IN deliverynote_data jsonb, OUT deliverynote_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; flag char(1); temp_id integer; item_count integer; deliveryNote_item_id integer; begin deliveryNote_id := (deliveryNote_data->>'DeliveryNoteId') ::integer; flag := (deliveryNote_data->>'Flag'); if flag = 'U' then update "10083_10833"."DeliveryNote" set "Number" = (deliveryNote_data ->>'Number'), "Date" = (deliveryNote_data->>'Date')::date, "FinancialYear" = (deliveryNote_data->>'FinancialYear')::integer, "TemplateId" = (deliveryNote_data->>'TemplateId')::integer, "DocumentName" = deliveryNote_data->>'DocumentName', "CustomerId" = (deliveryNote_data->>'CustomerId')::integer where "DeliveryNote"."DeliveryNoteId" = deliveryNote_id; elseif flag = 'A' then insert into "10083_10833"."DeliveryNote" ( "Date", "FinancialYear", "Number", "TemplateId", "DocumentName", "CustomerId" ) values( (deliveryNote_data->>'Date')::date, (deliveryNote_data->>'FinancialYear')::integer, (deliveryNote_data->>'Number'), (deliveryNote_data->>'TemplateId')::integer, (deliveryNote_data->>'DocumentName'), (deliveryNote_data->>'CustomerId')::integer ) returning "DeliveryNoteId" into deliveryNote_id; end if; flag := ''; tempJson := (deliveryNote_data ->> 'DeliveryNoteBillTo'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'DeliveryNoteBillToId'); if flag = 'D' then delete from "10083_10833"."DeliveryNoteBillTo" dnb where dnb."DeliveryNoteBillToId" = temp_id; elseif flag = 'U' then update "10083_10833"."DeliveryNoteBillTo" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName', "POSCode" = (tempJson->> 'POSCode'), "POSName" = tempJson->> 'POSName' where "DeliveryNoteBillToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."DeliveryNoteBillTo" ( "DeliveryNoteId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "POSCode", "POSName" ) values ( (deliveryNote_id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'POSCode'), (tempJson->> 'POSName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (deliveryNote_data ->> 'DeliveryNoteShipTo'); if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'DeliveryNoteShipToId'); if flag = 'D' then delete from "10083_10833"."DeliveryNoteShipTo" sst where sst."DeliveryNoteShipToId" = temp_id; elseif flag = 'U' then update "10083_10833"."DeliveryNoteShipTo" set "MailingName" = (tempJson->> 'MailingName'), "Address1" = (tempJson->> 'Address1'), "Address2" = (tempJson->> 'Address2'), "City" = (tempJson->> 'City'), "StateCode" = (tempJson->> 'StateCode'), "StateName" = (tempJson->> 'StateName'), "PinZipCode" = (tempJson->> 'PinZipCode'), "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = (tempJson->> 'CountryName') where "DeliveryNoteShipToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."DeliveryNoteShipTo" ( "DeliveryNoteId", "MailingName", "Address1", "Address2", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName" ) values ( (deliveryNote_id), (tempJson->> 'MailingName'), (tempJson->> 'Address1'), ( tempJson->> 'Address2'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (deliveryNote_data ->> 'DeliveryNoteDispatchFrom'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'DeliveryNoteDispatchFromId'); if flag = 'D' then delete from "10083_10833"."DeliveryNoteDispatchFrom" dndf where dndf."DeliveryNoteDispatchFromId" = temp_id; elseif flag = 'U' then update "10083_10833"."DeliveryNoteDispatchFrom" set "MailingName" = (tempJson ->> 'MailingName'), "Address1" = (tempJson->> 'Address1'), "Address2" = (tempJson->> 'Address2'), "City" = (tempJson ->> 'City'), "StateCode" = (tempJson ->> 'StateCode'), "StateName" = (tempJson ->> 'StateName'), "PinZipCode" = (tempJson ->> 'PinZipCode'), "CountryCode" = (tempJson ->> 'CountryCode'), "CountryName" =(tempJson ->> 'CountryName') where "DeliveryNoteDispatchFromId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."DeliveryNoteDispatchFrom" ( "DeliveryNoteId", "MailingName", "Address1", "Address2", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName" ) values ( deliveryNote_id, (tempJson ->> 'MailingName'), (tempJson->> 'Address1'), (tempJson->> 'Address2'), (tempJson ->> 'City'), (tempJson ->> 'StateCode'), (tempJson ->> 'StateName'), (tempJson ->> 'PinZipCode'), (tempJson ->> 'CountryCode'), (tempJson ->> 'CountryName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (deliveryNote_data ->> 'DeliveryNoteExportDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'DeliveryNoteExportDetailsId'); if flag = 'D' then delete from "10083_10833"."DeliveryNoteExportDetails" sed where sed."DeliveryNoteExportDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."DeliveryNoteExportDetails" set "ShippingBillNumber" =(tempJson ->> 'ShippingBillNumber'), "ShippingBillDate" = (tempJson ->> 'ShippingBillDate')::date, "PortCode" =(tempJson ->> 'PortCode'), "PortName" =(tempJson ->> 'PortName'), "ForeignCurrency" = (tempJson ->> 'ForeignCurrency'), "CountryCode" =(tempJson ->> 'CountryCode'), "CountryName" =(tempJson ->> 'CountryName'), "RefundClaim" = (tempJson ->> 'RefundClaim')::boolean, "ExportDuty" = (tempJson ->> 'ExportDuty')::float, "DispatchThrough" =(tempJson ->> 'DispatchThrough'), "VehicleNumber" =(tempJson ->> 'VehicleNumber'), "ExchangeRate" =(tempJson ->> 'ExchangeRate')::float, "DestinationPortCode" =(tempJson ->> 'DestinationPortCode'), "DestinationPortName" =(tempJson ->> 'DestinationPortName'), "Destination" =(tempJson ->> 'Destination'), "LUTNumber" =(tempJson ->> 'LUTNumber'), "PlaceOfReceipt" =(tempJson ->> 'PlaceOfReceipt') where "DeliveryNoteExportDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."DeliveryNoteExportDetails" ( "DeliveryNoteId", "ShippingBillNumber", "ShippingBillDate", "PortCode", "PortName", "ForeignCurrency", "CountryCode", "CountryName", "RefundClaim", "ExportDuty", "DispatchThrough", "VehicleNumber", "ExchangeRate", "DestinationPortCode", "DestinationPortName", "Destination", "LUTNumber", "PlaceOfReceipt" ) values ( deliveryNote_id, (tempJson ->> 'ShippingBillNumber'), (tempJson ->> 'ShippingBillDate')::date, (tempJson ->> 'PortCode'), (tempJson ->> 'PortName'), (tempJson ->> 'ForeignCurrency'), (tempJson ->> 'CountryCode'), (tempJson ->> 'CountryName'), (tempJson ->> 'RefundClaim')::boolean, (tempJson ->> 'ExportDuty')::float, (tempJson ->> 'DispatchThrough'), (tempJson ->> 'VehicleNumber'), (tempJson ->> 'ExchangeRate')::float, (tempJson ->> 'DestinationPortCode'), (tempJson ->> 'DestinationPortName'), (tempJson ->> 'Destination'), (tempJson ->> 'LUTNumber'), (tempJson ->> 'PlaceOfReceipt') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (deliveryNote_data ->> 'DeliveryNoteValueDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'DeliveryNoteValueDetailsId'); if flag = 'D' then delete from "10083_10833"."DeliveryNoteValueDetails" dnvd where dnvd."DeliveryNoteValueDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."DeliveryNoteValueDetails" set "AssessableValue" =(tempJson ->> 'AssessableValue')::float, "IGST" =(tempJson ->> 'IGST')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "Cess" =(tempJson ->> 'Cess')::float, "StateCess" =(tempJson ->> 'StateCess')::float, "InvoiceValue" =(tempJson ->> 'InvoiceValue')::float, "RoundOffAmount" =(tempJson ->> 'RoundOffAmount')::float, "InvoiceValueForeignCurrency" =(tempJson ->> 'InvoiceValueForeignCurrency')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharge" =(tempJson ->> 'OtherCharge')::float, "OtherChargeTaxable" =(tempJson ->> 'OtherChargeTaxable')::float, "TCSRate" =(tempJson ->> 'TCSRate')::float, "TCSAmount" =(tempJson ->> 'TCSAmount')::float where "DeliveryNoteValueDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."DeliveryNoteValueDetails" ( "DeliveryNoteId", "AssessableValue", "IGST", "CGST", "SGST", "Cess", "StateCess", "InvoiceValue", "RoundOffAmount", "InvoiceValueForeignCurrency", "Discount", "OtherCharge", "OtherChargeTaxable", "TCSRate", "TCSAmount" ) values ( deliveryNote_id, (tempJson ->> 'AssessableValue')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'Cess')::float, (tempJson ->> 'StateCess')::float, (tempJson ->> 'InvoiceValue')::float, (tempJson ->> 'RoundOffAmount')::float, (tempJson ->> 'InvoiceValueForeignCurrency')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharge')::float, (tempJson ->> 'OtherChargeTaxable')::float, (tempJson ->> 'TCSRate')::float, (tempJson ->> 'TCSAmount')::float ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (deliveryNote_data ->> 'DeliveryNoteDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'DeliveryNoteDetailsId'); if flag = 'D' then delete from "10083_10833"."DeliveryNoteDetails" sod where sod."DeliveryNoteDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."DeliveryNoteDetails" set "ModeTermsOfPayment" =(tempJson ->> 'ModeTermsOfPayment'), "TermsOfDelivery" =(tempJson ->> 'TermsOfDelivery'), "TermAndCondition" =(tempJson ->> 'TermAndCondition') where "DeliveryNoteDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."DeliveryNoteDetails" ( "DeliveryNoteId", "ModeTermsOfPayment", "TermsOfDelivery", "TermAndCondition" ) values ( deliveryNote_id, (tempJson ->> 'ModeTermsOfPayment'), (tempJson ->> 'TermsOfDelivery'), (tempJson ->> 'TermAndCondition') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((deliveryNote_data ->> 'DeliveryNoteItems')::jsonb); for i in 0.. item_count-1 loop tempJson = (deliveryNote_data ->> 'DeliveryNoteItems')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'DeliveryNoteItemsId'); if flag = 'D' then delete from "10083_10833"."DeliveryNoteItems" dni where dni."DeliveryNoteItemsId" = temp_id; elseif flag = 'U' then update "10083_10833"."DeliveryNoteItems" set "StockItemId" =(tempJson ->> 'StockItemId')::integer, "ItemName" =(tempJson ->> 'ItemName'), "ItemSerialNumber" =(tempJson ->> 'ItemSerialNumber')::integer, "ItemCode" =(tempJson ->> 'ItemCode')::integer, "ItemDescription" =(tempJson ->> 'ItemDescription'), "HSNSAC" =(tempJson ->> 'HSNSAC')::integer, "BarCode" =(tempJson ->> 'BarCode'), "OrderQuantity" =(tempJson ->> 'OrderQuantity')::float, "BalanceQuantity" =(tempJson ->> 'BalanceQuantity')::float, "FreeQuantity" =(tempJson ->> 'FreeQuantity')::float, "UnitPrice" =(tempJson ->> 'UnitPrice')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharges" =(tempJson ->> 'OtherCharges')::float, "TaxableValue" =(tempJson ->> 'TaxableValue')::float, "GstRate" =(tempJson ->> 'GstRate')::float, "CessRate" =(tempJson ->> 'CessRate')::float, "StateCessRate" =(tempJson ->> 'StateCessRate')::float, "IGST" =(tempJson ->> 'IGST')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "Cess" =(tempJson ->> 'Cess')::float, "StateCess" =(tempJson ->> 'StateCess')::float, "CessNonAdvolRate" =(tempJson ->> 'CessNonAdvolRate')::float, "CessNonAdvolUnit" =(tempJson ->> 'CessNonAdvolUnit')::float, "StateCessNonAdvolRate" =(tempJson ->> 'StateCessNonAdvolRate')::float, "StateCessNonAdvolUnit" =(tempJson ->> 'StateCessNonAdvolUnit')::float, "CessNonAdvol" =(tempJson ->> 'CessNonAdvol')::float, "StateCessNonAdvol" =(tempJson ->> 'StateCessNonAdvol')::float, "TotalItemValue" =(tempJson ->> 'TotalItemValue')::float where "DeliveryNoteItemsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."DeliveryNoteItems" ( "DeliveryNoteId", "StockItemId", "ItemName", "ItemSerialNumber", "ItemCode", "ItemDescription", "HSNSAC", "BarCode", "OrderQuantity", "BalanceQuantity", "FreeQuantity", "UnitPrice", "SubTotal", "Discount", "OtherCharges", "TaxableValue", "GstRate", "CessRate", "StateCessRate", "IGST", "CGST", "SGST", "Cess", "StateCess", "CessNonAdvolRate", "CessNonAdvolUnit", "StateCessNonAdvolRate", "StateCessNonAdvolUnit", "CessNonAdvol", "StateCessNonAdvol", "TotalItemValue" ) values ( deliveryNote_id, (tempJson ->> 'StockItemId')::integer, (tempJson ->> 'ItemName'), (tempJson ->> 'ItemSerialNumber')::integer, (tempJson ->> 'ItemCode')::integer, (tempJson ->> 'ItemDescription'), (tempJson ->> 'HSNSAC')::integer, (tempJson ->> 'BarCode'), (tempJson ->> 'OrderQuantity')::float, (tempJson ->> 'BalanceQuantity')::float, (tempJson ->> 'FreeQuantity')::float, (tempJson ->> 'UnitPrice')::float, (tempJson ->> 'SubTotal')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharges')::float, (tempJson ->> 'TaxableValue')::float, (tempJson ->> 'GstRate')::float, (tempJson ->> 'CessRate')::float, (tempJson ->> 'StateCessRate')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'Cess')::float, (tempJson ->> 'StateCess')::float, (tempJson ->> 'CessNonAdvolRate')::float, (tempJson ->> 'CessNonAdvolUnit')::float, (tempJson ->> 'StateCessNonAdvolRate')::float, (tempJson ->> 'StateCessNonAdvolUnit')::float, (tempJson ->> 'CessNonAdvol')::float, (tempJson ->> 'StateCessNonAdvol')::float, (tempJson ->> 'TotalItemValue')::float ) returning "DeliveryNoteItemsId" into deliveryNote_item_id; end if; end if; if flag <> 'D' then flag := ''; temp_id := 0; tempJson := (tempJson ->> 'DeliveryNoteBatchDetails')::jsonb; flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'DeliveryNoteBatchDetailsId'); if flag = 'A' then insert into "10083_10833"."DeliveryNoteBatchDetails" ( "DeliveryNoteItemsId", "Name", "SerialNumber", "ExpiryDate", "ManufacturingDate" ) values ( deliveryNote_item_id, (tempJson ->> 'Name'), (tempJson ->> 'SerialNumber')::integer, (tempJson ->> 'ExpiryDate')::date, (tempJson ->> 'ManufacturingDate')::date ); elseif flag = 'U' then update "10083_10833"."DeliveryNoteBatchDetails" set "DeliveryNoteItemsId" =(tempJson ->> 'DeliveryNoteItemsId')::integer, "Name" =(tempJson ->> 'Name'), "SerialNumber" =(tempJson ->> 'SerialNumber')::integer, "ExpiryDate" =(tempJson ->> 'ExpiryDate')::date, "ManufacturingDate" =(tempJson ->> 'ManufacturingDate')::date where "DeliveryNoteBatchDetailsId" = temp_id; end if; end if; end loop; end; $$;


ALTER PROCEDURE "10083_10833".deliverynote_update_add(IN deliverynote_data jsonb, OUT deliverynote_id integer) OWNER TO "10083";

--
-- TOC entry 2339 (class 1255 OID 186211)
-- Name: document_add_update(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".document_add_update(IN document_data jsonb, OUT document_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; documentName text; flag char(1); temp_id integer; item_count integer; sequence_name text; begin document_id := (document_data->>'DocumentId') ::integer; flag := (document_data->> 'Flag'); if flag = 'U' then update "10083_10833"."Document" set "Name" =(document_data->> 'Name'), "ShortName" =(document_data->> 'ShortName'), "DocumentNumberingCode" =(document_data->> 'DocumentNumberingCode')::integer, "DocumentNumberingName" =(document_data->> 'DocumentNumberingName'), "ActiveStatus" =(document_data->> 'ActiveStatus')::boolean, "DocumentType" = (document_data->> 'DocumentType')::integer, "Code" = (document_data->> 'Code') where "Document"."DocumentId" = (document_id); elseif flag = 'A' then insert into "10083_10833"."Document" ("Name", "ShortName", "DocumentNumberingCode", "DocumentNumberingName", "DocumentType" , "Code") values( (document_data->> 'Name'), (document_data->> 'ShortName'), (document_data->> 'DocumentNumberingCode')::integer, (document_data->> 'DocumentNumberingName'), (document_data->> 'DocumentType')::integer , (document_data->> 'Code') ) returning "DocumentId" into document_id; end if; tempJson := document_data ->> 'DocumentSettings'; flag := ''; temp_id := 0; if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'DocumentSettingsId'); if flag = 'U' then update "10083_10833"."DocumentSettings" set "Settings" = (tempJson ->>'Settings')::jsonb where "DocumentSettingsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."DocumentSettings"( "DocumentId", "Settings" ) values( (document_id), (tempJson ->>'Settings')::jsonb); end if; end if; item_count := jsonb_array_length((document_data ->> 'AutoNumbering')::jsonb); if item_count > 0 then for i in 0.. item_count-1 loop tempJson = (document_data ->> 'AutoNumbering')::jsonb->i; if tempJson is not null then flag := tempJson ->> 'Flag'; temp_id := tempJson ->> 'AutoNumberingId'; if flag = 'D' then delete from "10083_10833"."AutoNumbering" sst where sst."AutoNumberingId" = temp_id; elseif flag = 'U' then update "10083_10833"."AutoNumbering" set "ApplicableFrom" =(tempJson ->>'ApplicableFrom')::date, "Prefix" =(tempJson ->>'Prefix'), "StartingNumber" =(tempJson ->>'StartingNumber')::integer, "NoOfDigits" =(tempJson ->>'NoOfDigits')::integer, "FillWithZero" =(tempJson ->>'FillWithZero')::boolean, "Suffix" =(tempJson ->>'Suffix'), "ResetNumberingCode" =(tempJson ->>'ResetNumberingCode')::integer, "ResetNumberingName" =(tempJson ->>'ResetNumberingName') where "AutoNumberingId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."AutoNumbering" ( "DocumentId", "ApplicableFrom", "Prefix", "StartingNumber", "NoOfDigits", "FillWithZero", "Suffix", "ResetNumberingCode", "ResetNumberingName" ) values( (document_id), (tempJson ->>'ApplicableFrom')::date, (tempJson ->>'Prefix'), (tempJson ->>'StartingNumber')::integer, (tempJson ->>'NoOfDigits')::integer, (tempJson ->>'FillWithZero')::boolean, (tempJson ->>'Suffix'), (tempJson ->>'ResetNumberingCode')::integer, (tempJson ->>'ResetNumberingName') ); end if; end if; end loop; end if; flag := (document_data->> 'Flag'); if(flag = 'A') then documentName :=(document_data->> 'Name'); documentName := replace(documentName, ' ', '_'); sequence_name := '"10083_10833"."Document_' || documentName || '_Seq"'; execute 'CREATE SEQUENCE ' || sequence_name || ' START WITH 1 INCREMENT BY 1'; end if; end; $$;


ALTER PROCEDURE "10083_10833".document_add_update(IN document_data jsonb, OUT document_id integer) OWNER TO "10083";

--
-- TOC entry 2340 (class 1255 OID 186212)
-- Name: einvoice_update_add(jsonb, integer, boolean); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".einvoice_update_add(IN einvoice_data jsonb, IN request_for integer, IN is_error boolean)
    LANGUAGE plpgsql
    AS $$ begin if request_for = 1 or request_for = 4 then if is_Error = false then insert into "10083_10833"."EinvoiceDetails" ( "InvoiceId", "InvoiceType", "Host", "AckNo", "AckDt", "Irn", "JwtIssuer", "Remark", "SignedInvoice", "SignedQrCode", "CancelIrnDate", "CancelIrnRemark", "CancelIrnReason", "ErrorMessage", "IrnStatus" ) values ( (einvoice_data ->> 'InvoiceId')::integer, (einvoice_data ->> 'InvoiceType'), (einvoice_data ->> 'Host')::integer, (einvoice_data ->> 'AckNo'), (einvoice_data ->> 'AckDt')::timestamp, (einvoice_data ->> 'Irn'), (einvoice_data ->> 'JwtIssuer'), (einvoice_data ->> 'Remark'), (einvoice_data ->> 'SignedInvoice'), (einvoice_data ->> 'SignedQrCode'), (einvoice_data ->> 'CancelIrnDate')::timestamp, (einvoice_data ->> 'CancelIrnRemark'), (einvoice_data ->> 'CancelIrnReason'), (einvoice_data ->> 'ErrorMessage'), (einvoice_data ->> 'IrnStatus') ) on conflict ("InvoiceId" , "InvoiceType") do update set "Host" = (einvoice_data ->> 'Host')::integer, "AckNo" = (einvoice_data ->> 'AckNo'), "AckDt" = (einvoice_data ->> 'AckDt')::timestamp, "Irn" = (einvoice_data ->> 'Irn'), "JwtIssuer" = (einvoice_data ->> 'JwtIssuer'), "Remark" = (einvoice_data ->> 'Remark'), "SignedInvoice" = (einvoice_data ->> 'SignedInvoice'), "SignedQrCode" = (einvoice_data ->> 'SignedQrCode'), "CancelIrnDate" = (einvoice_data ->> 'CancelIrnDate')::timestamp, "IrnStatus" = (einvoice_data ->> 'IrnStatus'), "ErrorMessage" = null; else insert into "10083_10833"."EinvoiceDetails" ( "InvoiceId", "InvoiceType", "Host", "ErrorMessage", "IrnStatus" ) values ( (einvoice_data ->> 'InvoiceId')::integer, (einvoice_data ->> 'InvoiceType'), (einvoice_data ->> 'Host')::integer, (einvoice_data ->> 'ErrorMessage'), (einvoice_data ->> 'IrnStatus') ) on conflict ("InvoiceId" , "InvoiceType") do update set "Host" = (einvoice_data ->> 'Host')::integer, "ErrorMessage" = (einvoice_data ->> 'ErrorMessage'), "IrnStatus" = 'ERR'; end if; else if request_for = 2 then if is_Error = false then update "10083_10833"."EinvoiceDetails" set "CancelIrnDate" = (einvoice_data ->> 'CancelIrnDate')::timestamp, "CancelIrnRemark" = (einvoice_data ->> 'CancelIrnRemark'), "CancelIrnReason" = (einvoice_data ->> 'CancelIrnReason'), "ErrorMessage" = null, "IrnStatus" = 'CNL' where "EinvoiceDetails"."InvoiceId" = (einvoice_data ->> 'InvoiceId')::integer and "EinvoiceDetails"."InvoiceType" = (einvoice_data ->> 'InvoiceType'); end if; end if; end if; if (einvoice_data ->> 'AddEwayBill') = 'true' then if (einvoice_data ->> 'InvoiceType') = 'I' then if (einvoice_data ->> 'EwayStatus') = 'ERR' then update "10083_10833"."SalesEwayBillsDetails" set "Errors" = einvoice_data ->> 'EwayError', "EwayStatus" = 'ERR' where "SaleId" = (einvoice_data ->> 'InvoiceId')::integer; else update "10083_10833"."SalesEwayBillsDetails" set "EwayBillNumber" = einvoice_data ->> 'EwayBillNumber', "EwayBillDate" = (einvoice_data ->> 'EwayBillDate')::timestamp, "ValidUpTo" = (einvoice_data ->> 'EwayBillValidTill')::timestamp, "EwayStatus" = einvoice_data ->> 'EwayBillStatus', "Errors" = null where "SaleId" = (einvoice_data ->> 'InvoiceId')::integer; end if; elsif (einvoice_data ->> 'InvoiceType') = 'C' then if (einvoice_data ->> 'EwayStatus') = 'ERR' then update "10083_10833"."SalesReturnEwayBillsDetails" set "Errors" = einvoice_data ->> 'EwayError', "EwayStatus" = 'ERR' where "SaleReturnId" = (einvoice_data ->> 'InvoiceId')::integer; else update "10083_10833"."SalesReturnEwayBillsDetails" set "EwayBillNumber" = einvoice_data ->> 'EwayBillNumber', "EwayBillDate" = (einvoice_data ->> 'EwayBillDate')::timestamp, "ValidUpTo" = (einvoice_data ->> 'EwayBillValidTill')::timestamp, "EwayStatus" = einvoice_data ->> 'EwayBillStatus', "Errors" = null where "SaleReturnId" = (einvoice_data ->> 'InvoiceId')::integer; end if; elseif (einvoice_data ->> 'InvoiceType') = 'D' then if (einvoice_data ->> 'EwayStatus') = 'ERR' then update "10083_10833"."SalesDebitNoteEwayBillsDetails" set "Errors" = einvoice_data ->> 'EwayError', "EwayStatus" = 'ERR' where "SalesDebitNoteEwayBillsDetailsId" = (einvoice_data ->> 'InvoiceId')::integer; else update "10083_10833"."SalesDebitNoteEwayBillsDetails" set "EwayBillNumber" = einvoice_data ->> 'EwayBillNumber', "EwayBillDate" = (einvoice_data ->> 'EwayBillDate')::timestamp, "ValidUpTo" = (einvoice_data ->> 'EwayBillValidTill')::timestamp, "EwayStatus" = einvoice_data ->> 'EwayBillStatus', "Errors" = null where "SalesDebitNoteEwayBillsDetailsId" = (einvoice_data ->> 'InvoiceId')::integer; end if; end if; end if; insert into "10083_10833"."EinvoiceAndEwaylogs" ( "InvoiceId", "InvoiceType", "Error", "RequestTime", "RequestType", "RequestFor" ) values ( (einvoice_data ->> 'InvoiceId')::integer , (einvoice_data ->> 'InvoiceType') , (einvoice_data ->> 'ErrorMessage'), current_timestamp, 1, request_for ); end; $$;


ALTER PROCEDURE "10083_10833".einvoice_update_add(IN einvoice_data jsonb, IN request_for integer, IN is_error boolean) OWNER TO "10083";

--
-- TOC entry 2341 (class 1255 OID 186213)
-- Name: eway_response_update_add(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".eway_response_update_add(IN eway_response jsonb)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; isSuccess boolean; invoiceType text; invoiceId integer; requestFor integer; temp_id integer; item_count integer; itemTempJson jsonb; ewayErrorString text; begin tempJson := eway_response; isSuccess := (tempJson ->> 'IsSuccess')::boolean; invoiceType := tempJson ->> 'InvoiceType'; invoiceId := (tempJson ->> 'InvoiceId')::integer; if(invoiceType = 'I') then if(isSuccess = 'true') then if(requestFor = 1) then update "10083_10833"."SalesEwayBillsDetails" set "EwayBillNumber" = (tempJson->>'EwayBillNumber')::int8, "EwayBillDate" = (tempJson->>'EwayBillDate')::date, "EwayStatus" = tempJson ->> 'EwayStatus', "ValidUpTo" = (tempJson->>'ValidUpTo')::date, "Alerts" = tempJson->>'Alerts', "Information" = tempJson->>'Information', "Errors" = null where "SaleId" = invoiceId; end if; else update "10083_10833"."SalesEwayBillsDetails" set "Errors" = (tempJson ->> 'ErrorMsg'), "EwayStatus" = 'ERR' where "SaleId" = invoiceId; end if; end if; if(invoiceType = 'D') then if(isSuccess = 'true') then if(requestFor = 1) then update "10083_10833"."SalesDebitNoteEwayBillsDetails" set "EwayBillNumber" = (tempJson->>'EwayBillNumber')::int8, "EwayBillDate" = (tempJson->>'EwayBillDate')::date, "EwayStatus" = tempJson ->> 'EwayStatus', "ValidUpTo" = (tempJson->>'ValidUpTo')::date, "Alerts" = tempJson->>'Alerts', "Information" = tempJson->>'Information', "Errors" = null where "SalesDebitNoteEwayBillsDetailsId" = invoiceId; end if; else update "10083_10833"."SalesDebitNoteEwayBillsDetails" set "Errors" = (tempJson ->> 'ErrorMsg'), "EwayStatus" = 'ERR' where "SalesDebitNoteEwayBillsDetailsId" = invoiceId; end if; end if; if(invoiceType = 'C') then if(isSuccess = 'true') then if(requestFor = 1) then update "10083_10833"."SalesReturnEwayBillsDetails" set "EwayBillNumber" = (tempJson->>'EwayBillNumber')::int8, "EwayBillDate" = (tempJson->>'EwayBillDate')::date, "EwayStatus" = tempJson ->> 'EwayStatus', "ValidUpTo" = (tempJson->>'ValidUpTo')::date, "Alerts" = tempJson->>'Alerts', "Information" = tempJson->>'Information', "Errors" = null where "SaleReturnId" = invoiceId; end if; else update "10083_10833"."SalesReturnEwayBillsDetails" set "Errors" = (tempJson ->> 'ErrorMsg'), "EwayStatus" = 'ERR' where "SaleReturnId" = invoiceId; end if; end if; end $$;


ALTER PROCEDURE "10083_10833".eway_response_update_add(IN eway_response jsonb) OWNER TO "10083";

--
-- TOC entry 2338 (class 1255 OID 186210)
-- Name: eway_response_update_add(jsonb, integer, boolean); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".eway_response_update_add(IN eway_response jsonb, IN request_for integer, IN is_error boolean)
    LANGUAGE plpgsql
    AS $$ declare invoice_id INTEGER; invoice_type varchar; begin invoice_id := (eway_response ->> 'InvoiceId')::INTEGER; invoice_type := (eway_response ->> 'InvoiceType')::varchar; if invoice_type = 'S' then if request_for = 1 then if is_Error = false then update "10083_10833"."SalesEwayBillsDetails" set "EwayBillNumber" = (eway_response ->> 'EwayBillNumber')::INT8, "EwayBillDate" = (eway_response ->> 'EwayBillDate')::TIMESTAMP, "EwayStatus" = 'ACT', "ValidUpTo" = (eway_response ->> 'ValidUpTo')::TIMESTAMP, "Alerts" = eway_response ->> 'Alerts', "Information" = eway_response ->> 'Information', "Errors" = null where "SaleId" = invoice_id; elsif is_Error = true then update "10083_10833"."SalesEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "SaleId" = invoice_id; end if; end if; end if; if invoice_type = 'S' then if request_for = 2 then if is_Error = false then update "10083_10833"."SalesEwayBillsDetails" set "CancelDate" = (eway_response ->> 'CancelDate')::TIMESTAMP, "CancelRemark" = (eway_response ->> 'CancelRemark'), "CancelReason" = (eway_response ->> 'CancelReason'), "Errors" = null, "EwayStatus" = 'CNL' where "SaleId" = invoice_id; elsif is_Error = true then update "10083_10833"."SalesEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "SaleId" = invoice_id; end if; end if; end if; if invoice_type = 'SR' then if request_for = 1 then if is_Error = false then update "10083_10833"."SalesReturnEwayBillsDetails" set "EwayBillNumber" = (eway_response ->> 'EwayBillNumber')::INT8, "EwayBillDate" = (eway_response ->> 'EwayBillDate')::TIMESTAMP, "EwayStatus" = 'ACT', "ValidUpTo" = (eway_response ->> 'ValidUpTo')::TIMESTAMP, "Alerts" = eway_response ->> 'Alerts', "Information" = eway_response ->> 'Information', "Errors" = null where "SaleReturnId" = invoice_id; elsif is_Error = true then update "10083_10833"."SalesReturnEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "SaleReturnId" = invoice_id; end if; end if; end if; if invoice_type = 'SR' then if request_for = 2 then if is_Error = false then update "10083_10833"."SalesReturnEwayBillsDetails" set "CancelDate" = (eway_response ->> 'CancelDate')::TIMESTAMP, "CancelRemark" = (eway_response ->> 'CancelRemark'), "CancelReason" = (eway_response ->> 'CancelReason'), "Errors" = null, "EwayStatus" = 'CNL' where "SaleReturnId" = invoice_id; elsif is_Error = true then update "10083_10833"."SalesReturnEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "SaleReturnId" = invoice_id; end if; end if; end if; if invoice_type = 'P' then if request_for = 1 then if is_Error = false then update "10083_10833"."PurchaseEwayBillsDetails" set "EwayBillNumber" = (eway_response ->> 'EwayBillNumber')::INT8, "EwayBillDate" = (eway_response ->> 'EwayBillDate')::TIMESTAMP, "EwayStatus" = 'ACT', "ValidUpTo" = (eway_response ->> 'ValidUpTo')::TIMESTAMP, "Alerts" = eway_response ->> 'Alerts', "Information" = eway_response ->> 'Information', "Errors" = null where "PurchaseId" = invoice_id; elsif is_Error = true then update "10083_10833"."PurchaseEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "PurchaseId" = invoice_id; end if; end if; end if; if invoice_type = 'P' then if request_for = 2 then if is_Error = false then update "10083_10833"."PurchaseEwayBillsDetails" set "CancelDate" = (eway_response ->> 'CancelDate')::TIMESTAMP, "CancelRemark" = (eway_response ->> 'CancelRemark'), "CancelReason" = (eway_response ->> 'CancelReason'), "Errors" = null, "EwayStatus" = 'CNL' where "PurchaseId" = invoice_id; elsif is_Error = true then update "10083_10833"."PurchaseEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "PurchaseId" = invoice_id; end if; end if; end if; if invoice_type = 'PR' then if request_for = 1 then if is_Error = false then update "10083_10833"."PurchaseReturnEwayBillsDetails" set "EwayBillNumber" = (eway_response ->> 'EwayBillNumber')::INT8, "EwayBillDate" = (eway_response ->> 'EwayBillDate')::TIMESTAMP, "EwayStatus" = 'ACT', "ValidUpTo" = (eway_response ->> 'ValidUpTo')::TIMESTAMP, "Alerts" = eway_response ->> 'Alerts', "Information" = eway_response ->> 'Information', "Errors" = null where "PurchaseReturnId" = invoice_id; elsif is_Error = true then update "10083_10833"."PurchaseReturnEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "PurchaseReturnId" = invoice_id; end if; end if; end if; if invoice_type = 'PR' then if request_for = 2 then if is_Error = false then update "10083_10833"."PurchaseReturnEwayBillsDetails" set "CancelDate" = (eway_response ->> 'CancelDate')::TIMESTAMP, "CancelRemark" = (eway_response ->> 'CancelRemark'), "CancelReason" = (eway_response ->> 'CancelReason'), "Errors" = null, "EwayStatus" = 'CNL' where "PurchaseReturnId" = invoice_id; elsif is_Error = true then update "10083_10833"."PurchaseReturnEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "PurchaseReturnId" = invoice_id; end if; end if; end if; if invoice_type = 'SDN' then if request_for = 1 then if is_Error = false then update "10083_10833"."SalesDebitNoteEwayBillsDetails" set "EwayBillNumber" = (eway_response ->> 'EwayBillNumber')::INT8, "EwayBillDate" = (eway_response ->> 'EwayBillDate')::TIMESTAMP, "EwayStatus" = 'ACT', "ValidUpTo" = (eway_response ->> 'ValidUpTo')::TIMESTAMP, "Alerts" = eway_response ->> 'Alerts', "Information" = eway_response ->> 'Information', "Errors" = null where "SalesDebitNoteEwayBillsDetailsId" = invoice_id; elsif is_Error = true then update "10083_10833"."SalesDebitNoteEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "SalesDebitNoteEwayBillsDetailsId" = invoice_id; end if; end if; end if; if invoice_type = 'SDN' then if request_for = 2 then if is_Error = false then update "10083_10833"."SalesDebitNoteEwayBillsDetails" set "CancelDate" = (eway_response ->> 'CancelDate')::TIMESTAMP, "CancelRemark" = (eway_response ->> 'CancelRemark'), "CancelReason" = (eway_response ->> 'CancelReason'), "Errors" = null, "EwayStatus" = 'CNL' where "SalesDebitNoteEwayBillsDetailsId" = invoice_id; elsif is_Error = true then update "10083_10833"."SalesDebitNoteEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "SalesDebitNoteEwayBillsDetailsId" = invoice_id; end if; end if; end if; if invoice_type = 'S' then if request_for = 3 then if is_Error = false then update "10083_10833"."SalesEwayBillsDetails" set "VehicleUpdatedOn" = (eway_response ->> 'VehicleUpdatedOn')::TIMESTAMP, "ValidUpTo" = (eway_response ->> 'ValidUpTo')::TIMESTAMP, "UpdateRemark" = (eway_response ->> 'UpdateRemark'), "UpdateReason" = (eway_response ->> 'UpdateReason') where "SaleId" = invoice_id; elsif is_Error = true then update "10083_10833"."SalesEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "SaleId" = invoice_id; end if; end if; end if; if invoice_type = 'SR' then if request_for = 3 then if is_Error = false then update "10083_10833"."SalesReturnEwayBillsDetails" set "VehicleUpdatedOn" = (eway_response ->> 'VehicleUpdatedOn')::TIMESTAMP, "ValidUpTo" = (eway_response ->> 'ValidUpTo')::TIMESTAMP, "UpdateRemark" = (eway_response ->> 'UpdateRemark'), "UpdateReason" = (eway_response ->> 'UpdateReason') where "SaleReturnId" = invoice_id; elsif is_Error = true then update "10083_10833"."SalesReturnEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "SaleReturnId" = invoice_id; end if; end if; end if; if invoice_type = 'P' then if request_for = 3 then if is_Error = false then update "10083_10833"."PurchaseEwayBillsDetails" set "VehicleUpdatedOn" = (eway_response ->> 'VehicleUpdatedOn')::TIMESTAMP, "ValidUpTo" = (eway_response ->> 'ValidUpTo')::TIMESTAMP, "UpdateRemark" = (eway_response ->> 'UpdateRemark'), "UpdateReason" = (eway_response ->> 'UpdateReason') where "PurchaseId" = invoice_id; elsif is_Error = true then update "10083_10833"."PurchaseEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "PurchaseId" = invoice_id; end if; end if; end if; if invoice_type = 'PR' then if request_for = 3 then if is_Error = false then update "10083_10833"."PurchaseReturnEwayBillsDetails" set "VehicleUpdatedOn" = (eway_response ->> 'VehicleUpdatedOn')::TIMESTAMP, "ValidUpTo" = (eway_response ->> 'ValidUpTo')::TIMESTAMP, "UpdateRemark" = (eway_response ->> 'UpdateRemark'), "UpdateReason" = (eway_response ->> 'UpdateReason') where "PurchaseReturnId" = invoice_id; elsif is_Error = true then update "10083_10833"."PurchaseReturnEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "PurchaseReturnId" = invoice_id; end if; end if; end if; if invoice_type = 'S' then if request_for = 4 then if is_Error = false then update "10083_10833"."SalesEwayBillsDetails" set "ExtendOn" = (eway_response ->> 'ExtendOn')::TIMESTAMP, "ValidUpTo" = (eway_response ->> 'ValidUpTo')::TIMESTAMP, "ExtendRemark" = (eway_response ->> 'ExtendRemark'), "ExtendReason" = (eway_response ->> 'ExtendReason') where "SaleId" = invoice_id; elsif is_Error = true then update "10083_10833"."SalesEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "SaleId" = invoice_id; end if; end if; end if; if invoice_type = 'SR' then if request_for = 4 then if is_Error = false then update "10083_10833"."SalesReturnEwayBillsDetails" set "ExtendOn" = (eway_response ->> 'ExtendOn')::TIMESTAMP, "ValidUpTo" = (eway_response ->> 'ValidUpTo')::TIMESTAMP, "ExtendRemark" = (eway_response ->> 'ExtendRemark'), "ExtendReason" = (eway_response ->> 'ExtendReason') where "SaleReturnId" = invoice_id; elsif is_Error = true then update "10083_10833"."SalesReturnEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "SaleReturnId" = invoice_id; end if; end if; end if; if invoice_type = 'P' then if request_for = 4 then if is_Error = false then update "10083_10833"."PurchaseEwayBillsDetails" set "ExtendOn" = (eway_response ->> 'ExtendOn')::TIMESTAMP, "ValidUpTo" = (eway_response ->> 'ValidUpTo')::TIMESTAMP, "ExtendRemark" = (eway_response ->> 'ExtendRemark'), "ExtendReason" = (eway_response ->> 'ExtendReason') where "PurchaseId" = invoice_id; elsif is_Error = true then update "10083_10833"."PurchaseEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "PurchaseId" = invoice_id; end if; end if; end if; if invoice_type = 'PR' then if request_for = 4 then if is_Error = false then update "10083_10833"."PurchaseReturnEwayBillsDetails" set "ExtendOn" = (eway_response ->> 'ExtendOn')::TIMESTAMP, "ValidUpTo" = (eway_response ->> 'ValidUpTo')::TIMESTAMP, "ExtendRemark" = (eway_response ->> 'ExtendRemark'), "ExtendReason" = (eway_response ->> 'ExtendReason') where "PurchaseReturnId" = invoice_id; elsif is_Error = true then update "10083_10833"."PurchaseReturnEwayBillsDetails" set "Errors" = (eway_response ->> 'Errors'), "EwayStatus" = 'ERR' where "PurchaseReturnId" = invoice_id; end if; end if; end if; end; $$;


ALTER PROCEDURE "10083_10833".eway_response_update_add(IN eway_response jsonb, IN request_for integer, IN is_error boolean) OWNER TO "10083";

--
-- TOC entry 2324 (class 1255 OID 187330)
-- Name: get_gstr1_section_summary(date, date, text); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".get_gstr1_section_summary(IN fromdate date, IN todate date, IN sectionname text, OUT jsondata jsonb)
    LANGUAGE plpgsql
    AS $$ DECLARE companyPos varchar(8); tempJson jsonb; BEGIN CREATE TEMP TABLE company_gst_data AS SELECT "GSTIN" FROM "10083_10833"."GSTSettings"; companyPos := ( SELECT substring("GSTIN" FROM 1 FOR 3) FROM company_gst_data LIMIT 1 ); if sectionname = 'B2B' or sectionname is null then CREATE TEMP TABLE sales_data_for_b2b AS SELECT s."SaleId", 'Sales' AS "DocumentType", s."Date" AS "Date", s."Number" AS "InvoiceNumber", sbt."GSTIN" AS "GSTIN", sbt."MailingName" AS "CustomerName", svd."TotalInvoiceValue" AS "InvoiceValue", SUM(si."TaxableValue") AS "TaxableValue", SUM(si."IGST") AS "IGST", SUM(si."CGST") AS "CGST", SUM(si."SGST") AS "SGST", SUM(si."Cess") AS "CESS" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND s."DocumentStatus" = 1 GROUP BY s."Number", s."Date", sbt."GSTIN", sbt."MailingName", svd."TotalInvoiceValue", s."SaleId"; tempJson := ( SELECT jsonb_agg(jsonb_build_object( 'SaleId', "SaleId", 'DocumentType', "DocumentType", 'Date', "Date", 'InvoiceNumber', "InvoiceNumber", 'GSTIN', "GSTIN", 'CustomerName', "CustomerName", 'InvoiceValue', "InvoiceValue", 'TaxableValue', "TaxableValue", 'IGST', "IGST", 'CGST', "CGST", 'SGST', "SGST", 'CESS', "CESS" )) FROM sales_data_for_b2b ); end if; if sectionname = 'B2CL' or sectionname is null then CREATE TEMP TABLE sales_data_for_b2cl AS SELECT s."SaleId", 'Sales' AS "DocumentType", s."Date" AS "Date", s."Number" AS "InvoiceNumber", sbt."POSCode" AS "POS", sbt."MailingName" AS "CustomerName", svd."TotalInvoiceValue" AS "InvoiceValue", SUM(si."TaxableValue") AS "TaxableValue", SUM(si."IGST") AS "IGST", SUM(si."Cess") AS "CESS" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" = 3 AND s."DocumentStatus" = 1 AND svd."TotalInvoiceValue" > 250000 AND sbt."POSCode" <> companyPos GROUP BY s."Number", s."Date", sbt."POSCode", sbt."MailingName", svd."TotalInvoiceValue", s."SaleId"; tempJson := ( SELECT jsonb_agg(jsonb_build_object( 'SaleId', "SaleId", 'DocumentType', "DocumentType", 'Date', "Date", 'InvoiceNumber', "InvoiceNumber", 'POS', "POS", 'CustomerName', "CustomerName", 'InvoiceValue', "InvoiceValue", 'TaxableValue', "TaxableValue", 'IGST', "IGST", 'CESS', "CESS" )) FROM sales_data_for_b2cl ); end if; if sectionname = 'B2CS' or sectionname is null then CREATE TEMP TABLE sales_data_for_b2cs AS SELECT s."SaleId", 'Sales' AS "DocumentType", sbt."POSCode" AS "POS", si."GstRate" AS "Gst", SUM(si."TaxableValue") AS "TaxableValue", SUM(si."IGST") AS "IGST", SUM(si."CGST") AS "CGST", SUM(si."SGST") AS "SGST", SUM(si."Cess") AS "CESS" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND s."DocumentStatus" = 1 AND c."GSTCategoryCode" = 3 AND ( (svd."TotalInvoiceValue" <= 250000 AND c."GSTCategoryCode" = 3) OR (svd."TotalInvoiceValue" > 250000 AND sbt."POSCode" = companyPos AND c."GSTCategoryCode" = 3) ) GROUP BY sbt."POSCode", si."GstRate", svd."TotalInvoiceValue", s."SaleId"; tempJson := ( SELECT jsonb_agg(jsonb_build_object( 'SaleId', "SaleId", 'DocumentType', "DocumentType", 'POS', "POS", 'Gst', "Gst", 'TaxableValue', "TaxableValue", 'IGST', "IGST", 'CGST', "CGST", 'SGST', "SGST", 'CESS', "CESS" )) FROM sales_data_for_b2cs ); end if; if sectionname = 'CDNR' or sectionname is null then CREATE TEMP TABLE sales_data_for_cdnr AS SELECT s."SaleReturnId" AS "Id", 'SalesReturn' AS "DocumentType", s."Number" AS "InvoiceNumber", srbt."GSTIN" AS "GSTIN", srbt."MailingName" AS "CustomerName", s."WithPaymentOrWithoutPayment" AS "NoteSupplyType", 'C' AS "NoteType", SUM(sri."TaxableValue") AS "TaxableValue", SUM(sri."IGST") AS "IGST", SUM(sri."CGST") AS "CGST", SUM(sri."SGST") AS "SGST", SUM(sri."Cess") AS "CESS" FROM "10083_10833"."SalesReturn" s INNER JOIN "10083_10833"."SalesReturnItems" sri ON s."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnBillTo" srbt ON s."SaleReturnId" = srbt."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnValueDetails" srvd ON s."SaleReturnId" = srvd."SaleReturnId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND s."DocumentStatus" = 1 GROUP BY s."Number", srbt."MailingName", s."WithPaymentOrWithoutPayment", srbt."GSTIN", s."SaleReturnId" UNION ALL SELECT s."SaleDebitNoteId" AS "Id", 'SalesDebitNote' AS "DocumentType", s."Number" AS "InvoiceNumber", sdnbt."GSTIN" AS "GSTIN", sdnbt."MailingName" AS "CustomerName", s."WithPaymentOrWithoutPayment" AS "NoteSupplyType", 'D' AS "NoteType", SUM(sdni."TaxableValue") AS "TaxableValue", SUM(sdni."IGST") AS "IGST", SUM(sdni."CGST") AS "CGST", SUM(sdni."SGST") AS "SGST", SUM(sdni."Cess") AS "CESS" FROM "10083_10833"."SalesDebitNote" s INNER JOIN "10083_10833"."SalesDebitNoteItems" sdni ON s."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteBillTo" sdnbt ON s."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteValueDetails" sdnvd ON s."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND s."DocumentStatus" = 1 GROUP BY s."Number", sdnbt."MailingName", s."WithPaymentOrWithoutPayment", sdnbt."GSTIN", s."SaleDebitNoteId"; tempJson := ( SELECT jsonb_agg(jsonb_build_object( 'Id', "Id", 'DocumentType', "DocumentType", 'InvoiceNumber', "InvoiceNumber", 'GSTIN', "GSTIN", 'CustomerName', "CustomerName", 'NoteSupplyType', "NoteSupplyType", 'NoteType', "NoteType", 'TaxableValue', "TaxableValue", 'IGST', "IGST", 'CGST', "CGST", 'SGST', "SGST", 'CESS', "CESS" )) FROM sales_data_for_cdnr ); end if; if sectionname = 'CDNUR' or sectionname is null then CREATE TEMP TABLE sales_data_for_cdnur AS SELECT s."SaleReturnId" AS "Id", 'SalesReturn' AS "DocumentType", s."Number" AS "InvoiceNumber", s."WithPaymentOrWithoutPayment" AS "NoteSupplyType", 'C' AS "NoteType", SUM(sri."TaxableValue") AS "TaxableValue", SUM(sri."IGST") AS "IGST", SUM(sri."CGST") AS "CGST", SUM(sri."SGST") AS "SGST", SUM(sri."Cess") AS "CESS" FROM "10083_10833"."SalesReturn" s INNER JOIN "10083_10833"."SalesReturnItems" sri ON s."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnBillTo" srbt ON s."SaleReturnId" = srbt."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnValueDetails" srvd ON s."SaleReturnId" = srvd."SaleReturnId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND s."DocumentStatus" = 1 GROUP BY s."Number", s."WithPaymentOrWithoutPayment", s."SaleReturnId" UNION ALL SELECT s."SaleDebitNoteId" AS "Id", 'SalesDebitNote' AS "DocumentType", s."Number" AS "InvoiceNumber", s."WithPaymentOrWithoutPayment" AS "NoteSupplyType", 'D' AS "NoteType", SUM(sdni."TaxableValue") AS "TaxableValue", SUM(sdni."IGST") AS "IGST", SUM(sdni."CGST") AS "CGST", SUM(sdni."SGST") AS "SGST", SUM(sdni."Cess") AS "CESS" FROM "10083_10833"."SalesDebitNote" s INNER JOIN "10083_10833"."SalesDebitNoteItems" sdni ON s."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteBillTo" sdnbt ON s."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteValueDetails" sdnvd ON s."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND s."DocumentStatus" = 1 GROUP BY s."Number", s."WithPaymentOrWithoutPayment", s."SaleDebitNoteId"; tempJson := ( SELECT jsonb_agg(jsonb_build_object( 'Id', "Id", 'DocumentType', "DocumentType", 'InvoiceNumber', "InvoiceNumber", 'NoteSupplyType', "NoteSupplyType", 'NoteType', "NoteType", 'TaxableValue', "TaxableValue", 'IGST', "IGST", 'CGST', "CGST", 'SGST', "SGST", 'CESS', "CESS" )) FROM sales_data_for_cdnur ); end if; IF sectionname IS NULL AND tempJson = '[]'::jsonb THEN jsondata := '{}'::jsonb; ELSE jsondata := tempJson; END IF; EXECUTE 'DROP TABLE IF EXISTS sales_data_for_b2b'; EXECUTE 'DROP TABLE IF EXISTS sales_data_for_b2cl'; EXECUTE 'DROP TABLE IF EXISTS sales_data_for_b2cs'; EXECUTE 'DROP TABLE IF EXISTS sales_data_for_cdnr'; EXECUTE 'DROP TABLE IF EXISTS sales_data_for_cdnur'; EXECUTE 'DROP TABLE IF EXISTS company_gst_data'; END; $$;


ALTER PROCEDURE "10083_10833".get_gstr1_section_summary(IN fromdate date, IN todate date, IN sectionname text, OUT jsondata jsonb) OWNER TO "10083";

--
-- TOC entry 2346 (class 1255 OID 187212)
-- Name: getgstr1json(date, date); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".getgstr1json(IN fromdate date, IN todate date, OUT jsondata jsonb)
    LANGUAGE plpgsql
    AS $$ declare companyPos varchar(2); tempJson jsonb; b2bJson jsonb; b2cJson jsonb; b2clJson jsonb; expJson jsonb; cdnrJson jsonb; cdnurJson jsonb; hsnJson jsonb; doc_issueJson jsonb; nilJson jsonb; begin create temp table company_gst_data as select g."GSTIN" from "10083_10833"."GSTSettings" g; companyPos := ( select substring( "GSTIN" from 0 for 3 ) from company_gst_data limit 1 ); create temp table sales_data_for_b2b as select s."SaleId", coalesce(sbt."GSTIN", '') as "ctin", s."Number" as "inum", to_char(s."Date" , 'DD-MM-YYYY') as "idt", svd."TotalInvoiceValue" as "val", sbt."POSCode" as "pos", s."ReverseCharge" as "rchrg", s."InvoiceType" as "inv_typ", si."GstRate", si."TaxableValue", si."IGST", si."CGST", si."SGST", si."Cess", row_number() over ( partition by s."Number" order by si."ItemSerialNumber" ) as item_num from "10083_10833"."Sales" s join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."DocumentStatus" = 1 and s."Date" between fromdate and todate and si."TaxabilityCode" = 2 and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10); create temp table items_agg as select s."SaleId", json_agg( json_build_object( 'num', si.item_num, 'itm_det', json_build_object( 'rt', si."GstRate", 'txval', si."TaxableValue", 'iamt', si."IGST", 'samt', si."SGST", 'camt', si."CGST", 'csamt', si."Cess" ) ) ) as itms from sales_data_for_b2b si join "10083_10833"."Sales" s on s."SaleId" = si."SaleId" group by s."SaleId"; select jsonb_build_object( 'b2b', json_agg(ctin_group) ) into b2bJson from ( select ctin, json_agg( json_build_object( 'inum', inum, 'idt', idt, 'val', val, 'pos', pos, 'rchrg', rchrg, 'inv_typ', inv_typ, 'itms', itms_agg.itms ) ) as inv from sales_data_for_b2b s join items_agg itms_agg on s."SaleId" = itms_agg."SaleId" group by ctin, inum, idt, val, pos, rchrg, inv_typ ) ctin_group; select jsonb_build_object( 'b2cs', json_agg( json_build_object( 'sply_ty', case when sbt."POSCode" = companyPos then 'INTRA' else 'INTER' end, 'typ' , s."InvoiceType", 'rt', si."GstRate", 'pos', sbt."POSCode", 'txval', si."TaxableValue", 'iamt', si."IGST", 'csamt', si."Cess" ) ) ) into b2cJson from "10083_10833"."Sales" s join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."DocumentStatus" = 1 and s."Date" between fromdate and todate and si."TaxabilityCode" = 2 and ( ( svd."TotalInvoiceValue" <= 250000 and c."GSTCategoryCode" in (3) ) or ( svd."TotalInvoiceValue" > 250000 and sbt."POSCode" = companyPos and c."GSTCategoryCode" in (3) ) ); create temp table sales_data_for_b2cl as select s."SaleId", s."Number" as "inum", to_char(s."Date" , 'DD-MM-YYYY') as "idt", svd."TotalInvoiceValue" as "val", sbt."POSCode" as "pos", s."ReverseCharge" as "rchrg", si."GstRate", si."TaxableValue", si."IGST", si."CGST", si."SGST", si."Cess", row_number() over ( partition by s."Number" order by si."ItemSerialNumber" ) as item_num from "10083_10833"."Sales" s join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."DocumentStatus" = 1 and s."Date" between fromdate and todate and si."TaxabilityCode" = 2 and c."GSTCategoryCode" in (3) and svd."TotalInvoiceValue" > 250000 and sbt."POSCode" <> companyPos; create temp table items_agg_b2cl as select s."SaleId", json_agg( json_build_object( 'num', si.item_num, 'itm_det', json_build_object( 'rt', si."GstRate", 'txval', si."TaxableValue", 'iamt', si."IGST", 'csamt', si."Cess" ) ) ) as itms from sales_data_for_b2cl si join "10083_10833"."Sales" s on s."SaleId" = si."SaleId" group by s."SaleId"; select jsonb_build_object( 'b2cl', json_agg(pos_group) ) into b2clJson from ( select pos, json_agg( json_build_object( 'inum', inum, 'idt', idt, 'val', val, 'itms', itms_agg.itms ) ) as inv from sales_data_for_b2cl s join items_agg_b2cl itms_agg on s."SaleId" = itms_agg."SaleId" group by pos, inum, idt, val ) pos_group; create temp table sales_data_for_exp as select s."SaleId", s."InvoiceType" as "exp_typ", s."Number" as "inum", to_char(s."Date" , 'DD-MM-YYYY') as "idt" , svd."TotalInvoiceValue" as "val", sed."ShippingBillNumber" as "sbnum", to_char(sed."ShippingBillDate" , 'DD-MM-YYYY') as "sbdt", sed."PortCode" as "sbpcode", si."GstRate", si."TaxableValue", si."IGST", si."CGST", si."SGST", si."Cess" from "10083_10833"."Sales" s join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" left join "10083_10833"."SalesExportDetails" sed on s."SaleId" = sed."SaleId" join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."DocumentStatus" = 1 and s."Date" between fromdate and todate and si."TaxabilityCode" = 2 and c."GSTCategoryCode" in (5); create temp table items_agg_exp as select s."SaleId", json_agg( json_build_object( 'rt', si."GstRate", 'txval', si."TaxableValue", 'iamt', si."IGST", 'csamt', si."Cess" ) ) as itms from sales_data_for_exp si join "10083_10833"."Sales" s on s."SaleId" = si."SaleId" group by s."SaleId"; select jsonb_build_object( 'exp', json_agg(exp_group) ) into expJson from ( select exp_typ, json_agg( json_build_object( 'inum', inum, 'idt', idt, 'val', val, 'sbpcode', sbpcode, 'sbnum', sbnum, 'sbdt', sbdt, 'itms', itms_agg.itms ) ) as inv from sales_data_for_exp s join items_agg_exp itms_agg on s."SaleId" = itms_agg."SaleId" group by exp_typ, inum, idt, val ) exp_group; create temp table sales_data_for_cdnr as select s."SaleReturnId" as "doc_id", coalesce(srbt."GSTIN", '') as "ctin", 'C' as "ntty", s."Number" as "nt_num", to_char(s."Date" , 'DD-MM-YYYY') as "nt_dt", srvd."TotalInvoiceValue" as "val", srbt."POSCode" as "pos", s."ReverseCharge" as "rchrg", s."InvoiceType" as "inv_typ", sri."GstRate", sri."TaxableValue", sri."IGST", sri."CGST", sri."SGST", sri."Cess", row_number() over (partition by s."Number" order by sri."ItemSerialNumber") as item_num from "10083_10833"."SalesReturn" s left join "10083_10833"."SalesReturnBillTo" srbt on s."SaleReturnId" = srbt."SaleReturnId" join "10083_10833"."SalesReturnItems" sri on s."SaleReturnId" = sri."SaleReturnId" left join "10083_10833"."SalesReturnValueDetails" srvd on s."SaleReturnId" = srvd."SaleReturnId" join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."DocumentStatus" = 1 and s."Date" between fromdate and todate and sri."TaxabilityCode" = 2 and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) union all select s."SaleDebitNoteId" as "doc_id", coalesce(sdnbt."GSTIN", '') as "ctin", 'D' as "ntty", s."Number" as "nt_num", to_char(s."Date" , 'DD-MM-YYYY') as "nt_dt", sdnvd."TotalInvoiceValue" as "val", sdnbt."POSCode" as "pos", s."ReverseCharge" as "rchrg", s."InvoiceType" as "inv_typ", sdni."GstRate", sdni."TaxableValue", sdni."IGST", sdni."CGST", sdni."SGST", sdni."Cess", row_number() over (partition by s."Number" order by sdni."ItemSerialNumber") as item_num from "10083_10833"."SalesDebitNote" s left join "10083_10833"."SalesDebitNoteBillTo" sdnbt on s."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" join "10083_10833"."SalesDebitNoteItems" sdni on s."SaleDebitNoteId" = sdni."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteValueDetails" sdnvd on s."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."DocumentStatus" = 1 and s."Date" between fromdate and todate and sdni."TaxabilityCode" = 2 and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10); create temp table items_agg_cdnr as select s."SaleReturnId" as "doc_id", si.ntty, json_agg( json_build_object( 'num' , item_num , 'itm_det', json_build_object( 'rt', si."GstRate", 'txval', si."TaxableValue", 'iamt', si."IGST", 'csamt', si."Cess" ) ) ) as itms from sales_data_for_cdnr si join "10083_10833"."SalesReturn" s on s."SaleReturnId" = si."doc_id" where si.ntty = 'C' group by s."SaleReturnId" , ntty union all select s."SaleDebitNoteId" as "doc_id", si.ntty, json_agg( json_build_object( 'num' , item_num , 'itm_det', json_build_object( 'rt', si."GstRate", 'txval', si."TaxableValue", 'iamt', si."IGST", 'csamt', si."Cess" ) ) ) as itms from sales_data_for_cdnr si join "10083_10833"."SalesDebitNote" s on s."SaleDebitNoteId" = si."doc_id" where si.ntty = 'D' group by s."SaleDebitNoteId" , ntty; select jsonb_build_object('cdnr', json_agg(ctin_group)) into cdnrJson from ( select ctin, json_agg( json_build_object( 'ntty', s.ntty, 'nt_num', nt_num, 'nt_dt', nt_dt, 'val', val, 'pos', pos, 'rchrg', rchrg, 'inv_typ', inv_typ, 'itms', itms_agg.itms ) ) as nt from sales_data_for_cdnr s join items_agg_cdnr itms_agg on s."doc_id" = itms_agg."doc_id" and s."ntty" = itms_agg."ntty" group by ctin, s.ntty, nt_dt, val, pos, rchrg, inv_typ ) ctin_group; create temp table sales_data_for_cdnur as select s."SaleReturnId" as "doc_id", 'C' as "ntty", s."Number" as "nt_num", to_char(s."Date" , 'DD-MM-YYYY') as "nt_dt", srvd."TotalInvoiceValue" as "val", srbt."POSCode" as "pos", s."InvoiceType" as "inv_typ", sri."GstRate", sri."TaxableValue", sri."IGST", sri."Cess", row_number() over (partition by s."Number" order by sri."ItemSerialNumber") as item_num from "10083_10833"."SalesReturn" s left join "10083_10833"."SalesReturnBillTo" srbt on s."SaleReturnId" = srbt."SaleReturnId" join "10083_10833"."SalesReturnItems" sri on s."SaleReturnId" = sri."SaleReturnId" left join "10083_10833"."SalesReturnValueDetails" srvd on s."SaleReturnId" = srvd."SaleReturnId" join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."DocumentStatus" = 1 and s."Date" between fromdate and todate and sri."TaxabilityCode" = 2 and c."GSTCategoryCode" in (3, 5) union all select s."SaleDebitNoteId" as "doc_id", 'D' as "ntty", s."Number" as "nt_num", to_char(s."Date" , 'DD-MM-YYYY') as "nt_dt", sdnvd."TotalInvoiceValue" as "val", sdnbt."POSCode" as "pos", s."InvoiceType" as "inv_typ", sdni."TaxableValue", sdni."GstRate", sdni."IGST", sdni."Cess", row_number() over (partition by s."Number" order by sdni."ItemSerialNumber") as item_num from "10083_10833"."SalesDebitNote" s left join "10083_10833"."SalesDebitNoteBillTo" sdnbt on s."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" join "10083_10833"."SalesDebitNoteItems" sdni on s."SaleDebitNoteId" = sdni."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteValueDetails" sdnvd on s."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."DocumentStatus" = 1 and s."Date" between fromdate and todate and sdni."TaxabilityCode" = 2 and c."GSTCategoryCode" in (3, 5); create temp table items_agg_cdnur as select s."SaleReturnId" as "doc_id", si."ntty", json_agg( json_build_object( 'num', item_num, 'itm_det', json_build_object( 'rt', si."GstRate", 'txval', si."TaxableValue", 'iamt', si."IGST", 'csamt', si."Cess" ) ) ) as itms from sales_data_for_cdnur si join "10083_10833"."SalesReturn" s on s."SaleReturnId" = si."doc_id" where si."ntty" = 'C' group by ntty, s."SaleReturnId" union all select s."SaleDebitNoteId" as "doc_id", si."ntty", json_agg( json_build_object( 'num', item_num, 'itm_det', json_build_object( 'rt', si."GstRate", 'txval', si."TaxableValue", 'iamt', si."IGST", 'csamt', si."Cess" ) ) ) as itms from sales_data_for_cdnur si join "10083_10833"."SalesDebitNote" s on s."SaleDebitNoteId" = si."doc_id" where si."ntty" = 'D' group by ntty, s."SaleDebitNoteId" ; select jsonb_build_object( 'cdnur', jsonb_agg(jsonb_build_object( 'typ', s."inv_typ", 'ntty', s."ntty", 'nt_num', s."nt_num", 'nt_dt', s."nt_dt", 'pos', s."pos", 'val', s."val", 'itms', itms_agg.itms ) ) ) into cdnurJson from sales_data_for_cdnur s join items_agg_cdnur itms_agg on s."doc_id" = itms_agg."doc_id" and s."ntty" = itms_agg."ntty" group by s."inv_typ", s."ntty", s."nt_num", s."nt_dt", s."pos"; create temp table sales_data_for_hsn as select S."SaleId" as "doc_id", coalesce(SUM(SI."Quantity"), 0) as "Quantity", coalesce(SUM(SI."ItemSerialNumber"), 0) as "ItemSerialNumber", coalesce(SUM(SI."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(SI."IGST"), 0) as "IGST", coalesce(SUM(SI."Cess"), 0) as "Cess", coalesce(SUM(SI."CGST"), 0) as "CGST", coalesce(SUM(SI."SGST"), 0) as "SGST", coalesce(SI."HSNSAC") as "HSNSAC", coalesce(SI."ItemDescription") as "ItemDescription", coalesce(SI."GstRate", 0) as "GstRate", coalesce(SU."UQCCode") as "UQCCode" from "10083_10833"."SalesItems" as SI join "10083_10833"."StockItem" as STI on SI."StockItemId" = STI."StockItemId" join "10083_10833"."SimpleUnit" as SU on STI."UOMId" = SU."SimpleUnitId" join "10083_10833"."Sales" as S on SI."SaleId" = S."SaleId" join "10083_10833"."Customer" C on S."CustomerId" = C."CustomerId" where S."Date" between fromdate and todate and C."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) and SI."TaxabilityCode" in (2) group by SI."HSNSAC", SI."ItemDescription", SI."GstRate", SU."UQCCode", S."SaleId" union all select SR."SaleReturnId" as "doc_id", coalesce(SUM(SRI."Quantity"), 0) as "Quantity", coalesce(SUM(SRI."ItemSerialNumber"), 0) as "ItemSerialNumber", coalesce(SUM(SRI."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(SRI."IGST"), 0) as "IGST", coalesce(SUM(SRI."Cess"), 0) as "Cess", coalesce(SUM(SRI."CGST"), 0) as "CGST", coalesce(SUM(SRI."SGST"), 0) as "SGST", coalesce(SRI."HSNSAC") as "HSNSAC", coalesce(SRI."ItemDescription") as "ItemDescription", coalesce(SRI."GstRate", 0) as "GstRate", coalesce(SU."UQCCode") as "UQCCode" from "10083_10833"."SalesReturnItems" as SRI join "10083_10833"."StockItem" as STI on SRI."StockItemId" = STI."StockItemId" join "10083_10833"."SimpleUnit" as SU on STI."UOMId" = SU."SimpleUnitId" join "10083_10833"."SalesReturn" as SR on SRI."SaleReturnId" = SR."SaleReturnId" join "10083_10833"."Customer" C on SR."CustomerId" = C."CustomerId" where SR."Date" between fromdate and todate and C."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) and SRI."TaxabilityCode" in (2) group by SR."SaleReturnId", SRI."HSNSAC", SRI."ItemDescription", SRI."GstRate", SU."UQCCode" union all select SDN."SaleDebitNoteId" as "doc_id", coalesce(SUM(SDNI."Quantity"), 0) as "Quantity", coalesce(SUM(SDNI."ItemSerialNumber"), 0) as "ItemSerialNumber", coalesce(SUM(SDNI."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(SDNI."IGST"), 0) as "IGST", coalesce(SUM(SDNI."Cess"), 0) as "Cess", coalesce(SUM(SDNI."CGST"), 0) as "CGST", coalesce(SUM(SDNI."SGST"), 0) as "SGST", coalesce(SDNI."HSNSAC") as "HSNSAC", coalesce(SDNI."ItemDescription") as "ItemDescription", coalesce(SDNI."GstRate", 0) as "GstRate", coalesce(SU."UQCCode") as "UQCCode" from "10083_10833"."SalesDebitNoteItems" as SDNI join "10083_10833"."StockItem" as STI on SDNI."StockItemId" = STI."StockItemId" join "10083_10833"."SimpleUnit" as SU on STI."UOMId" = SU."SimpleUnitId" join "10083_10833"."SalesDebitNote" as SDN on SDNI."SaleDebitNoteId" = SDN."SaleDebitNoteId" join "10083_10833"."Customer" C on SDN."CustomerId" = C."CustomerId" where SDN."Date" between fromdate and todate and C."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) and SDNI."TaxabilityCode" in (2) group by SDN."SaleDebitNoteId", SDNI."HSNSAC", SDNI."ItemDescription", SDNI."GstRate", SU."UQCCode"; create temp table items_agg_hsn as select s."SaleId" as "doc_id" , 'data', json_agg( json_build_object( 'num', si."ItemSerialNumber", 'hsn_sc', si."HSNSAC", 'desc', si."ItemDescription", 'uqc', si."UQCCode", 'qty', si."Quantity", 'txval', si."TaxableValue", 'iamt', si."IGST", 'camt', si ."CGST", 'samt', si."SGST", 'csamt', si."Cess", 'rt', si."GstRate" )) as itms from sales_data_for_hsn si join "10083_10833"."SalesItems" s on s."SaleId" = si."doc_id" group by s."SaleId" union all select s."SaleReturnId" as "doc_id" , 'data', json_agg( json_build_object( 'num', si."ItemSerialNumber", 'hsn_sc', si."HSNSAC", 'desc', si."ItemDescription", 'uqc', si."UQCCode", 'qty', si."Quantity", 'txval', si."TaxableValue", 'iamt', si."IGST", 'camt', si ."CGST", 'samt', si."SGST", 'csamt', si."Cess", 'rt', si."GstRate" )) as itms from sales_data_for_hsn si join "10083_10833"."SalesReturnItems" s on s."SaleReturnId" = si."doc_id" group by s."SaleReturnId" union all select s."SaleDebitNoteId" as "doc_id" , 'data', json_agg( json_build_object( 'num', si."ItemSerialNumber", 'hsn_sc', si."HSNSAC", 'desc', si."ItemDescription", 'uqc', si."UQCCode", 'qty', si."Quantity", 'txval', si."TaxableValue", 'iamt', si."IGST", 'camt', si ."CGST", 'samt', si."SGST", 'csamt', si."Cess", 'rt', si."GstRate" )) as itms from sales_data_for_hsn si join "10083_10833"."SalesDebitNoteItems" s on s."SaleDebitNoteId" = si."doc_id" group by s."SaleDebitNoteId" ; select jsonb_build_object('hsn', jsonb_build_object('data', itms_agg.itms)) into hsnJson from sales_data_for_hsn s join items_agg_hsn itms_agg on s."doc_id" = itms_agg."doc_id"; create temp table sales_data_for_doc_issue as select '1' as "num", '1' as "doc_num", 'S' as "DocumentType", MIN(s."Number") as "fromData", MAX(s."Number") as "toData", COUNT(s."SaleId") as "TotalNo", SUM(case when s."DocumentStatus" = 2 then 1 else 0 end) as "Cancellated", (COUNT(s."SaleId") - SUM(case when s."DocumentStatus" = 2 then 1 else 0 end)) as "NetIssued" from "10083_10833"."Sales" s join "10083_10833"."SalesItems" as si on s."SaleId" = si."SaleId" join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 8) and s."DocumentStatus" in (1, 2) and si."TaxabilityCode" in (2, 3, 4, 5) union all select '1' as "num", '5' as "doc_num", 'SR' as "DocumentType", MIN(sr."Number") as "fromData", MAX(sr."Number") as "toData", COUNT(sr."SaleReturnId") as "TotalNo", SUM(case when sr."DocumentStatus" = 2 then 1 else 0 end) as "Cancellated", (COUNT(sr."SaleReturnId") - SUM(case when sr."DocumentStatus" = 2 then 1 else 0 end)) as "NetIssued" from "10083_10833"."SalesReturn" sr join "10083_10833"."SalesReturnItems" as sri on sr."SaleReturnId" = sri."SaleReturnId" join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 8) and sr."DocumentStatus" in (1, 2) and sri."TaxabilityCode" in (2, 3, 4, 5) union all select '1' as "num", '4' as "doc_num", 'SDN' as "DocumentType", MIN(sdn."Number") as "fromData", MAX(sdn."Number") as "toData", COUNT(sdn."SaleDebitNoteId") as "TotalNo", SUM(case when sdn."DocumentStatus" = 2 then 1 else 0 end) as "Cancellated", (COUNT(sdn."SaleDebitNoteId") - SUM(case when sdn."DocumentStatus" = 2 then 1 else 0 end)) as "NetIssued" from "10083_10833"."SalesDebitNote" sdn join "10083_10833"."SalesDebitNoteItems" as sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 8) and sdn."DocumentStatus" in (1, 2) and sdni."TaxabilityCode" in (2, 3, 4, 5); create temp table items_agg_doc_issue as select si."DocumentType", json_build_object( 'doc_num', si."doc_num", 'docs', json_agg( json_build_object( 'num', si."num", 'from', si."fromData", 'to', si."toData", 'totnum', si."TotalNo", 'cancel', si."Cancellated", 'net_issue', si."NetIssued" ) ) ) as itms from sales_data_for_doc_issue si group by si."doc_num", si."DocumentType"; select jsonb_build_object( 'doc_issue', json_build_object( 'doc_det', json_agg(itms_agg.itms) ) ) into doc_issueJson from items_agg_doc_issue itms_agg; create temp table sales_data_for_nil as select "sply_ty", sum("expt_amt") as "expt_amt", sum("nil_amt") as "nil_amt", sum("ngsup_amt") as "ngsup_amt" from ( select 'S' as "DocumentType", case when c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 10) and sbt."POSCode" <> companyPos then 'INTERB2B' when c."GSTCategoryCode" in (3, 9) and sbt."POSCode" <> companyPos then 'INTERB2C' when c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 10) and sbt."POSCode" = companyPos then 'INTRAB2B' when c."GSTCategoryCode" in (3, 9) and sbt."POSCode" = companyPos then 'INTRAB2C' end as "sply_ty", coalesce(SUM(case when si."TaxabilityCode" = 3 then si."TaxableValue" else 0 end), 0) as "expt_amt", coalesce(SUM(case when si."TaxabilityCode" = 4 then si."TaxableValue" else 0 end), 0) as "nil_amt", coalesce(SUM(case when si."TaxabilityCode" = 5 then si."TaxableValue" else 0 end), 0) as "ngsup_amt" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 3, 4, 6, 7, 8, 9, 10) and s."DocumentStatus" = 1 group by c."GSTCategoryCode", sbt."POSCode" union all select 'SR' as "DocumentType", case when c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 10) and srbt."POSCode" <> companyPos then 'INTERB2B' when c."GSTCategoryCode" in (3, 9) and srbt."POSCode" <> companyPos then 'INTERB2C' when c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 10) and srbt."POSCode" = companyPos then 'INTRAB2B' when c."GSTCategoryCode" in (3, 9) and srbt."POSCode" = companyPos then 'INTRAB2C' end as "sply_ty", coalesce(SUM(case when sri."TaxabilityCode" = 3 then sri."TaxableValue" else 0 end), 0) as "expt_amt", coalesce(SUM(case when sri."TaxabilityCode" = 4 then sri."TaxableValue" else 0 end), 0) as "nil_amt", coalesce(SUM(case when sri."TaxabilityCode" = 5 then sri."TaxableValue" else 0 end), 0) as "ngsup_amt" from "10083_10833"."SalesReturn" sr inner join "10083_10833"."SalesReturnItems" sri on sr."SaleReturnId" = sri."SaleReturnId" left join "10083_10833"."SalesReturnBillTo" srbt on sr."SaleReturnId" = srbt."SaleReturnId" inner join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 3, 4, 6, 7, 8, 9, 10) and sr."DocumentStatus" = 1 group by c."GSTCategoryCode", srbt."POSCode" union all select 'SDN' as "DocumentType", case when c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 10) and sdnbt."POSCode" <> companyPos then 'INTERB2B' when c."GSTCategoryCode" in (3, 9) and sdnbt."POSCode" <> companyPos then 'INTERB2C' when c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 10) and sdnbt."POSCode" = companyPos then 'INTRAB2B' when c."GSTCategoryCode" in (3, 9) and sdnbt."POSCode" = companyPos then 'INTRAB2C' end as "sply_ty", coalesce(SUM(case when sdni."TaxabilityCode" = 3 then sdni."TaxableValue" else 0 end), 0) as "expt_amt", coalesce(SUM(case when sdni."TaxabilityCode" = 4 then sdni."TaxableValue" else 0 end), 0) as "nil_amt", coalesce(SUM(case when sdni."TaxabilityCode" = 5 then sdni."TaxableValue" else 0 end), 0) as "ngsup_amt" from "10083_10833"."SalesDebitNote" sdn inner join "10083_10833"."SalesDebitNoteItems" sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteBillTo" sdnbt on sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" inner join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 3, 4, 6, 7, 8, 9, 10) and sdn."DocumentStatus" = 1 group by c."GSTCategoryCode", sdnbt."POSCode" ) as result group by result."sply_ty"; select jsonb_build_object('nil', json_build_object('inv', json_agg( jsonb_build_object( 'sply_ty', s."sply_ty", 'expt_amt', s."expt_amt", 'nil_amt', s."nil_amt", 'ngsup_amt', s."ngsup_amt" ) ))) into nilJson from sales_data_for_nil s; b2bJson := coalesce(b2bJson, '{}'); b2cJson := coalesce(b2cJson, '{}'); b2clJson := coalesce(b2clJson, '{}'); expJson := coalesce(expJson, '{}'); cdnrJson := coalesce(cdnrJson, '{}'); cdnurJson := coalesce(cdnurJson, '{}'); hsnJson := coalesce(hsnJson, '{}'); doc_issueJson := coalesce(doc_issueJson, '{}'); nilJson := coalesce(nilJson, '{}'); tempJson := b2bJson || b2cJson || b2clJson || expJson || cdnrJson || cdnurJson || hsnJson || doc_issueJson || nilJson; tempJson := tempJson || jsonb_build_object( 'gstin', ( select "GSTIN" from company_gst_data limit 1 ) ); tempJson := tempJson || jsonb_build_object( 'fp', '032018' ); jsondata := tempJson; drop table company_gst_data; drop table sales_data_for_b2b; drop table sales_data_for_b2cl; drop table sales_data_for_exp; drop table sales_data_for_cdnr; drop table sales_data_for_cdnur; drop table sales_data_for_hsn; drop table sales_data_for_doc_issue; drop table sales_data_for_nil; drop table items_agg; drop table items_agg_b2cl; drop table items_agg_exp; drop table items_agg_cdnr; drop table items_agg_cdnur; drop table items_agg_hsn; drop table items_agg_doc_issue; end; $$;


ALTER PROCEDURE "10083_10833".getgstr1json(IN fromdate date, IN todate date, OUT jsondata jsonb) OWNER TO "10083";

--
-- TOC entry 2342 (class 1255 OID 187331)
-- Name: getgstr1sectiondata(date, date, character varying, character, character); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".getgstr1sectiondata(IN fromdate date, IN todate date, IN sectiontype character varying, IN companypos character, OUT jsondata jsonb, IN pos character DEFAULT '00'::bpchar)
    LANGUAGE plpgsql
    AS $$ begin CASE sectiontype WHEN 'B2B' THEN SELECT json_agg(result) into jsondata FROM ( SELECT s."SaleId" AS "DocId", 'S' AS "DocumentType", s."Date" AS "Date", s."Number" AS "InvoiceNumber", sbt."GSTIN" AS "GSTIN", sbt."MailingName" AS "CustomerName", svd."TotalInvoiceValue" AS "InvoiceValue", COALESCE(SUM(si."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(si."IGST"), 0) AS "IGST", COALESCE(SUM(si."CGST"), 0) AS "CGST", COALESCE(SUM(si."SGST"), 0) AS "SGST", COALESCE(SUM(si."Cess"), 0) AS "CESS" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND s."DocumentStatus" = 1 AND si."TaxabilityCode" = 2 GROUP BY s."SaleId", s."Date", s."Number", sbt."GSTIN", sbt."MailingName", svd."TotalInvoiceValue" ) AS result; WHEN 'CDN' THEN SELECT json_agg(result) into jsondata FROM ( SELECT 'CDNR' AS "SectionName", COALESCE(SUM("NumberOfDocument"), 0) AS "NumberOfDocument", COALESCE(SUM("OutwardSupply"), 0) AS "OutwardSupply", COALESCE(SUM("IGST"), 0) AS "IGST", COALESCE(SUM("CGST"), 0) AS "CGST", COALESCE(SUM("SGST"), 0) AS "SGST", COALESCE(SUM("CESS"), 0) AS "CESS", COALESCE(SUM("TotalTax"), 0) AS "TotalTax" FROM ( SELECT COUNT(s."SaleReturnId") AS "NumberOfDocument", -COALESCE(SUM(sri."TaxableValue"), 0) AS "OutwardSupply", -COALESCE(SUM(sri."IGST"), 0) AS "IGST", -COALESCE(SUM(sri."CGST"), 0) AS "CGST", -COALESCE(SUM(sri."SGST"), 0) AS "SGST", -COALESCE(SUM(sri."Cess"), 0) AS "CESS", -COALESCE(SUM(sri."IGST" + sri."CGST" + sri."SGST" + sri."Cess"), 0) AS "TotalTax" FROM "10083_10833"."SalesReturn" s JOIN "10083_10833"."SalesReturnItems" sri ON s."SaleReturnId" = sri."SaleReturnId" JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."DocumentStatus" = 1 AND s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND sri."TaxabilityCode" = 2 UNION ALL SELECT COUNT(s."SaleDebitNoteId") AS "NumberOfDocument", COALESCE(SUM(sdni."TaxableValue"), 0) AS "OutwardSupply", COALESCE(SUM(sdni."IGST"), 0) AS "IGST", COALESCE(SUM(sdni."CGST"), 0) AS "CGST", COALESCE(SUM(sdni."SGST"), 0) AS "SGST", COALESCE(SUM(sdni."Cess"), 0) AS "CESS", COALESCE(SUM(sdni."IGST" + sdni."CGST" + sdni."SGST" + sdni."Cess"), 0) AS "TotalTax" FROM "10083_10833"."SalesDebitNote" s JOIN "10083_10833"."SalesDebitNoteItems" sdni ON s."SaleDebitNoteId" = sdni."SaleDebitNoteId" JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."DocumentStatus" = 1 AND s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND sdni."TaxabilityCode" = 2 ) AS combinedData UNION ALL SELECT 'CDNUR' AS "SectionName", COALESCE(SUM("NumberOfDocument"), 0) AS "NumberOfDocument", COALESCE(SUM("OutwardSupply"), 0) AS "OutwardSupply", COALESCE(SUM("IGST"), 0) AS "IGST", COALESCE(SUM("CGST"), 0) AS "CGST", COALESCE(SUM("SGST"), 0) AS "SGST", COALESCE(SUM("CESS"), 0) AS "CESS", COALESCE(SUM("TotalTax"), 0) AS "TotalTax" FROM ( SELECT COUNT(s."SaleReturnId") AS "NumberOfDocument", -COALESCE(SUM(sri."TaxableValue"), 0) AS "OutwardSupply", -COALESCE(SUM(sri."IGST"), 0) AS "IGST", -COALESCE(SUM(sri."CGST"), 0) AS "CGST", -COALESCE(SUM(sri."SGST"), 0) AS "SGST", -COALESCE(SUM(sri."Cess"), 0) AS "CESS", -COALESCE(SUM(sri."IGST" + sri."CGST" + sri."SGST" + sri."Cess"), 0) AS "TotalTax" FROM "10083_10833"."SalesReturn" s JOIN "10083_10833"."SalesReturnItems" sri ON s."SaleReturnId" = sri."SaleReturnId" JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."DocumentStatus" = 1 AND s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND sri."TaxabilityCode" = 2 UNION ALL SELECT COUNT(s."SaleDebitNoteId") AS "NumberOfDocument", COALESCE(SUM(sdni."TaxableValue"), 0) AS "OutwardSupply", COALESCE(SUM(sdni."IGST"), 0) AS "IGST", COALESCE(SUM(sdni."CGST"), 0) AS "CGST", COALESCE(SUM(sdni."SGST"), 0) AS "SGST", COALESCE(SUM(sdni."Cess"), 0) AS "CESS", COALESCE(SUM(sdni."IGST" + sdni."CGST" + sdni."SGST" + sdni."Cess"), 0) AS "TotalTax" FROM "10083_10833"."SalesDebitNote" s JOIN "10083_10833"."SalesDebitNoteItems" sdni ON s."SaleDebitNoteId" = sdni."SaleDebitNoteId" JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."DocumentStatus" = 1 AND s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND sdni."TaxabilityCode" = 2 ) AS combinedData ) AS result; WHEN 'CDNR' THEN SELECT json_agg(result) into jsondata FROM ( select "DocId", "DocumentType", "InvoiceNumber", "GSTIN", "CustomerName", "NoteSupplyType", "NoteType", "TaxableValue", "IGST", "CGST", "SGST", "CESS" from ( SELECT s."SaleReturnId" AS "DocId", 'SR' AS "DocumentType", s."Number" AS "InvoiceNumber", srbt."GSTIN" AS "GSTIN", srbt."MailingName" AS "CustomerName", s."WithPaymentOrWithoutPayment" AS "NoteSupplyType", 'C' AS "NoteType", COALESCE(SUM(sri."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sri."IGST"), 0) AS "IGST", COALESCE(SUM(sri."CGST"), 0) AS "CGST", COALESCE(SUM(sri."SGST"), 0) AS "SGST", COALESCE(SUM(sri."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesReturn" s INNER JOIN "10083_10833"."SalesReturnItems" sri ON s."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnBillTo" srbt ON s."SaleReturnId" = srbt."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnValueDetails" srvd ON s."SaleReturnId" = srvd."SaleReturnId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND s."DocumentStatus" = 1 AND sri."TaxabilityCode" = 2 GROUP BY s."Number", srbt."MailingName", s."WithPaymentOrWithoutPayment", srbt."GSTIN", s."SaleReturnId" union all SELECT s."SaleDebitNoteId" AS "DocId", 'SDN' AS "DocumentType", s."Number" AS "InvoiceNumber", sdnbt."GSTIN" AS "GSTIN", sdnbt."MailingName" AS "CustomerName", s."WithPaymentOrWithoutPayment" AS "NoteSupplyType", 'D' AS "NoteType", COALESCE(SUM(sdni."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sdni."IGST"), 0) AS "IGST", COALESCE(SUM(sdni."CGST"), 0) AS "CGST", COALESCE(SUM(sdni."SGST"), 0) AS "SGST", COALESCE(SUM(sdni."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesDebitNote" s INNER JOIN "10083_10833"."SalesDebitNoteItems" sdni ON s."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteBillTo" sdnbt ON s."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteValueDetails" sdnvd ON s."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND s."DocumentStatus" = 1 AND sdni."TaxabilityCode" = 2 GROUP BY s."Number", sdnbt."MailingName", s."WithPaymentOrWithoutPayment", sdnbt."GSTIN", s."SaleDebitNoteId" ) AS combinedData ) AS result; WHEN 'CDNUR' THEN SELECT json_agg(result) INTO jsondata FROM ( SELECT "DocId", "DocumentType", "InvoiceNumber", "NoteSupplyType", "NoteType", "TaxableValue", "IGST", "CGST", "SGST", "CESS" from ( SELECT s."SaleReturnId" AS "DocId", 'SR' AS "DocumentType", s."Number" AS "InvoiceNumber", s."WithPaymentOrWithoutPayment" AS "NoteSupplyType", 'C' AS "NoteType", COALESCE(SUM(sri."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sri."IGST"), 0) AS "IGST", COALESCE(SUM(sri."CGST"), 0) AS "CGST", COALESCE(SUM(sri."SGST"), 0) AS "SGST", COALESCE(SUM(sri."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesReturn" s INNER JOIN "10083_10833"."SalesReturnItems" sri ON s."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnBillTo" srbt ON s."SaleReturnId" = srbt."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnValueDetails" srvd ON s."SaleReturnId" = srvd."SaleReturnId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND s."DocumentStatus" = 1 AND sri."TaxabilityCode" = 2 GROUP BY s."Number", s."WithPaymentOrWithoutPayment", s."SaleReturnId" union all SELECT s."SaleDebitNoteId" AS "DocId", 'SDN' AS "DocumentType", s."Number" AS "InvoiceNumber", s."WithPaymentOrWithoutPayment" AS "NoteSupplyType", 'D' AS "NoteType", COALESCE(SUM(sdni."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sdni."IGST"), 0) AS "IGST", COALESCE(SUM(sdni."CGST"), 0) AS "CGST", COALESCE(SUM(sdni."SGST"), 0) AS "SGST", COALESCE(SUM(sdni."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesDebitNote" s INNER JOIN "10083_10833"."SalesDebitNoteItems" sdni ON s."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteBillTo" sdnbt ON s."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteValueDetails" sdnvd ON s."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND s."DocumentStatus" = 1 AND sdni."TaxabilityCode" = 2 GROUP BY s."Number", s."WithPaymentOrWithoutPayment", s."SaleDebitNoteId" ) AS combinedData ) AS result; WHEN 'B2CS_POS' then SELECT json_agg(result) into jsondata FROM ( SELECT s."SaleId" as "DocId", 'S' AS "DocumentType", sbt."MailingName" AS "CustomerName", sbt."POSName" AS "POSName", s."Number" AS "InvoiceNumber", COALESCE(svd."TotalInvoiceValue", 0) AS "InvoiceValue", s."Date" AS "Date", COALESCE(SUM(si."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(si."IGST"), 0) AS "IGST", COALESCE(SUM(si."CGST"), 0) AS "CGST", COALESCE(SUM(si."SGST"), 0) AS "SGST", COALESCE(SUM(si."Cess"), 0) AS "CESS" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND s."DocumentStatus" = 1 AND c."GSTCategoryCode" = 3 AND si."TaxabilityCode" = 2 AND sbt."POSCode" = pos AND ( (svd."TotalInvoiceValue" <= 250000) OR (svd."TotalInvoiceValue" > 250000 AND sbt."POSCode" = companypos) ) GROUP BY s."SaleId", s."Number", sbt."POSName", sbt."POSCode", sbt."MailingName", svd."TotalInvoiceValue" ORDER BY sbt."POSCode" ) AS result; WHEN 'B2CS' THEN SELECT json_agg(result) into jsondata FROM ( SELECT sbt."POSName", sbt."POSCode", CASE WHEN sbt."POSCode" = companypos THEN 'Intra' ELSE 'Inter' END AS "SupplyType", COALESCE(SUM(si."TaxableValue"), 0) AS "TaxableValue", COALESCE(si."GstRate", 0) AS "Gst", COALESCE(SUM(si."IGST"), 0) AS "IGST", COALESCE(SUM(si."CGST"), 0) AS "CGST", COALESCE(SUM(si."SGST"), 0) AS "SGST", COALESCE(SUM(si."Cess"), 0) AS "CESS" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND s."DocumentStatus" = 1 AND c."GSTCategoryCode" = 3 AND si."TaxabilityCode" = 2 AND ( (svd."TotalInvoiceValue" <= 250000 AND c."GSTCategoryCode" = 3) OR (svd."TotalInvoiceValue" > 250000 AND sbt."POSCode" = companypos AND c."GSTCategoryCode" = 3) ) GROUP BY sbt."POSName", sbt."POSCode", si."GstRate" ORDER BY sbt."POSCode" ) AS result; WHEN 'B2CL' THEN SELECT json_agg(result) into jsondata FROM ( SELECT s."SaleId" as "DocId", 'S' AS "DocumentType", s."Date" AS "Date", s."Number" AS "InvoiceNumber", sbt."POSName" AS "POSName", sbt."MailingName" AS "CustomerName", COALESCE(svd."TotalInvoiceValue", 0) AS "InvoiceValue", COALESCE(SUM(si."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(si."IGST"), 0) AS "IGST", COALESCE(SUM(si."Cess"), 0) AS "CESS" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" = 3 AND s."DocumentStatus" = 1 AND si."TaxabilityCode" = 2 AND svd."TotalInvoiceValue" > 250000 AND sbt."POSCode" <> companyPos GROUP BY s."Number", sbt."POSName", s."Date", sbt."POSCode", sbt."MailingName", svd."TotalInvoiceValue", s."SaleId" ) AS result; when 'B2C' Then SELECT JSON_AGG(result) into jsondata FROM ( SELECT 'B2CL' AS "SectionName", COUNT(s."SaleId") AS "NumberOfDocument", COALESCE(SUM(si."TaxableValue"), 0) AS "OutwardSupplies", COALESCE(SUM(si."IGST"), 0) AS "IGST", COALESCE(SUM(si."SGST"), 0) AS "SGST", COALESCE(SUM(si."CGST"), 0) AS "CGST", COALESCE(SUM(si."Cess"), 0) AS "CESS", COALESCE(SUM(si."IGST") + SUM(si."SGST") + SUM(si."CGST") + SUM(si."Cess"), 0) AS "TotalTax" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate and todate AND c."GSTCategoryCode" = 3 AND s."DocumentStatus" = 1 AND si."TaxabilityCode" = 2 AND svd."TotalInvoiceValue" > 250000 AND sbt."POSCode" <> companypos UNION ALL SELECT 'B2CS' AS "SectionName", COUNT(s."SaleId") AS "NumberOfDocument", COALESCE(SUM(si."TaxableValue"), 0) AS "OutwardSupplies", COALESCE(SUM(si."IGST"), 0) AS "IGST", COALESCE(SUM(si."CGST"), 0) AS "CGST", COALESCE(SUM(si."SGST"), 0) AS "SGST", COALESCE(SUM(si."Cess"), 0) AS "CESS", COALESCE(SUM(si."IGST") + SUM(si."SGST") + SUM(si."CGST") + SUM(si."Cess"), 0) AS "TotalTax" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate and todate AND s."DocumentStatus" = 1 AND si."TaxabilityCode" = 2 AND c."GSTCategoryCode" = 3 AND ( (svd."TotalInvoiceValue" <= 250000 AND c."GSTCategoryCode" = 3) OR (svd."TotalInvoiceValue" > 250000 AND sbt."POSCode" = companypos AND c."GSTCategoryCode" = 3) ) ) AS result; WHEN 'EXP' THEN SELECT json_agg(result) into jsondata FROM ( SELECT s."SaleId" AS "DocId", 'S' AS "DocumentType", s."Number" AS "InvoiceNumber", s."Date" AS "Date", sed."ShippingBillNumber" AS "ShippingBillNumber", sed."ShippingBillDate" AS "ShippingBillDate", s."WithPaymentOrWithoutPayment" AS "ExportType", COALESCE(svd."TotalInvoiceValue", 0) AS "InvoiceValue", COALESCE(SUM(si."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(si."IGST"), 0) AS "IGST", COALESCE(SUM(si."Cess"), 0) AS "CESS" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" INNER JOIN "10083_10833"."SalesExportDetails" sed ON s."SaleId" = sed."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND s."DocumentStatus" = 1 AND c."GSTCategoryCode" = 5 AND si."TaxabilityCode" = 2 GROUP BY s."Number", s."Date", s."SaleId", s."WithPaymentOrWithoutPayment", svd."TotalInvoiceValue", sed."ShippingBillNumber", sed."ShippingBillDate" ) AS result; WHEN 'HSN_DETAILED' THEN SELECT json_agg(result) into jsondata from ( SELECT s."SaleId" AS "DocId", 'S' AS "DocumentType", s."Date" AS "Date", s."Number" AS "InvoiceNumber", sbt."POSName" AS "POSName", sbt."MailingName" AS "CustomerName", COALESCE(svd."TotalInvoiceValue", 0) AS "InvoiceValue", COALESCE(SUM(si."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(si."IGST"), 0) AS "IGST", COALESCE(SUM(si."SGST"), 0) AS "SGST", COALESCE(SUM(si."CGST"), 0) AS "CGST", COALESCE(SUM(si."Cess"), 0) AS "CESS" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" WHERE s."Date" BETWEEN fromdate AND todate AND s."DocumentStatus" = 1 GROUP BY s."Number", sbt."POSName", s."Date", s."SaleId", sbt."MailingName", svd."TotalInvoiceValue" union all SELECT sr."SaleReturnId" AS "DocId", 'SR' AS "DocumentType", sr."Date" AS "Date", sr."Number" AS "InvoiceNumber", srbt."POSName" AS "POSName", srbt."MailingName" AS "CustomerName", COALESCE(srvd."TotalInvoiceValue", 0) AS "InvoiceValue", COALESCE(SUM(sri."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sri."IGST"), 0) AS "IGST", COALESCE(SUM(sri."SGST"), 0) AS "SGST", COALESCE(SUM(sri."CGST"), 0) AS "CGST", COALESCE(SUM(sri."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesReturn" sr INNER JOIN "10083_10833"."SalesReturnItems" sri ON sr."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnBillTo" srbt ON sr."SaleReturnId" = srbt."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnValueDetails" srvd ON sr."SaleReturnId" = srvd."SaleReturnId" WHERE sr."Date" BETWEEN fromdate AND todate AND sr."DocumentStatus" = 1 GROUP BY sr."Number", srbt."POSName", sr."Date", sr."SaleReturnId", srbt."MailingName", srvd."TotalInvoiceValue" union all SELECT sdn."SaleDebitNoteId" AS "DocId", 'SDN' AS "DocumentType", sdn."Date" AS "Date", sdn."Number" AS "InvoiceNumber", sdnbt."POSName" AS "POSName", sdnbt."MailingName" AS "CustomerName", sdnvd."TotalInvoiceValue" AS "InvoiceValue", COALESCE(SUM(sdni."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sdni."IGST"), 0) AS "IGST", COALESCE(SUM(sdni."SGST"), 0) AS "SGST", COALESCE(SUM(sdni."CGST"), 0) AS "CGST", COALESCE(SUM(sdni."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesDebitNote" sdn INNER JOIN "10083_10833"."SalesDebitNoteItems" sdni ON sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteBillTo" sdnbt ON sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteValueDetails" sdnvd ON sdn."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" WHERE sdn."Date" BETWEEN fromdate AND todate AND sdn."DocumentStatus" = 1 GROUP BY sdn."Number", sdnbt."POSName", sdn."Date", sdn."SaleDebitNoteId", sdnbt."MailingName", sdnvd."TotalInvoiceValue" ) AS result; WHEN 'HSN_SUMMARY' THEN SELECT JSON_AGG(result) INTO jsondata FROM ( SELECT "HSNSAC", "ItemDescription", "UQCCode", COALESCE(SUM("TotalQuantity"), 0) AS "TotalQuantity", "GstRate", COALESCE(SUM("IGST"), 0) AS "IGST", COALESCE(SUM("CGST"), 0) AS "CGST", COALESCE(SUM("SGST"), 0) AS "SGST", COALESCE(SUM("CESS"), 0) AS "CESS" FROM ( SELECT si."HSNSAC", si."ItemDescription", su."UQCCode", COALESCE(SUM(si."Quantity"), 0) AS "TotalQuantity", si."GstRate", COALESCE(SUM(si."IGST"), 0) AS "IGST", COALESCE(SUM(si."CGST"), 0) AS "CGST", COALESCE(SUM(si."SGST"), 0) AS "SGST", COALESCE(SUM(si."Cess"), 0) AS "CESS" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."StockItem" sti ON si."StockItemId" = sti."StockItemId" INNER JOIN "10083_10833"."SimpleUnit" su ON sti."UOMId" = su."SimpleUnitId" WHERE s."Date" BETWEEN fromdate AND todate AND s."DocumentStatus" = 1 GROUP BY si."HSNSAC", si."ItemDescription", su."UQCCode", si."GstRate" UNION ALL SELECT sri."HSNSAC", sri."ItemDescription", su."UQCCode", -COALESCE(SUM(sri."Quantity"), 0) AS "TotalQuantity", sri."GstRate", -COALESCE(SUM(sri."IGST"), 0) AS "IGST", -COALESCE(SUM(sri."CGST"), 0) AS "CGST", -COALESCE(SUM(sri."SGST"), 0) AS "SGST", -COALESCE(SUM(sri."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesReturn" sr INNER JOIN "10083_10833"."SalesReturnItems" sri ON sr."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."StockItem" sti ON sri."StockItemId" = sti."StockItemId" INNER JOIN "10083_10833"."SimpleUnit" su ON sti."UOMId" = su."SimpleUnitId" WHERE sr."Date" BETWEEN fromdate AND todate AND sr."DocumentStatus" = 1 GROUP BY sri."HSNSAC", sri."ItemDescription", su."UQCCode", sri."GstRate" UNION ALL SELECT sdni."HSNSAC", sdni."ItemDescription", su."UQCCode", COALESCE(SUM(sdni."Quantity"), 0) AS "TotalQuantity", sdni."GstRate", COALESCE(SUM(sdni."IGST"), 0) AS "IGST", COALESCE(SUM(sdni."CGST"), 0) AS "CGST", COALESCE(SUM(sdni."SGST"), 0) AS "SGST", COALESCE(SUM(sdni."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesDebitNote" sdn INNER JOIN "10083_10833"."SalesDebitNoteItems" sdni ON sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."StockItem" sti ON sdni."StockItemId" = sti."StockItemId" INNER JOIN "10083_10833"."SimpleUnit" su ON sti."UOMId" = su."SimpleUnitId" WHERE sdn."Date" BETWEEN fromdate AND todate AND sdn."DocumentStatus" = 1 GROUP BY sdni."HSNSAC", sdni."ItemDescription", su."UQCCode", sdni."GstRate" ) AS combinedData GROUP BY "HSNSAC", "ItemDescription", "UQCCode", "GstRate" ) AS result; WHEN 'DOC_ISSUE' THEN SELECT json_agg(result) into jsondata from ( SELECT s."SaleId" AS "DocId", 'S' AS "DocumentType", s."Date" AS "Date", s."Number" AS "InvoiceNumber", sbt."GSTIN" AS "GSTIN", sbt."MailingName" AS "CustomerName", COALESCE(SUM(si."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(si."IGST"), 0) AS "IGST", COALESCE(SUM(si."CGST"), 0) AS "CGST", COALESCE(SUM(si."SGST"), 0) AS "SGST", COALESCE(SUM(si."Cess"), 0) AS "CESS" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" WHERE s."Date" BETWEEN fromdate AND todate AND s."DocumentStatus" IN (1, 2) GROUP BY s."SaleId", s."Date", s."Number", sbt."GSTIN", sbt."MailingName" union all SELECT sr."SaleReturnId" AS "DocId", 'SR' AS "DocumentType", sr."Date" AS "Date", sr."Number" AS "InvoiceNumber", srbt."GSTIN" AS "GSTIN", srbt."MailingName" AS "CustomerName", COALESCE(SUM(sri."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sri."IGST"), 0) AS "IGST", COALESCE(SUM(sri."CGST"), 0) AS "CGST", COALESCE(SUM(sri."SGST"), 0) AS "SGST", COALESCE(SUM(sri."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesReturn" sr INNER JOIN "10083_10833"."SalesReturnItems" sri ON sr."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnBillTo" srbt ON sr."SaleReturnId" = srbt."SaleReturnId" WHERE sr."Date" BETWEEN fromdate AND todate AND sr."DocumentStatus" IN (1, 2) GROUP BY sr."SaleReturnId", sr."Date", sr."Number", srbt."GSTIN", srbt."MailingName" union all SELECT sdn."SaleDebitNoteId" AS "DocId", 'SDN' AS "DocumentType", sdn."Date" AS "Date", sdn."Number" AS "InvoiceNumber", sdnbt."GSTIN" AS "GSTIN", sdnbt."MailingName" AS "CustomerName", COALESCE(SUM(sdni."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sdni."IGST"), 0) AS "IGST", COALESCE(SUM(sdni."CGST"), 0) AS "CGST", COALESCE(SUM(sdni."SGST"), 0) AS "SGST", COALESCE(SUM(sdni."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesDebitNote" sdn INNER JOIN "10083_10833"."SalesDebitNoteItems" sdni ON sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteBillTo" sdnbt ON sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" WHERE sdn."Date" BETWEEN fromdate AND todate AND sdn."DocumentStatus" IN (1, 2) GROUP BY sdn."SaleDebitNoteId", sdn."Date", sdn."Number", sdnbt."GSTIN", sdnbt."MailingName" ) AS result; WHEN 'NIL_INTER_REG' THEN SELECT json_agg(result) INTO jsondata FROM ( SELECT s."SaleId" AS "DocId", 'S' AS "DocumentType", s."Date" AS "Date", s."Number" AS "InvoiceNumber", sbt."POSName" AS "POSName", sbt."MailingName" AS "CustomerName", svd."TotalInvoiceValue" AS "InvoiceValue", COALESCE(SUM(si."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(si."IGST"), 0) AS "IGST", COALESCE(SUM(si."CGST"), 0) AS "CGST", COALESCE(SUM(si."SGST"), 0) AS "SGST", COALESCE(SUM(si."Cess"), 0) AS "CESS" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND s."DocumentStatus" = 1 AND sbt."POSCode" <> companypos AND si."TaxabilityCode" IN (3, 4, 5) GROUP BY s."SaleId", sbt."POSName", s."Date", s."Number", sbt."MailingName", svd."TotalInvoiceValue" UNION ALL SELECT sr."SaleReturnId" AS "DocId", 'SR' AS "DocumentType", sr."Date" AS "Date", sr."Number" AS "InvoiceNumber", srbt."POSName" AS "POSName", srbt."MailingName" AS "CustomerName", srvd."TotalInvoiceValue" AS "InvoiceValue", COALESCE(SUM(sri."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sri."IGST"), 0) AS "IGST", COALESCE(SUM(sri."CGST"), 0) AS "CGST", COALESCE(SUM(sri."SGST"), 0) AS "SGST", COALESCE(SUM(sri."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesReturn" sr INNER JOIN "10083_10833"."SalesReturnItems" sri ON sr."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnBillTo" srbt ON sr."SaleReturnId" = srbt."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnValueDetails" srvd ON sr."SaleReturnId" = srvd."SaleReturnId" INNER JOIN "10083_10833"."Customer" c ON sr."CustomerId" = c."CustomerId" WHERE sr."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND sr."DocumentStatus" = 1 AND srbt."POSCode" <> companypos AND sri."TaxabilityCode" IN (3, 4, 5) GROUP BY sr."SaleReturnId", srbt."POSName", sr."Date", sr."Number", srbt."MailingName", srvd."TotalInvoiceValue" UNION ALL SELECT sdn."SaleDebitNoteId" AS "DocId", 'SDN' AS "DocumentType", sdn."Date" AS "Date", sdn."Number" AS "InvoiceNumber", sdnbt."POSName" AS "POSName", sdnbt."MailingName" AS "CustomerName", sdnvd."TotalInvoiceValue" AS "InvoiceValue", COALESCE(SUM(sdni."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sdni."IGST"), 0) AS "IGST", COALESCE(SUM(sdni."CGST"), 0) AS "CGST", COALESCE(SUM(sdni."SGST"), 0) AS "SGST", COALESCE(SUM(sdni."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesDebitNote" sdn INNER JOIN "10083_10833"."SalesDebitNoteItems" sdni ON sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteBillTo" sdnbt ON sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteValueDetails" sdnvd ON sdn."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" INNER JOIN "10083_10833"."Customer" c ON sdn."CustomerId" = c."CustomerId" WHERE sdn."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND sdn."DocumentStatus" = 1 AND sdnbt."POSCode" <> companypos AND sdni."TaxabilityCode" IN (3, 4, 5) GROUP BY sdn."SaleDebitNoteId", sdnbt."POSName", sdn."Date", sdn."Number", sdnbt."MailingName", sdnvd."TotalInvoiceValue" ) AS result; WHEN 'NIL_INTER_UNREG' THEN SELECT json_agg(result) into jsondata from ( SELECT s."SaleId" AS "DocId", 'S' AS "DocumentType", s."Date" AS "Date", s."Number" AS "InvoiceNumber", sbt."POSName" as "POSName", sbt."MailingName" AS "CustomerName", svd."TotalInvoiceValue" AS "InvoiceValue", COALESCE(SUM(si."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(si."IGST"), 0) AS "IGST", COALESCE(SUM(si."CGST"), 0) AS "CGST", COALESCE(SUM(si."SGST"), 0) AS "SGST", COALESCE(SUM(si."Cess"), 0) AS "CESS" FROM "10083_10833"."Sales" s INNER join "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND s."DocumentStatus" = 1 AND sbt."POSCode" <> companypos and si."TaxabilityCode" in (3, 4, 5) GROUP BY s."SaleId", sbt."POSName", s."Date", s."Number", sbt."MailingName", svd."TotalInvoiceValue" UNION ALL SELECT sr."SaleReturnId" AS "DocId", 'SR' AS "DocumentType", sr."Date" AS "Date", sr."Number" AS "InvoiceNumber", srbt."POSName" as "POSName", srbt."MailingName" AS "CustomerName", srvd."TotalInvoiceValue" AS "InvoiceValue", COALESCE(SUM(sri."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sri."IGST"), 0) AS "IGST", COALESCE(SUM(sri."CGST"), 0) AS "CGST", COALESCE(SUM(sri."SGST"), 0) AS "SGST", COALESCE(SUM(sri."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesReturn" sr INNER join "10083_10833"."SalesReturnItems" sri ON sr."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnBillTo" srbt ON sr."SaleReturnId" = srbt."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnValueDetails" srvd ON sr."SaleReturnId" = srvd."SaleReturnId" INNER JOIN "10083_10833"."Customer" c ON sr."CustomerId" = c."CustomerId" WHERE sr."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND sr."DocumentStatus" = 1 AND srbt."POSCode" <> companypos and sri."TaxabilityCode" in (3, 4, 5) GROUP BY sr."SaleReturnId", srbt."POSName", sr."Date", sr."Number", srbt."MailingName", srvd."TotalInvoiceValue" UNION ALL SELECT sdn."SaleDebitNoteId" AS "DocId", 'SDN' AS "DocumentType", sdn."Date" AS "Date", sdn."Number" AS "InvoiceNumber", sdnbt."POSName" as "POSName", sdnbt."MailingName" AS "CustomerName", sdnvd."TotalInvoiceValue" AS "InvoiceValue", COALESCE(SUM(sdni."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sdni."IGST"), 0) AS "IGST", COALESCE(SUM(sdni."CGST"), 0) AS "CGST", COALESCE(SUM(sdni."SGST"), 0) AS "SGST", COALESCE(SUM(sdni."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesDebitNote" sdn INNER join "10083_10833"."SalesDebitNoteItems" sdni ON sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteBillTo" sdnbt ON sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteValueDetails" sdnvd ON sdn."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" INNER JOIN "10083_10833"."Customer" c ON sdn."CustomerId" = c."CustomerId" WHERE sdn."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND sdn."DocumentStatus" = 1 AND sdnbt."POSCode" <> companypos and sdni."TaxabilityCode" in (3, 4, 5) GROUP BY sdn."SaleDebitNoteId", sdnbt."POSName", sdn."Date", sdn."Number", sdnbt."MailingName", sdnvd."TotalInvoiceValue" ) as result; WHEN 'NIL_INTRA_REG' THEN SELECT json_agg(result) INTO jsondata FROM ( SELECT s."SaleId" AS "DocId", 'S' AS "DocumentType", s."Date" AS "Date", s."Number" AS "InvoiceNumber", sbt."POSName" as "POSName", sbt."MailingName" AS "CustomerName", svd."TotalInvoiceValue" AS "InvoiceValue", COALESCE(SUM(si."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(si."IGST"), 0) AS "IGST", COALESCE(SUM(si."CGST"), 0) AS "CGST", COALESCE(SUM(si."SGST"), 0) AS "SGST", COALESCE(SUM(si."Cess"), 0) AS "CESS" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND s."DocumentStatus" = 1 AND sbt."POSCode" = companypos AND si."TaxabilityCode" IN (3, 4, 5) GROUP BY s."SaleId", sbt."POSName", s."Date", s."Number", sbt."MailingName", svd."TotalInvoiceValue" UNION ALL SELECT sr."SaleReturnId" AS "DocId", 'SR' AS "DocumentType", sr."Date" AS "Date", sr."Number" AS "InvoiceNumber", srbt."POSName" as "POSName", srbt."MailingName" AS "CustomerName", srvd."TotalInvoiceValue" AS "InvoiceValue", COALESCE(SUM(sri."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sri."IGST"), 0) AS "IGST", COALESCE(SUM(sri."CGST"), 0) AS "CGST", COALESCE(SUM(sri."SGST"), 0) AS "SGST", COALESCE(SUM(sri."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesReturn" sr INNER JOIN "10083_10833"."SalesReturnItems" sri ON sr."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnBillTo" srbt ON sr."SaleReturnId" = srbt."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnValueDetails" srvd ON sr."SaleReturnId" = srvd."SaleReturnId" INNER JOIN "10083_10833"."Customer" c ON sr."CustomerId" = c."CustomerId" WHERE sr."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND sr."DocumentStatus" = 1 AND srbt."POSCode" = companypos AND sri."TaxabilityCode" IN (3, 4, 5) GROUP BY sr."SaleReturnId", srbt."POSName", sr."Date", sr."Number", srbt."MailingName", srvd."TotalInvoiceValue" UNION ALL SELECT sdn."SaleDebitNoteId" AS "DocId", 'SDN' AS "DocumentType", sdn."Date" AS "Date", sdn."Number" AS "InvoiceNumber", sdnbt."POSName" as "POSName", sdnbt."MailingName" AS "CustomerName", sdnvd."TotalInvoiceValue" AS "InvoiceValue", COALESCE(SUM(sdni."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sdni."IGST"), 0) AS "IGST", COALESCE(SUM(sdni."CGST"), 0) AS "CGST", COALESCE(SUM(sdni."SGST"), 0) AS "SGST", COALESCE(SUM(sdni."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesDebitNote" sdn INNER JOIN "10083_10833"."SalesDebitNoteItems" sdni ON sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteBillTo" sdnbt ON sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteValueDetails" sdnvd ON sdn."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" INNER JOIN "10083_10833"."Customer" c ON sdn."CustomerId" = c."CustomerId" WHERE sdn."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND sdn."DocumentStatus" = 1 AND sdnbt."POSCode" = companypos AND sdni."TaxabilityCode" IN (3, 4, 5) GROUP BY sdn."SaleDebitNoteId", sdnbt."POSName", sdn."Date", sdn."Number", sdnbt."MailingName", sdnvd."TotalInvoiceValue" ) AS result; WHEN 'NIL_INTRA_UNREG' THEN SELECT json_agg(result) INTO jsondata FROM ( SELECT s."SaleId" AS "DocId", 'S' AS "DocumentType", s."Date" AS "Date", s."Number" AS "InvoiceNumber", sbt."POSName" AS "POSName", sbt."MailingName" AS "CustomerName", svd."TotalInvoiceValue" AS "InvoiceValue", COALESCE(SUM(si."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(si."IGST"), 0) AS "IGST", COALESCE(SUM(si."CGST"), 0) AS "CGST", COALESCE(SUM(si."SGST"), 0) AS "SGST", COALESCE(SUM(si."Cess"), 0) AS "CESS" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND s."DocumentStatus" = 1 AND sbt."POSCode" = companypos AND si."TaxabilityCode" IN (3, 4, 5) GROUP BY s."SaleId", sbt."POSName", s."Date", s."Number", sbt."MailingName", svd."TotalInvoiceValue" UNION ALL SELECT sr."SaleReturnId" AS "DocId", 'SR' AS "DocumentType", sr."Date" AS "Date", sr."Number" AS "InvoiceNumber", srbt."POSName" AS "POSName", srbt."MailingName" AS "CustomerName", srvd."TotalInvoiceValue" AS "InvoiceValue", COALESCE(SUM(sri."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sri."IGST"), 0) AS "IGST", COALESCE(SUM(sri."CGST"), 0) AS "CGST", COALESCE(SUM(sri."SGST"), 0) AS "SGST", COALESCE(SUM(sri."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesReturn" sr INNER JOIN "10083_10833"."SalesReturnItems" sri ON sr."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnBillTo" srbt ON sr."SaleReturnId" = srbt."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnValueDetails" srvd ON sr."SaleReturnId" = srvd."SaleReturnId" INNER JOIN "10083_10833"."Customer" c ON sr."CustomerId" = c."CustomerId" WHERE sr."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND sr."DocumentStatus" = 1 AND srbt."POSCode" = companypos AND sri."TaxabilityCode" IN (3, 4, 5) GROUP BY sr."SaleReturnId", srbt."POSName", sr."Date", sr."Number", srbt."MailingName", srvd."TotalInvoiceValue" UNION ALL SELECT sdn."SaleDebitNoteId" AS "DocId", 'SDN' AS "DocumentType", sdn."Date" AS "Date", sdn."Number" AS "InvoiceNumber", sdnbt."POSName" AS "POSName", sdnbt."MailingName" AS "CustomerName", sdnvd."TotalInvoiceValue" AS "InvoiceValue", COALESCE(SUM(sdni."TaxableValue"), 0) AS "TaxableValue", COALESCE(SUM(sdni."IGST"), 0) AS "IGST", COALESCE(SUM(sdni."CGST"), 0) AS "CGST", COALESCE(SUM(sdni."SGST"), 0) AS "SGST", COALESCE(SUM(sdni."Cess"), 0) AS "CESS" FROM "10083_10833"."SalesDebitNote" sdn INNER JOIN "10083_10833"."SalesDebitNoteItems" sdni ON sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteBillTo" sdnbt ON sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteValueDetails" sdnvd ON sdn."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" INNER JOIN "10083_10833"."Customer" c ON sdn."CustomerId" = c."CustomerId" WHERE sdn."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND sdn."DocumentStatus" = 1 AND sdnbt."POSCode" = companypos AND sdni."TaxabilityCode" IN (3, 4, 5) GROUP BY sdn."SaleDebitNoteId", sdnbt."POSName", sdn."Date", sdn."Number", sdnbt."MailingName", sdnvd."TotalInvoiceValue" ) AS result; WHEN 'NIL_SUMMARY' THEN SELECT json_agg(result) into jsondata from ( select 'NIL_INTER_REG' as "SupplyType", COALESCE(SUM("NilRatedAmount"), 0) as "NillRatedAmount", COALESCE(SUM("ExemptedAmount"), 0) as "ExemptedAmount", COALESCE(SUM("NonGSTSuppliersAmount"), 0) as "NonGSTSuppliersAmount" from ( SELECT COALESCE(SUM(CASE WHEN si."TaxabilityCode" = 3 THEN si."TaxableValue" ELSE 0 END), 0) AS "NilRatedAmount", COALESCE(SUM(CASE WHEN si."TaxabilityCode" = 4 THEN si."TaxableValue" ELSE 0 END), 0) AS "ExemptedAmount", COALESCE(SUM(CASE WHEN si."TaxabilityCode" = 5 THEN si."TaxableValue" ELSE 0 END), 0) AS "NonGSTSuppliersAmount" FROM "10083_10833"."Sales" s INNER join "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND s."DocumentStatus" = 1 AND sbt."POSCode" <> companypos union all SELECT COALESCE(SUM(CASE WHEN sri."TaxabilityCode" = 3 THEN sri."TaxableValue" ELSE 0 END), 0) AS "NilRatedAmount", COALESCE(SUM(CASE WHEN sri."TaxabilityCode" = 4 THEN sri."TaxableValue" ELSE 0 END), 0) AS "ExemptedAmount", COALESCE(SUM(CASE WHEN sri."TaxabilityCode" = 5 THEN sri."TaxableValue" ELSE 0 END), 0) AS "NonGSTSuppliersAmount" FROM "10083_10833"."SalesReturn" sr INNER join "10083_10833"."SalesReturnItems" sri ON sr."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnBillTo" srbt ON sr."SaleReturnId" = srbt."SaleReturnId" INNER JOIN "10083_10833"."Customer" c ON sr."CustomerId" = c."CustomerId" WHERE sr."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND sr."DocumentStatus" = 1 AND srbt."POSCode" <> companypos union all select COALESCE(SUM(CASE WHEN sdni."TaxabilityCode" = 3 THEN sdni."TaxableValue" ELSE 0 END), 0) AS "NilRatedAmount", COALESCE(SUM(CASE WHEN sdni."TaxabilityCode" = 4 THEN sdni."TaxableValue" ELSE 0 END), 0) AS "ExemptedAmount", COALESCE(SUM(CASE WHEN sdni."TaxabilityCode" = 5 THEN sdni."TaxableValue" ELSE 0 END), 0) AS "NonGSTSuppliersAmount" FROM "10083_10833"."SalesDebitNote" sdn INNER join "10083_10833"."SalesDebitNoteItems" sdni ON sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteBillTo" sdnbt ON sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" INNER JOIN "10083_10833"."Customer" c ON sdn."CustomerId" = c."CustomerId" WHERE sdn."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND sdn."DocumentStatus" = 1 AND sdnbt."POSCode" <> companypos ) as combineData UNION ALL select 'NIL_INTER_UNREG' as "SupplyType", COALESCE(SUM("NilRatedAmount"), 0) as "NillRatedAmount", COALESCE(SUM("ExemptedAmount"), 0) as "ExemptedAmount", COALESCE(SUM("NonGSTSuppliersAmount"), 0) as "NonGSTSuppliersAmount" from ( SELECT COALESCE(SUM(CASE WHEN si."TaxabilityCode" = 3 THEN si."TaxableValue" ELSE 0 END), 0) AS "NilRatedAmount", COALESCE(SUM(CASE WHEN si."TaxabilityCode" = 4 THEN si."TaxableValue" ELSE 0 END), 0) AS "ExemptedAmount", COALESCE(SUM(CASE WHEN si."TaxabilityCode" = 5 THEN si."TaxableValue" ELSE 0 END), 0) AS "NonGSTSuppliersAmount" FROM "10083_10833"."Sales" s INNER join "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND s."DocumentStatus" = 1 AND sbt."POSCode" <> companypos union all SELECT COALESCE(SUM(CASE WHEN sri."TaxabilityCode" = 3 THEN sri."TaxableValue" ELSE 0 END), 0) AS "NilRatedAmount", COALESCE(SUM(CASE WHEN sri."TaxabilityCode" = 4 THEN sri."TaxableValue" ELSE 0 END), 0) AS "ExemptedAmount", COALESCE(SUM(CASE WHEN sri."TaxabilityCode" = 5 THEN sri."TaxableValue" ELSE 0 END), 0) AS "NonGSTSuppliersAmount" FROM "10083_10833"."SalesReturn" sr INNER join "10083_10833"."SalesReturnItems" sri ON sr."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnBillTo" srbt ON sr."SaleReturnId" = srbt."SaleReturnId" INNER JOIN "10083_10833"."Customer" c ON sr."CustomerId" = c."CustomerId" WHERE sr."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND sr."DocumentStatus" = 1 AND srbt."POSCode" <> companypos union all select COALESCE(SUM(CASE WHEN sdni."TaxabilityCode" = 3 THEN sdni."TaxableValue" ELSE 0 END), 0) AS "NilRatedAmount", COALESCE(SUM(CASE WHEN sdni."TaxabilityCode" = 4 THEN sdni."TaxableValue" ELSE 0 END), 0) AS "ExemptedAmount", COALESCE(SUM(CASE WHEN sdni."TaxabilityCode" = 5 THEN sdni."TaxableValue" ELSE 0 END), 0) AS "NonGSTSuppliersAmount" FROM "10083_10833"."SalesDebitNote" sdn INNER join "10083_10833"."SalesDebitNoteItems" sdni ON sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteBillTo" sdnbt ON sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" INNER JOIN "10083_10833"."Customer" c ON sdn."CustomerId" = c."CustomerId" WHERE sdn."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND sdn."DocumentStatus" = 1 AND sdnbt."POSCode" <> companypos ) as combineData UNION all select 'NIL_INTRA_REG' as "SupplyType", COALESCE(SUM("NilRatedAmount"), 0) as "NillRatedAmount", COALESCE(SUM("ExemptedAmount"), 0) as "ExemptedAmount", COALESCE(SUM("NonGSTSuppliersAmount"), 0) as "NonGSTSuppliersAmount" from ( SELECT COALESCE(SUM(CASE WHEN si."TaxabilityCode" = 3 THEN si."TaxableValue" ELSE 0 END), 0) AS "NilRatedAmount", COALESCE(SUM(CASE WHEN si."TaxabilityCode" = 4 THEN si."TaxableValue" ELSE 0 END), 0) AS "ExemptedAmount", COALESCE(SUM(CASE WHEN si."TaxabilityCode" = 5 THEN si."TaxableValue" ELSE 0 END), 0) AS "NonGSTSuppliersAmount" FROM "10083_10833"."Sales" s INNER join "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND s."DocumentStatus" = 1 AND sbt."POSCode" = companypos union all SELECT COALESCE(SUM(CASE WHEN sri."TaxabilityCode" = 3 THEN sri."TaxableValue" ELSE 0 END), 0) AS "NilRatedAmount", COALESCE(SUM(CASE WHEN sri."TaxabilityCode" = 4 THEN sri."TaxableValue" ELSE 0 END), 0) AS "ExemptedAmount", COALESCE(SUM(CASE WHEN sri."TaxabilityCode" = 5 THEN sri."TaxableValue" ELSE 0 END), 0) AS "NonGSTSuppliersAmount" FROM "10083_10833"."SalesReturn" sr INNER join "10083_10833"."SalesReturnItems" sri ON sr."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnBillTo" srbt ON sr."SaleReturnId" = srbt."SaleReturnId" INNER JOIN "10083_10833"."Customer" c ON sr."CustomerId" = c."CustomerId" WHERE sr."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND sr."DocumentStatus" = 1 AND srbt."POSCode" = companypos union all select COALESCE(SUM(CASE WHEN sdni."TaxabilityCode" = 3 THEN sdni."TaxableValue" ELSE 0 END), 0) AS "NilRatedAmount", COALESCE(SUM(CASE WHEN sdni."TaxabilityCode" = 4 THEN sdni."TaxableValue" ELSE 0 END), 0) AS "ExemptedAmount", COALESCE(SUM(CASE WHEN sdni."TaxabilityCode" = 5 THEN sdni."TaxableValue" ELSE 0 END), 0) AS "NonGSTSuppliersAmount" FROM "10083_10833"."SalesDebitNote" sdn INNER join "10083_10833"."SalesDebitNoteItems" sdni ON sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteBillTo" sdnbt ON sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" INNER JOIN "10083_10833"."Customer" c ON sdn."CustomerId" = c."CustomerId" WHERE sdn."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 4, 6, 8) AND sdn."DocumentStatus" = 1 AND sdnbt."POSCode" = companypos ) as combineData UNION ALL select 'NIL_INTRA_UNREG' as "SupplyType", COALESCE(SUM("NilRatedAmount"), 0) as "NillRatedAmount", COALESCE(SUM("ExemptedAmount"), 0) as "ExemptedAmount", COALESCE(SUM("NonGSTSuppliersAmount"), 0) as "NonGSTSuppliersAmount" from ( SELECT COALESCE(SUM(CASE WHEN si."TaxabilityCode" = 3 THEN si."TaxableValue" ELSE 0 END), 0) AS "NilRatedAmount", COALESCE(SUM(CASE WHEN si."TaxabilityCode" = 4 THEN si."TaxableValue" ELSE 0 END), 0) AS "ExemptedAmount", COALESCE(SUM(CASE WHEN si."TaxabilityCode" = 5 THEN si."TaxableValue" ELSE 0 END), 0) AS "NonGSTSuppliersAmount" FROM "10083_10833"."Sales" s INNER join "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND s."DocumentStatus" = 1 AND sbt."POSCode" = companypos union all SELECT COALESCE(SUM(CASE WHEN sri."TaxabilityCode" = 3 THEN sri."TaxableValue" ELSE 0 END), 0) AS "NilRatedAmount", COALESCE(SUM(CASE WHEN sri."TaxabilityCode" = 4 THEN sri."TaxableValue" ELSE 0 END), 0) AS "ExemptedAmount", COALESCE(SUM(CASE WHEN sri."TaxabilityCode" = 5 THEN sri."TaxableValue" ELSE 0 END), 0) AS "NonGSTSuppliersAmount" FROM "10083_10833"."SalesReturn" sr INNER join "10083_10833"."SalesReturnItems" sri ON sr."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."SalesReturnBillTo" srbt ON sr."SaleReturnId" = srbt."SaleReturnId" INNER JOIN "10083_10833"."Customer" c ON sr."CustomerId" = c."CustomerId" WHERE sr."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND sr."DocumentStatus" = 1 AND srbt."POSCode" = companypos union all select COALESCE(SUM(CASE WHEN sdni."TaxabilityCode" = 3 THEN sdni."TaxableValue" ELSE 0 END), 0) AS "NilRatedAmount", COALESCE(SUM(CASE WHEN sdni."TaxabilityCode" = 4 THEN sdni."TaxableValue" ELSE 0 END), 0) AS "ExemptedAmount", COALESCE(SUM(CASE WHEN sdni."TaxabilityCode" = 5 THEN sdni."TaxableValue" ELSE 0 END), 0) AS "NonGSTSuppliersAmount" FROM "10083_10833"."SalesDebitNote" sdn INNER join "10083_10833"."SalesDebitNoteItems" sdni ON sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."SalesDebitNoteBillTo" sdnbt ON sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" INNER JOIN "10083_10833"."Customer" c ON sdn."CustomerId" = c."CustomerId" WHERE sdn."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (3, 5) AND sdn."DocumentStatus" = 1 AND sdnbt."POSCode" = companypos ) as combineData ) as result; WHEN 'NIL_EXP_SUMMARY' THEN SELECT json_agg(result) into jsondata from ( select "SectionName", COALESCE("OutwardSupplies", 0) AS "OutwardSupplies", COALESCE("IGST", 0) AS "IGST", COALESCE("TotalTax", 0) AS "TotalTax", COALESCE("NumberOfDocument", 0) AS "NumberOfDocument" FROM ( SELECT 'NIL' AS "SectionName", COALESCE(SUM("TaxableValue"), 0) AS "OutwardSupplies", 0 AS "IGST", 0 AS "TotalTax", '4' AS "NumberOfDocument" FROM ( SELECT COALESCE(SUM(si."TaxableValue"), 0) AS "TaxableValue" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 3, 4, 5, 6, 8) AND s."DocumentStatus" = 1 UNION ALL SELECT COALESCE(SUM(sri."TaxableValue"), 0) AS "TaxableValue" FROM "10083_10833"."SalesReturn" sr INNER JOIN "10083_10833"."SalesReturnItems" sri ON sr."SaleReturnId" = sri."SaleReturnId" INNER JOIN "10083_10833"."Customer" c ON sr."CustomerId" = c."CustomerId" WHERE sr."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 3, 4, 5, 6, 8) AND sr."DocumentStatus" = 1 UNION ALL SELECT COALESCE(SUM(sdni."TaxableValue"), 0) AS "TaxableValue" FROM "10083_10833"."SalesDebitNote" sdn INNER JOIN "10083_10833"."SalesDebitNoteItems" sdni ON sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" INNER JOIN "10083_10833"."Customer" c ON sdn."CustomerId" = c."CustomerId" WHERE sdn."Date" BETWEEN fromdate AND todate AND c."GSTCategoryCode" IN (1, 2, 3, 4, 5, 6, 8) AND sdn."DocumentStatus" = 1 ) AS combineData1 UNION ALL select 'EXP' AS "SectionName", COALESCE(SUM(si."TaxableValue"), 0) AS "OutwardSupplies", COALESCE(SUM(si."IGST"), 0) AS "IGST", COALESCE(SUM(si."IGST"), 0) + COALESCE(SUM(si."Cess"), 0) AS "TotalTax", COUNT(s."SaleId") AS "NumberOfDocument" FROM "10083_10833"."Sales" s INNER JOIN "10083_10833"."SalesItems" si ON s."SaleId" = si."SaleId" INNER JOIN "10083_10833"."SalesBillTo" sbt ON s."SaleId" = sbt."SaleId" INNER JOIN "10083_10833"."SalesValueDetails" svd ON s."SaleId" = svd."SaleId" INNER JOIN "10083_10833"."SalesExportDetails" sed ON s."SaleId" = sed."SaleId" INNER JOIN "10083_10833"."Customer" c ON s."CustomerId" = c."CustomerId" WHERE s."Date" BETWEEN fromdate AND todate AND s."DocumentStatus" = 1 AND c."GSTCategoryCode" = 5 AND si."TaxabilityCode" = 2 ) AS finalData ) as result; ELSE RAISE EXCEPTION 'Invalid sectiontype: %', sectiontype; END CASE; end $$;


ALTER PROCEDURE "10083_10833".getgstr1sectiondata(IN fromdate date, IN todate date, IN sectiontype character varying, IN companypos character, OUT jsondata jsonb, IN pos character) OWNER TO "10083";

--
-- TOC entry 2348 (class 1255 OID 187354)
-- Name: getgstr1sectiondata(date, date, character varying, character, character, character varying); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".getgstr1sectiondata(IN fromdate date, IN todate date, IN sectiontype character varying, OUT jsondata jsonb, IN companypos character DEFAULT '00'::bpchar, IN pos character DEFAULT '00'::bpchar, IN hsnno character varying DEFAULT ''::character varying)
    LANGUAGE plpgsql
    AS $$ begin case sectiontype when 'B2B' then select json_agg(result) into jsondata from ( select s."SaleId" as "DocId", 'S' as "DocumentType", s."Date" as "Date", s."Number" as "InvoiceNumber", sbt."GSTIN" as "GSTIN", sbt."MailingName" as "CustomerName", svd."TotalInvoiceValue" as "InvoiceValue", coalesce(SUM(si."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."CGST"), 0) as "CGST", coalesce(SUM(si."SGST"), 0) as "SGST", coalesce(SUM(si."Cess"), 0) as "CESS" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and s."DocumentStatus" = 1 and si."TaxabilityCode" = 2 group by s."SaleId", s."Date", s."Number", sbt."GSTIN", sbt."MailingName", svd."TotalInvoiceValue" ) as result; when 'CDN' then select json_agg(result) into jsondata from ( select 'CDNR' as "SectionName", coalesce(SUM("NumberOfDocument"), 0) as "NumberOfDocument", coalesce(SUM("OutwardSupply"), 0) as "OutwardSupply", coalesce(SUM("IGST"), 0) as "IGST", coalesce(SUM("CGST"), 0) as "CGST", coalesce(SUM("SGST"), 0) as "SGST", coalesce(SUM("CESS"), 0) as "CESS", coalesce(SUM("TotalTax"), 0) as "TotalTax" from ( select COUNT(distinct(s."SaleReturnId")) as "NumberOfDocument", -coalesce(SUM(sri."TaxableValue"), 0) as "OutwardSupply", -coalesce(SUM(sri."IGST"), 0) as "IGST", -coalesce(SUM(sri."CGST"), 0) as "CGST", -coalesce(SUM(sri."SGST"), 0) as "SGST", -coalesce(SUM(sri."Cess"), 0) as "CESS", -coalesce(SUM(sri."IGST" + sri."CGST" + sri."SGST" + sri."Cess"), 0) as "TotalTax" from "10083_10833"."SalesReturn" s join "10083_10833"."SalesReturnItems" sri on s."SaleReturnId" = sri."SaleReturnId" join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."DocumentStatus" = 1 and s."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and sri."TaxabilityCode" = 2 union all select COUNT(distinct(s."SaleDebitNoteId")) as "NumberOfDocument", coalesce(SUM(sdni."TaxableValue"), 0) as "OutwardSupply", coalesce(SUM(sdni."IGST"), 0) as "IGST", coalesce(SUM(sdni."CGST"), 0) as "CGST", coalesce(SUM(sdni."SGST"), 0) as "SGST", coalesce(SUM(sdni."Cess"), 0) as "CESS", coalesce(SUM(sdni."IGST" + sdni."CGST" + sdni."SGST" + sdni."Cess"), 0) as "TotalTax" from "10083_10833"."SalesDebitNote" s join "10083_10833"."SalesDebitNoteItems" sdni on s."SaleDebitNoteId" = sdni."SaleDebitNoteId" join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."DocumentStatus" = 1 and s."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and sdni."TaxabilityCode" = 2 ) as combinedData union all select 'CDNUR' as "SectionName", coalesce(SUM("NumberOfDocument"), 0) as "NumberOfDocument", coalesce(SUM("OutwardSupply"), 0) as "OutwardSupply", coalesce(SUM("IGST"), 0) as "IGST", coalesce(SUM("CGST"), 0) as "CGST", coalesce(SUM("SGST"), 0) as "SGST", coalesce(SUM("CESS"), 0) as "CESS", coalesce(SUM("TotalTax"), 0) as "TotalTax" from ( select COUNT(distinct s."SaleReturnId") as "NumberOfDocument", -coalesce(SUM(sri."TaxableValue"), 0) as "OutwardSupply", -coalesce(SUM(sri."IGST"), 0) as "IGST", -coalesce(SUM(sri."CGST"), 0) as "CGST", -coalesce(SUM(sri."SGST"), 0) as "SGST", -coalesce(SUM(sri."Cess"), 0) as "CESS", -coalesce(SUM(sri."IGST" + sri."CGST" + sri."SGST" + sri."Cess"), 0) as "TotalTax" from "10083_10833"."SalesReturn" s join "10083_10833"."SalesReturnItems" sri on s."SaleReturnId" = sri."SaleReturnId" join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."DocumentStatus" = 1 and s."Date" between fromdate and todate and c."GSTCategoryCode" in (3, 5) and sri."TaxabilityCode" = 2 union all select COUNT(distinct s."SaleDebitNoteId") as "NumberOfDocument", coalesce(SUM(sdni."TaxableValue"), 0) as "OutwardSupply", coalesce(SUM(sdni."IGST"), 0) as "IGST", coalesce(SUM(sdni."CGST"), 0) as "CGST", coalesce(SUM(sdni."SGST"), 0) as "SGST", coalesce(SUM(sdni."Cess"), 0) as "CESS", coalesce(SUM(sdni."IGST" + sdni."CGST" + sdni."SGST" + sdni."Cess"), 0) as "TotalTax" from "10083_10833"."SalesDebitNote" s join "10083_10833"."SalesDebitNoteItems" sdni on s."SaleDebitNoteId" = sdni."SaleDebitNoteId" join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."DocumentStatus" = 1 and s."Date" between fromdate and todate and c."GSTCategoryCode" in (3, 5) and sdni."TaxabilityCode" = 2 ) as combinedData ) as result; when 'CDNR' then select json_agg(result) into jsondata from ( select "DocId", "Date", "DocumentType", "InvoiceNumber", "GSTIN", "CustomerName", "NoteSupplyType", "NoteType", "TaxableValue", "IGST", "CGST", "SGST", "CESS" from ( select s."SaleReturnId" as "DocId", s."Date" as "Date", 'SR' as "DocumentType", s."Number" as "InvoiceNumber", srbt."GSTIN" as "GSTIN", srbt."MailingName" as "CustomerName", s."InvoiceType" as "NoteSupplyType", 'C' as "NoteType", coalesce(SUM(sri."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sri."IGST"), 0) as "IGST", coalesce(SUM(sri."CGST"), 0) as "CGST", coalesce(SUM(sri."SGST"), 0) as "SGST", coalesce(SUM(sri."Cess"), 0) as "CESS" from "10083_10833"."SalesReturn" s inner join "10083_10833"."SalesReturnItems" sri on s."SaleReturnId" = sri."SaleReturnId" left join "10083_10833"."SalesReturnBillTo" srbt on s."SaleReturnId" = srbt."SaleReturnId" left join "10083_10833"."SalesReturnValueDetails" srvd on s."SaleReturnId" = srvd."SaleReturnId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and s."DocumentStatus" = 1 and sri."TaxabilityCode" = 2 group by s."Number", srbt."MailingName", s."InvoiceType", srbt."GSTIN", s."SaleReturnId" union all select s."SaleDebitNoteId" as "DocId", s."Date" as "Date", 'SDN' as "DocumentType", s."Number" as "InvoiceNumber", sdnbt."GSTIN" as "GSTIN", sdnbt."MailingName" as "CustomerName", s."InvoiceType" as "NoteSupplyType", 'D' as "NoteType", coalesce(SUM(sdni."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sdni."IGST"), 0) as "IGST", coalesce(SUM(sdni."CGST"), 0) as "CGST", coalesce(SUM(sdni."SGST"), 0) as "SGST", coalesce(SUM(sdni."Cess"), 0) as "CESS" from "10083_10833"."SalesDebitNote" s inner join "10083_10833"."SalesDebitNoteItems" sdni on s."SaleDebitNoteId" = sdni."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteBillTo" sdnbt on s."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteValueDetails" sdnvd on s."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and s."DocumentStatus" = 1 and sdni."TaxabilityCode" = 2 group by s."Number", sdnbt."MailingName", s."InvoiceType", sdnbt."GSTIN", s."SaleDebitNoteId" ) as combinedData ) as result; when 'CDNUR' then select json_agg(result) into jsondata from ( select "DocId", "Date", "DocumentType", "InvoiceNumber", "NoteSupplyType", "NoteType", "TaxableValue", "IGST", "CGST", "SGST", "CESS" from ( select s."SaleReturnId" as "DocId", s."Date" as "Date", 'SR' as "DocumentType", s."Number" as "InvoiceNumber", s."InvoiceType" as "NoteSupplyType", 'C' as "NoteType", coalesce(SUM(sri."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sri."IGST"), 0) as "IGST", coalesce(SUM(sri."CGST"), 0) as "CGST", coalesce(SUM(sri."SGST"), 0) as "SGST", coalesce(SUM(sri."Cess"), 0) as "CESS" from "10083_10833"."SalesReturn" s inner join "10083_10833"."SalesReturnItems" sri on s."SaleReturnId" = sri."SaleReturnId" left join "10083_10833"."SalesReturnBillTo" srbt on s."SaleReturnId" = srbt."SaleReturnId" left join "10083_10833"."SalesReturnValueDetails" srvd on s."SaleReturnId" = srvd."SaleReturnId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (3, 5) and s."DocumentStatus" = 1 and sri."TaxabilityCode" = 2 group by s."Number", s."InvoiceType", s."SaleReturnId" union all select s."SaleDebitNoteId" as "DocId", s."Date" as "Date", 'SDN' as "DocumentType", s."Number" as "InvoiceNumber", s."InvoiceType" as "NoteSupplyType", 'D' as "NoteType", coalesce(SUM(sdni."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sdni."IGST"), 0) as "IGST", coalesce(SUM(sdni."CGST"), 0) as "CGST", coalesce(SUM(sdni."SGST"), 0) as "SGST", coalesce(SUM(sdni."Cess"), 0) as "CESS" from "10083_10833"."SalesDebitNote" s inner join "10083_10833"."SalesDebitNoteItems" sdni on s."SaleDebitNoteId" = sdni."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteBillTo" sdnbt on s."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteValueDetails" sdnvd on s."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (3, 5) and s."DocumentStatus" = 1 and sdni."TaxabilityCode" = 2 group by s."Number", s."InvoiceType", s."SaleDebitNoteId" ) as combinedData ) as result; when 'B2CS_POS' then select json_agg(result) into jsondata from ( select s."SaleId" as "DocId", 'S' as "DocumentType", sbt."MailingName" as "CustomerName", sbt."POSName" as "POSName", s."Number" as "InvoiceNumber", coalesce(svd."TotalInvoiceValue", 0) as "InvoiceValue", s."Date" as "Date", coalesce(SUM(si."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."CGST"), 0) as "CGST", coalesce(SUM(si."SGST"), 0) as "SGST", coalesce(SUM(si."Cess"), 0) as "CESS" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and s."DocumentStatus" = 1 and c."GSTCategoryCode" in (3) and si."TaxabilityCode" = 2 and sbt."POSCode" = pos and ( (svd."TotalInvoiceValue" <= 250000) or (svd."TotalInvoiceValue" > 250000 and sbt."POSCode" = companypos) ) group by s."SaleId", s."Number", sbt."POSName", sbt."POSCode", sbt."MailingName", svd."TotalInvoiceValue" order by sbt."POSCode" ) as result; when 'B2CS' then select json_agg(result) into jsondata from ( select sbt."POSName", sbt."POSCode", case when sbt."POSCode" = companypos then 'Intra' else 'Inter' end as "SupplyType", coalesce(SUM(si."TaxableValue"), 0) as "TaxableValue", coalesce(si."GstRate", 0) as "Gst", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."CGST"), 0) as "CGST", coalesce(SUM(si."SGST"), 0) as "SGST", coalesce(SUM(si."Cess"), 0) as "CESS" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and s."DocumentStatus" = 1 and c."GSTCategoryCode" in (3) and si."TaxabilityCode" = 2 and ( (svd."TotalInvoiceValue" <= 250000 and c."GSTCategoryCode" = 3) or (svd."TotalInvoiceValue" > 250000 and sbt."POSCode" = companypos and c."GSTCategoryCode" in (3)) ) group by sbt."POSName", sbt."POSCode", si."GstRate" order by sbt."POSCode" ) as result; when 'B2CL' then select json_agg(result) into jsondata from ( select s."SaleId" as "DocId", 'S' as "DocumentType", s."Date" as "Date", s."Number" as "InvoiceNumber", sbt."POSName" as "POSName", sbt."MailingName" as "CustomerName", coalesce(svd."TotalInvoiceValue", 0) as "InvoiceValue", coalesce(SUM(si."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."Cess"), 0) as "CESS" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (3) and s."DocumentStatus" = 1 and si."TaxabilityCode" = 2 and svd."TotalInvoiceValue" > 250000 and sbt."POSCode" <> companyPos group by s."Number", sbt."POSName", s."Date", sbt."POSCode", sbt."MailingName", svd."TotalInvoiceValue", s."SaleId" ) as result; when 'B2C' then select JSON_AGG(result) into jsondata from ( select 'B2CL' as "SectionName", COUNT(distinct(s."SaleId")) as "NumberOfDocument", coalesce(SUM(si."TaxableValue"), 0) as "OutwardSupplies", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."SGST"), 0) as "SGST", coalesce(SUM(si."CGST"), 0) as "CGST", coalesce(SUM(si."Cess"), 0) as "CESS", coalesce(SUM(si."IGST") + SUM(si."SGST") + SUM(si."CGST") + SUM(si."Cess"), 0) as "TotalTax" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (3) and s."DocumentStatus" = 1 and si."TaxabilityCode" = 2 and svd."TotalInvoiceValue" > 250000 and sbt."POSCode" <> companypos union all select 'B2CS' as "SectionName", COUNT(distinct(s."SaleId")) as "NumberOfDocument", coalesce(SUM(si."TaxableValue"), 0) as "OutwardSupplies", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."CGST"), 0) as "CGST", coalesce(SUM(si."SGST"), 0) as "SGST", coalesce(SUM(si."Cess"), 0) as "CESS", coalesce(SUM(si."IGST") + SUM(si."SGST") + SUM(si."CGST") + SUM(si."Cess"), 0) as "TotalTax" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and s."DocumentStatus" = 1 and si."TaxabilityCode" = 2 and c."GSTCategoryCode" in (3) and ( (svd."TotalInvoiceValue" <= 250000 and c."GSTCategoryCode" = 3) or (svd."TotalInvoiceValue" > 250000 and sbt."POSCode" = companypos and c."GSTCategoryCode" in (3)) ) ) as result; when 'EXP' then select json_agg(result) into jsondata from ( select s."SaleId" as "DocId", 'S' as "DocumentType", s."Number" as "InvoiceNumber", s."Date" as "Date", sed."ShippingBillNumber" as "ShippingBillNumber", sed."ShippingBillDate" as "ShippingBillDate", s."InvoiceType" as "ExportType", coalesce(svd."TotalInvoiceValue", 0) as "InvoiceValue", coalesce(SUM(si."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."Cess"), 0) as "CESS" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" left join "10083_10833"."SalesExportDetails" sed on s."SaleId" = sed."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and s."DocumentStatus" = 1 and c."GSTCategoryCode" in (5) and si."TaxabilityCode" = 2 group by s."Number", s."Date", s."SaleId", s."InvoiceType", svd."TotalInvoiceValue", sed."ShippingBillNumber", sed."ShippingBillDate" ) as result; when 'HSN_DETAILED' then select json_agg(result) into jsondata from ( select s."SaleId" as "DocId", 'S' as "DocumentType", s."Date" as "Date", s."Number" as "InvoiceNumber", sbt."POSName" as "POSName", sbt."MailingName" as "CustomerName", coalesce(svd."TotalInvoiceValue", 0) as "InvoiceValue", coalesce(SUM(si."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."SGST"), 0) as "SGST", coalesce(SUM(si."CGST"), 0) as "CGST", coalesce(SUM(si."Cess"), 0) as "CESS" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and s."DocumentStatus" = 1 and si."TaxabilityCode" in (2) and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) and si."HSNSAC" = hsnNo group by s."Number", sbt."POSName", s."Date", s."SaleId", sbt."MailingName", svd."TotalInvoiceValue" union all select sr."SaleReturnId" as "DocId", 'SR' as "DocumentType", sr."Date" as "Date", sr."Number" as "InvoiceNumber", srbt."POSName" as "POSName", srbt."MailingName" as "CustomerName", coalesce(srvd."TotalInvoiceValue", 0) as "InvoiceValue", coalesce(SUM(sri."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sri."IGST"), 0) as "IGST", coalesce(SUM(sri."SGST"), 0) as "SGST", coalesce(SUM(sri."CGST"), 0) as "CGST", coalesce(SUM(sri."Cess"), 0) as "CESS" from "10083_10833"."SalesReturn" sr inner join "10083_10833"."SalesReturnItems" sri on sr."SaleReturnId" = sri."SaleReturnId" left join "10083_10833"."SalesReturnBillTo" srbt on sr."SaleReturnId" = srbt."SaleReturnId" left join "10083_10833"."SalesReturnValueDetails" srvd on sr."SaleReturnId" = srvd."SaleReturnId" inner join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and sr."DocumentStatus" = 1 and sri."TaxabilityCode" in (2) and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) and sri."HSNSAC" = hsnNo group by sr."Number", srbt."POSName", sr."Date", sr."SaleReturnId", srbt."MailingName", srvd."TotalInvoiceValue" union all select sdn."SaleDebitNoteId" as "DocId", 'SDN' as "DocumentType", sdn."Date" as "Date", sdn."Number" as "InvoiceNumber", sdnbt."POSName" as "POSName", sdnbt."MailingName" as "CustomerName", sdnvd."TotalInvoiceValue" as "InvoiceValue", coalesce(SUM(sdni."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sdni."IGST"), 0) as "IGST", coalesce(SUM(sdni."SGST"), 0) as "SGST", coalesce(SUM(sdni."CGST"), 0) as "CGST", coalesce(SUM(sdni."Cess"), 0) as "CESS" from "10083_10833"."SalesDebitNote" sdn inner join "10083_10833"."SalesDebitNoteItems" sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteBillTo" sdnbt on sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteValueDetails" sdnvd on sdn."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" inner join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and sdn."DocumentStatus" = 1 and sdni."TaxabilityCode" in (2) and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) and sdni."HSNSAC" = hsnNo group by sdn."Number", sdnbt."POSName", sdn."Date", sdn."SaleDebitNoteId", sdnbt."MailingName", sdnvd."TotalInvoiceValue" ) as result; when 'HSN_SUMMARY' then select JSON_AGG(result) into jsondata from ( select DISTINCT ON (combinedData."HSNSAC") combinedData."HSNSAC" AS "HSNSAC", "ItemDescription", "UQCCode", coalesce(SUM("TotalQuantity"), 0) as "TotalQuantity", "GstRate", coalesce(SUM("IGST"), 0) as "IGST", coalesce(SUM("CGST"), 0) as "CGST", coalesce(SUM("SGST"), 0) as "SGST", coalesce(SUM("CESS"), 0) as "CESS" from ( select DISTINCT ON (si."HSNSAC") si."HSNSAC" AS "HSNSAC", si."ItemDescription", su."UQCCode", coalesce(SUM(si."Quantity"), 0) as "TotalQuantity", si."GstRate", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."CGST"), 0) as "CGST", coalesce(SUM(si."SGST"), 0) as "SGST", coalesce(SUM(si."Cess"), 0) as "CESS" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" inner join "10083_10833"."StockItem" sti on si."StockItemId" = sti."StockItemId" inner join "10083_10833"."SimpleUnit" su on sti."UOMId" = su."SimpleUnitId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and s."DocumentStatus" = 1 and si."TaxabilityCode" in (2) and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) group by si."HSNSAC", si."ItemDescription", su."UQCCode", si."GstRate" union all select DISTINCT ON (sri."HSNSAC") sri."HSNSAC" AS "HSNSAC", sri."ItemDescription", su."UQCCode", -coalesce(SUM(sri."Quantity"), 0) as "TotalQuantity", sri."GstRate", -coalesce(SUM(sri."IGST"), 0) as "IGST", -coalesce(SUM(sri."CGST"), 0) as "CGST", -coalesce(SUM(sri."SGST"), 0) as "SGST", -coalesce(SUM(sri."Cess"), 0) as "CESS" from "10083_10833"."SalesReturn" sr inner join "10083_10833"."SalesReturnItems" sri on sr."SaleReturnId" = sri."SaleReturnId" inner join "10083_10833"."StockItem" sti on sri."StockItemId" = sti."StockItemId" inner join "10083_10833"."SimpleUnit" su on sti."UOMId" = su."SimpleUnitId" inner join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and sr."DocumentStatus" = 1 and sri."TaxabilityCode" in (2) and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) group by sri."HSNSAC", sri."ItemDescription", su."UQCCode", sri."GstRate" union all select DISTINCT ON (sdni."HSNSAC") sdni."HSNSAC" AS "HSNSAC", sdni."ItemDescription", su."UQCCode", coalesce(SUM(sdni."Quantity"), 0) as "TotalQuantity", sdni."GstRate", coalesce(SUM(sdni."IGST"), 0) as "IGST", coalesce(SUM(sdni."CGST"), 0) as "CGST", coalesce(SUM(sdni."SGST"), 0) as "SGST", coalesce(SUM(sdni."Cess"), 0) as "CESS" from "10083_10833"."SalesDebitNote" sdn inner join "10083_10833"."SalesDebitNoteItems" sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" inner join "10083_10833"."StockItem" sti on sdni."StockItemId" = sti."StockItemId" inner join "10083_10833"."SimpleUnit" su on sti."UOMId" = su."SimpleUnitId" inner join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and sdn."DocumentStatus" = 1 and sdni."TaxabilityCode" in (2) and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) group by sdni."HSNSAC", sdni."ItemDescription", su."UQCCode", sdni."GstRate" ) as combinedData group by "HSNSAC", "ItemDescription", "UQCCode", "GstRate" ) as result; when 'DOC_ISSUE_S' then select json_agg(result) into jsondata from ( select s."SaleId" as "DocId", 'S' as "DocumentType", s."Date" as "Date", s."Number" as "InvoiceNumber", sbt."GSTIN" as "GSTIN", sbt."MailingName" as "CustomerName", coalesce(SUM(si."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."CGST"), 0) as "CGST", coalesce(SUM(si."SGST"), 0) as "SGST", coalesce(SUM(si."Cess"), 0) as "CESS" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and s."DocumentStatus" in (1, 2) and si."TaxabilityCode" in (2, 3, 4, 5) and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9) group by s."SaleId", s."Date", s."Number", sbt."GSTIN", sbt."MailingName" ) as result; when 'DOC_ISSUE_SR' then select json_agg(result) into jsondata from ( select sr."SaleReturnId" as "DocId", 'SR' as "DocumentType", sr."Date" as "Date", sr."Number" as "InvoiceNumber", srbt."GSTIN" as "GSTIN", srbt."MailingName" as "CustomerName", coalesce(SUM(sri."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sri."IGST"), 0) as "IGST", coalesce(SUM(sri."CGST"), 0) as "CGST", coalesce(SUM(sri."SGST"), 0) as "SGST", coalesce(SUM(sri."Cess"), 0) as "CESS" from "10083_10833"."SalesReturn" sr inner join "10083_10833"."SalesReturnItems" sri on sr."SaleReturnId" = sri."SaleReturnId" left join "10083_10833"."SalesReturnBillTo" srbt on sr."SaleReturnId" = srbt."SaleReturnId" inner join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and sr."DocumentStatus" in (1, 2) and sri."TaxabilityCode" in (2, 3, 4, 5) and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9) group by sr."SaleReturnId", sr."Date", sr."Number", srbt."GSTIN", srbt."MailingName" ) as result; when 'DOC_ISSUE_SDN' then select json_agg(result) into jsondata from ( select sdn."SaleDebitNoteId" as "DocId", 'SDN' as "DocumentType", sdn."Date" as "Date", sdn."Number" as "InvoiceNumber", sdnbt."GSTIN" as "GSTIN", sdnbt."MailingName" as "CustomerName", coalesce(SUM(sdni."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sdni."IGST"), 0) as "IGST", coalesce(SUM(sdni."CGST"), 0) as "CGST", coalesce(SUM(sdni."SGST"), 0) as "SGST", coalesce(SUM(sdni."Cess"), 0) as "CESS" from "10083_10833"."SalesDebitNote" sdn inner join "10083_10833"."SalesDebitNoteItems" sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteBillTo" sdnbt on sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" inner join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and sdn."DocumentStatus" in (1, 2) and sdni."TaxabilityCode" in (2, 3, 4, 5) and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9) group by sdn."SaleDebitNoteId", sdn."Date", sdn."Number", sdnbt."GSTIN", sdnbt."MailingName" ) as result; when 'NIL_INTER_REG' then select json_agg(result) into jsondata from ( select s."SaleId" as "DocId", 'S' as "DocumentType", s."Date" as "Date", s."Number" as "InvoiceNumber", sbt."POSName" as "POSName", sbt."MailingName" as "CustomerName", svd."TotalInvoiceValue" as "InvoiceValue", coalesce(SUM(si."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."CGST"), 0) as "CGST", coalesce(SUM(si."SGST"), 0) as "SGST", coalesce(SUM(si."Cess"), 0) as "CESS" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and s."DocumentStatus" = 1 and sbt."POSCode" <> companypos and si."TaxabilityCode" in (3, 4, 5) group by s."SaleId", sbt."POSName", s."Date", s."Number", sbt."MailingName", svd."TotalInvoiceValue" union all select sr."SaleReturnId" as "DocId", 'SR' as "DocumentType", sr."Date" as "Date", sr."Number" as "InvoiceNumber", srbt."POSName" as "POSName", srbt."MailingName" as "CustomerName", srvd."TotalInvoiceValue" as "InvoiceValue", coalesce(SUM(sri."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sri."IGST"), 0) as "IGST", coalesce(SUM(sri."CGST"), 0) as "CGST", coalesce(SUM(sri."SGST"), 0) as "SGST", coalesce(SUM(sri."Cess"), 0) as "CESS" from "10083_10833"."SalesReturn" sr inner join "10083_10833"."SalesReturnItems" sri on sr."SaleReturnId" = sri."SaleReturnId" left join "10083_10833"."SalesReturnBillTo" srbt on sr."SaleReturnId" = srbt."SaleReturnId" left join "10083_10833"."SalesReturnValueDetails" srvd on sr."SaleReturnId" = srvd."SaleReturnId" inner join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and sr."DocumentStatus" = 1 and srbt."POSCode" <> companypos and sri."TaxabilityCode" in (3, 4, 5) group by sr."SaleReturnId", srbt."POSName", sr."Date", sr."Number", srbt."MailingName", srvd."TotalInvoiceValue" union all select sdn."SaleDebitNoteId" as "DocId", 'SDN' as "DocumentType", sdn."Date" as "Date", sdn."Number" as "InvoiceNumber", sdnbt."POSName" as "POSName", sdnbt."MailingName" as "CustomerName", sdnvd."TotalInvoiceValue" as "InvoiceValue", coalesce(SUM(sdni."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sdni."IGST"), 0) as "IGST", coalesce(SUM(sdni."CGST"), 0) as "CGST", coalesce(SUM(sdni."SGST"), 0) as "SGST", coalesce(SUM(sdni."Cess"), 0) as "CESS" from "10083_10833"."SalesDebitNote" sdn inner join "10083_10833"."SalesDebitNoteItems" sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteBillTo" sdnbt on sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteValueDetails" sdnvd on sdn."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" inner join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and sdn."DocumentStatus" = 1 and sdnbt."POSCode" <> companypos and sdni."TaxabilityCode" in (3, 4, 5) group by sdn."SaleDebitNoteId", sdnbt."POSName", sdn."Date", sdn."Number", sdnbt."MailingName", sdnvd."TotalInvoiceValue" ) as result; when 'NIL_INTER_UNREG' then select json_agg(result) into jsondata from ( select s."SaleId" as "DocId", 'S' as "DocumentType", s."Date" as "Date", s."Number" as "InvoiceNumber", sbt."POSName" as "POSName", sbt."MailingName" as "CustomerName", svd."TotalInvoiceValue" as "InvoiceValue", coalesce(SUM(si."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."CGST"), 0) as "CGST", coalesce(SUM(si."SGST"), 0) as "SGST", coalesce(SUM(si."Cess"), 0) as "CESS" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (3) and s."DocumentStatus" = 1 and sbt."POSCode" <> companypos and si."TaxabilityCode" in (3, 4, 5) group by s."SaleId", sbt."POSName", s."Date", s."Number", sbt."MailingName", svd."TotalInvoiceValue" union all select sr."SaleReturnId" as "DocId", 'SR' as "DocumentType", sr."Date" as "Date", sr."Number" as "InvoiceNumber", srbt."POSName" as "POSName", srbt."MailingName" as "CustomerName", srvd."TotalInvoiceValue" as "InvoiceValue", coalesce(SUM(sri."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sri."IGST"), 0) as "IGST", coalesce(SUM(sri."CGST"), 0) as "CGST", coalesce(SUM(sri."SGST"), 0) as "SGST", coalesce(SUM(sri."Cess"), 0) as "CESS" from "10083_10833"."SalesReturn" sr inner join "10083_10833"."SalesReturnItems" sri on sr."SaleReturnId" = sri."SaleReturnId" left join "10083_10833"."SalesReturnBillTo" srbt on sr."SaleReturnId" = srbt."SaleReturnId" left join "10083_10833"."SalesReturnValueDetails" srvd on sr."SaleReturnId" = srvd."SaleReturnId" inner join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and c."GSTCategoryCode" in (3) and sr."DocumentStatus" = 1 and srbt."POSCode" <> companypos and sri."TaxabilityCode" in (3, 4, 5) group by sr."SaleReturnId", srbt."POSName", sr."Date", sr."Number", srbt."MailingName", srvd."TotalInvoiceValue" union all select sdn."SaleDebitNoteId" as "DocId", 'SDN' as "DocumentType", sdn."Date" as "Date", sdn."Number" as "InvoiceNumber", sdnbt."POSName" as "POSName", sdnbt."MailingName" as "CustomerName", sdnvd."TotalInvoiceValue" as "InvoiceValue", coalesce(SUM(sdni."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sdni."IGST"), 0) as "IGST", coalesce(SUM(sdni."CGST"), 0) as "CGST", coalesce(SUM(sdni."SGST"), 0) as "SGST", coalesce(SUM(sdni."Cess"), 0) as "CESS" from "10083_10833"."SalesDebitNote" sdn inner join "10083_10833"."SalesDebitNoteItems" sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteBillTo" sdnbt on sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteValueDetails" sdnvd on sdn."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" inner join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and c."GSTCategoryCode" in (3) and sdn."DocumentStatus" = 1 and sdnbt."POSCode" <> companypos and sdni."TaxabilityCode" in (3, 4, 5) group by sdn."SaleDebitNoteId", sdnbt."POSName", sdn."Date", sdn."Number", sdnbt."MailingName", sdnvd."TotalInvoiceValue" ) as result; when 'NIL_INTRA_REG' then select json_agg(result) into jsondata from ( select s."SaleId" as "DocId", 'S' as "DocumentType", s."Date" as "Date", s."Number" as "InvoiceNumber", sbt."POSName" as "POSName", sbt."MailingName" as "CustomerName", svd."TotalInvoiceValue" as "InvoiceValue", coalesce(SUM(si."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."CGST"), 0) as "CGST", coalesce(SUM(si."SGST"), 0) as "SGST", coalesce(SUM(si."Cess"), 0) as "CESS" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and s."DocumentStatus" = 1 and sbt."POSCode" = companypos and si."TaxabilityCode" in (3, 4, 5) group by s."SaleId", sbt."POSName", s."Date", s."Number", sbt."MailingName", svd."TotalInvoiceValue" union all select sr."SaleReturnId" as "DocId", 'SR' as "DocumentType", sr."Date" as "Date", sr."Number" as "InvoiceNumber", srbt."POSName" as "POSName", srbt."MailingName" as "CustomerName", srvd."TotalInvoiceValue" as "InvoiceValue", coalesce(SUM(sri."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sri."IGST"), 0) as "IGST", coalesce(SUM(sri."CGST"), 0) as "CGST", coalesce(SUM(sri."SGST"), 0) as "SGST", coalesce(SUM(sri."Cess"), 0) as "CESS" from "10083_10833"."SalesReturn" sr inner join "10083_10833"."SalesReturnItems" sri on sr."SaleReturnId" = sri."SaleReturnId" left join "10083_10833"."SalesReturnBillTo" srbt on sr."SaleReturnId" = srbt."SaleReturnId" left join "10083_10833"."SalesReturnValueDetails" srvd on sr."SaleReturnId" = srvd."SaleReturnId" inner join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and sr."DocumentStatus" = 1 and srbt."POSCode" = companypos and sri."TaxabilityCode" in (3, 4, 5) group by sr."SaleReturnId", srbt."POSName", sr."Date", sr."Number", srbt."MailingName", srvd."TotalInvoiceValue" union all select sdn."SaleDebitNoteId" as "DocId", 'SDN' as "DocumentType", sdn."Date" as "Date", sdn."Number" as "InvoiceNumber", sdnbt."POSName" as "POSName", sdnbt."MailingName" as "CustomerName", sdnvd."TotalInvoiceValue" as "InvoiceValue", coalesce(SUM(sdni."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sdni."IGST"), 0) as "IGST", coalesce(SUM(sdni."CGST"), 0) as "CGST", coalesce(SUM(sdni."SGST"), 0) as "SGST", coalesce(SUM(sdni."Cess"), 0) as "CESS" from "10083_10833"."SalesDebitNote" sdn inner join "10083_10833"."SalesDebitNoteItems" sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteBillTo" sdnbt on sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteValueDetails" sdnvd on sdn."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" inner join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and sdn."DocumentStatus" = 1 and sdnbt."POSCode" = companypos and sdni."TaxabilityCode" in (3, 4, 5) group by sdn."SaleDebitNoteId", sdnbt."POSName", sdn."Date", sdn."Number", sdnbt."MailingName", sdnvd."TotalInvoiceValue" ) as result; when 'NIL_INTRA_UNREG' then select json_agg(result) into jsondata from ( select s."SaleId" as "DocId", 'S' as "DocumentType", s."Date" as "Date", s."Number" as "InvoiceNumber", sbt."POSName" as "POSName", sbt."MailingName" as "CustomerName", svd."TotalInvoiceValue" as "InvoiceValue", coalesce(SUM(si."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."CGST"), 0) as "CGST", coalesce(SUM(si."SGST"), 0) as "SGST", coalesce(SUM(si."Cess"), 0) as "CESS" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" left join "10083_10833"."SalesValueDetails" svd on s."SaleId" = svd."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (3) and s."DocumentStatus" = 1 and sbt."POSCode" = companypos and si."TaxabilityCode" in (3, 4, 5) group by s."SaleId", sbt."POSName", s."Date", s."Number", sbt."MailingName", svd."TotalInvoiceValue" union all select sr."SaleReturnId" as "DocId", 'SR' as "DocumentType", sr."Date" as "Date", sr."Number" as "InvoiceNumber", srbt."POSName" as "POSName", srbt."MailingName" as "CustomerName", srvd."TotalInvoiceValue" as "InvoiceValue", coalesce(SUM(sri."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sri."IGST"), 0) as "IGST", coalesce(SUM(sri."CGST"), 0) as "CGST", coalesce(SUM(sri."SGST"), 0) as "SGST", coalesce(SUM(sri."Cess"), 0) as "CESS" from "10083_10833"."SalesReturn" sr inner join "10083_10833"."SalesReturnItems" sri on sr."SaleReturnId" = sri."SaleReturnId" left join "10083_10833"."SalesReturnBillTo" srbt on sr."SaleReturnId" = srbt."SaleReturnId" left join "10083_10833"."SalesReturnValueDetails" srvd on sr."SaleReturnId" = srvd."SaleReturnId" inner join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and c."GSTCategoryCode" in (3) and sr."DocumentStatus" = 1 and srbt."POSCode" = companypos and sri."TaxabilityCode" in (3, 4, 5) group by sr."SaleReturnId", srbt."POSName", sr."Date", sr."Number", srbt."MailingName", srvd."TotalInvoiceValue" union all select sdn."SaleDebitNoteId" as "DocId", 'SDN' as "DocumentType", sdn."Date" as "Date", sdn."Number" as "InvoiceNumber", sdnbt."POSName" as "POSName", sdnbt."MailingName" as "CustomerName", sdnvd."TotalInvoiceValue" as "InvoiceValue", coalesce(SUM(sdni."TaxableValue"), 0) as "TaxableValue", coalesce(SUM(sdni."IGST"), 0) as "IGST", coalesce(SUM(sdni."CGST"), 0) as "CGST", coalesce(SUM(sdni."SGST"), 0) as "SGST", coalesce(SUM(sdni."Cess"), 0) as "CESS" from "10083_10833"."SalesDebitNote" sdn inner join "10083_10833"."SalesDebitNoteItems" sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteBillTo" sdnbt on sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteValueDetails" sdnvd on sdn."SaleDebitNoteId" = sdnvd."SaleDebitNoteId" inner join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and c."GSTCategoryCode" in (3) and sdn."DocumentStatus" = 1 and sdnbt."POSCode" = companypos and sdni."TaxabilityCode" in (3, 4, 5) group by sdn."SaleDebitNoteId", sdnbt."POSName", sdn."Date", sdn."Number", sdnbt."MailingName", sdnvd."TotalInvoiceValue" ) as result; when 'NIL_SUMMARY' then select json_agg(result) into jsondata from ( select 'NIL_INTER_REG' as "SupplyType", coalesce(SUM("ExemptedAmount"), 0) as "ExemptedAmount", coalesce(SUM("NilRatedAmount"), 0) as "NilRatedAmount", coalesce(SUM("NonGSTSuppliersAmount"), 0) as "NonGSTSuppliersAmount" from ( select coalesce(SUM(case when si."TaxabilityCode" = 3 then si."TaxableValue" else 0 end), 0) as "ExemptedAmount", coalesce(SUM(case when si."TaxabilityCode" = 4 then si."TaxableValue" else 0 end), 0) as "NilRatedAmount", coalesce(SUM(case when si."TaxabilityCode" = 5 then si."TaxableValue" else 0 end), 0) as "NonGSTSuppliersAmount" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and s."DocumentStatus" = 1 and sbt."POSCode" <> companypos union all select coalesce(-SUM(case when sri."TaxabilityCode" = 3 then sri."TaxableValue" else 0 end), 0) as "ExemptedAmount", coalesce(-SUM(case when sri."TaxabilityCode" = 4 then sri."TaxableValue" else 0 end), 0) as "NilRatedAmount", coalesce(-SUM(case when sri."TaxabilityCode" = 5 then sri."TaxableValue" else 0 end), 0) as "NonGSTSuppliersAmount" from "10083_10833"."SalesReturn" sr inner join "10083_10833"."SalesReturnItems" sri on sr."SaleReturnId" = sri."SaleReturnId" left join "10083_10833"."SalesReturnBillTo" srbt on sr."SaleReturnId" = srbt."SaleReturnId" inner join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and sr."DocumentStatus" = 1 and srbt."POSCode" <> companypos union all select coalesce(SUM(case when sdni."TaxabilityCode" = 3 then sdni."TaxableValue" else 0 end), 0) as "ExemptedAmount", coalesce(SUM(case when sdni."TaxabilityCode" = 4 then sdni."TaxableValue" else 0 end), 0) as "NilRatedAmount", coalesce(SUM(case when sdni."TaxabilityCode" = 5 then sdni."TaxableValue" else 0 end), 0) as "NonGSTSuppliersAmount" from "10083_10833"."SalesDebitNote" sdn inner join "10083_10833"."SalesDebitNoteItems" sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteBillTo" sdnbt on sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" inner join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and sdn."DocumentStatus" = 1 and sdnbt."POSCode" <> companypos ) as combineData union all select 'NIL_INTER_UNREG' as "SupplyType", coalesce(SUM("ExemptedAmount"), 0) as "ExemptedAmount", coalesce(SUM("NilRatedAmount"), 0) as "NilRatedAmount", coalesce(SUM("NonGSTSuppliersAmount"), 0) as "NonGSTSuppliersAmount" from ( select coalesce(SUM(case when si."TaxabilityCode" = 3 then si."TaxableValue" else 0 end), 0) as "ExemptedAmount", coalesce(SUM(case when si."TaxabilityCode" = 4 then si."TaxableValue" else 0 end), 0) as "NilRatedAmount", coalesce(SUM(case when si."TaxabilityCode" = 5 then si."TaxableValue" else 0 end), 0) as "NonGSTSuppliersAmount" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (3) and s."DocumentStatus" = 1 and sbt."POSCode" <> companypos union all select coalesce(-SUM(case when sri."TaxabilityCode" = 3 then sri."TaxableValue" else 0 end), 0) as "ExemptedAmount", coalesce(-SUM(case when sri."TaxabilityCode" = 4 then sri."TaxableValue" else 0 end), 0) as "NilRatedAmount", coalesce(-SUM(case when sri."TaxabilityCode" = 5 then sri."TaxableValue" else 0 end), 0) as "NonGSTSuppliersAmount" from "10083_10833"."SalesReturn" sr inner join "10083_10833"."SalesReturnItems" sri on sr."SaleReturnId" = sri."SaleReturnId" left join "10083_10833"."SalesReturnBillTo" srbt on sr."SaleReturnId" = srbt."SaleReturnId" inner join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and c."GSTCategoryCode" in (3) and sr."DocumentStatus" = 1 and srbt."POSCode" <> companypos union all select coalesce(SUM(case when sdni."TaxabilityCode" = 3 then sdni."TaxableValue" else 0 end), 0) as "ExemptedAmount", coalesce(SUM(case when sdni."TaxabilityCode" = 4 then sdni."TaxableValue" else 0 end), 0) as "NilRatedAmount", coalesce(SUM(case when sdni."TaxabilityCode" = 5 then sdni."TaxableValue" else 0 end), 0) as "NonGSTSuppliersAmount" from "10083_10833"."SalesDebitNote" sdn inner join "10083_10833"."SalesDebitNoteItems" sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteBillTo" sdnbt on sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" inner join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and c."GSTCategoryCode" in (3) and sdn."DocumentStatus" = 1 and sdnbt."POSCode" <> companypos ) as combineData union all select 'NIL_INTRA_REG' as "SupplyType", coalesce(SUM("ExemptedAmount"), 0) as "ExemptedAmount", coalesce(SUM("NilRatedAmount"), 0) as "NilRatedAmount", coalesce(SUM("NonGSTSuppliersAmount"), 0) as "NonGSTSuppliersAmount" from ( select coalesce(SUM(case when si."TaxabilityCode" = 3 then si."TaxableValue" else 0 end), 0) as "ExemptedAmount", coalesce(SUM(case when si."TaxabilityCode" = 4 then si."TaxableValue" else 0 end), 0) as "NilRatedAmount", coalesce(SUM(case when si."TaxabilityCode" = 5 then si."TaxableValue" else 0 end), 0) as "NonGSTSuppliersAmount" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and s."DocumentStatus" = 1 and sbt."POSCode" = companypos union all select coalesce(-SUM(case when sri."TaxabilityCode" = 3 then sri."TaxableValue" else 0 end), 0) as "ExemptedAmount", coalesce(-SUM(case when sri."TaxabilityCode" = 4 then sri."TaxableValue" else 0 end), 0) as "NilRatedAmount", coalesce(-SUM(case when sri."TaxabilityCode" = 5 then sri."TaxableValue" else 0 end), 0) as "NonGSTSuppliersAmount" from "10083_10833"."SalesReturn" sr inner join "10083_10833"."SalesReturnItems" sri on sr."SaleReturnId" = sri."SaleReturnId" left join "10083_10833"."SalesReturnBillTo" srbt on sr."SaleReturnId" = srbt."SaleReturnId" inner join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and sr."DocumentStatus" = 1 and srbt."POSCode" = companypos union all select coalesce(SUM(case when sdni."TaxabilityCode" = 3 then sdni."TaxableValue" else 0 end), 0) as "ExemptedAmount", coalesce(SUM(case when sdni."TaxabilityCode" = 4 then sdni."TaxableValue" else 0 end), 0) as "NilRatedAmount", coalesce(SUM(case when sdni."TaxabilityCode" = 5 then sdni."TaxableValue" else 0 end), 0) as "NonGSTSuppliersAmount" from "10083_10833"."SalesDebitNote" sdn inner join "10083_10833"."SalesDebitNoteItems" sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteBillTo" sdnbt on sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" inner join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and sdn."DocumentStatus" = 1 and sdnbt."POSCode" = companypos ) as combineData union all select 'NIL_INTRA_UNREG' as "SupplyType", coalesce(SUM("ExemptedAmount"), 0) as "ExemptedAmount", coalesce(SUM("NilRatedAmount"), 0) as "NilRatedAmount", coalesce(SUM("NonGSTSuppliersAmount"), 0) as "NonGSTSuppliersAmount" from ( select coalesce(SUM(case when si."TaxabilityCode" = 3 then si."TaxableValue" else 0 end), 0) as "ExemptedAmount", coalesce(SUM(case when si."TaxabilityCode" = 4 then si."TaxableValue" else 0 end), 0) as "NilRatedAmount", coalesce(SUM(case when si."TaxabilityCode" = 5 then si."TaxableValue" else 0 end), 0) as "NonGSTSuppliersAmount" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" left join "10083_10833"."SalesBillTo" sbt on s."SaleId" = sbt."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (3) and s."DocumentStatus" = 1 and sbt."POSCode" = companypos union all select coalesce(-SUM(case when sri."TaxabilityCode" = 3 then sri."TaxableValue" else 0 end), 0) as "ExemptedAmount", coalesce(-SUM(case when sri."TaxabilityCode" = 4 then sri."TaxableValue" else 0 end), 0) as "NilRatedAmount", coalesce(-SUM(case when sri."TaxabilityCode" = 5 then sri."TaxableValue" else 0 end), 0) as "NonGSTSuppliersAmount" from "10083_10833"."SalesReturn" sr inner join "10083_10833"."SalesReturnItems" sri on sr."SaleReturnId" = sri."SaleReturnId" left join "10083_10833"."SalesReturnBillTo" srbt on sr."SaleReturnId" = srbt."SaleReturnId" inner join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and c."GSTCategoryCode" in (3) and sr."DocumentStatus" = 1 and srbt."POSCode" = companypos union all select coalesce(SUM(case when sdni."TaxabilityCode" = 3 then sdni."TaxableValue" else 0 end), 0) as "ExemptedAmount", coalesce(SUM(case when sdni."TaxabilityCode" = 4 then sdni."TaxableValue" else 0 end), 0) as "NilRatedAmount", coalesce(SUM(case when sdni."TaxabilityCode" = 5 then sdni."TaxableValue" else 0 end), 0) as "NonGSTSuppliersAmount" from "10083_10833"."SalesDebitNote" sdn inner join "10083_10833"."SalesDebitNoteItems" sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" left join "10083_10833"."SalesDebitNoteBillTo" sdnbt on sdn."SaleDebitNoteId" = sdnbt."SaleDebitNoteId" inner join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and c."GSTCategoryCode" in (3) and sdn."DocumentStatus" = 1 and sdnbt."POSCode" = companypos ) as combineData ) as result; when 'NIL_EXP_SUMMARY' then select json_agg(result) into jsondata from ( select "SectionName", coalesce("OutwardSupplies", 0) as "OutwardSupplies", coalesce("IGST", 0) as "IGST", coalesce("TotalTax", 0) as "TotalTax", coalesce("NumberOfDocument", 0) as "NumberOfDocument" from ( select 'NIL' as "SectionName", coalesce(SUM("TaxableValue"), 0) as "OutwardSupplies", 0 as "IGST", 0 as "TotalTax", '4' as "NumberOfDocument" from ( select coalesce(SUM(si."TaxableValue"), 0) as "TaxableValue" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 3, 4, 6, 7, 8, 9, 10) and si."TaxabilityCode" in (3, 4, 5) and s."DocumentStatus" = 1 union all select coalesce(-SUM(sri."TaxableValue"), 0) as "TaxableValue" from "10083_10833"."SalesReturn" sr inner join "10083_10833"."SalesReturnItems" sri on sr."SaleReturnId" = sri."SaleReturnId" inner join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 3, 4, 6, 7, 8, 9, 10) and sri."TaxabilityCode" in (3, 4, 5) and sr."DocumentStatus" = 1 union all select coalesce(SUM(sdni."TaxableValue"), 0) as "TaxableValue" from "10083_10833"."SalesDebitNote" sdn inner join "10083_10833"."SalesDebitNoteItems" sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" inner join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 3, 4, 6, 7, 8, 9, 10) and sdni."TaxabilityCode" in (3, 4, 5) and sdn."DocumentStatus" = 1 ) as combineData1 union all select 'EXP' as "SectionName", coalesce(SUM(si."TaxableValue"), 0) as "OutwardSupplies", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."IGST"), 0) + coalesce(SUM(si."Cess"), 0) as "TotalTax", COUNT(distinct(s."SaleId")) as "NumberOfDocument" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and s."DocumentStatus" = 1 and c."GSTCategoryCode" = 5 and si."TaxabilityCode" = 2 ) as finalData ) as result; else raise exception 'Invalid sectiontype: %', sectiontype; end case; end $$;


ALTER PROCEDURE "10083_10833".getgstr1sectiondata(IN fromdate date, IN todate date, IN sectiontype character varying, OUT jsondata jsonb, IN companypos character, IN pos character, IN hsnno character varying) OWNER TO "10083";

--
-- TOC entry 2347 (class 1255 OID 187211)
-- Name: getgstr1summary(date, date); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".getgstr1summary(IN fromdate date, IN todate date, OUT jsondata jsonb)
    LANGUAGE plpgsql
    AS $$ begin select jsonb_build_object( 'docs', jsonb_agg( jsonb_build_object( 'NOD', docs."NOD", 'DocumentType', docs."DocumentType", 'From', docs."fromData", 'To', docs."toData", 'TotalNo', docs."TotalNo", 'Cancellated', docs."Cancellated", 'NetIssued', docs."NetIssued" ) ), 'b2b', ( select jsonb_build_object( 'NumberOfDocument', b2bTotal."NumberOfDocument", 'OutwardSupply', b2bTotal."OutwardSupply", 'IGST', b2bTotal."IGST", 'CGST', b2bTotal."CGST", 'SGST', b2bTotal."SGST", 'CESS', b2bTotal."CESS", 'TotalTax', b2bTotal."TotalTax" ) from ( select coalesce(COUNT(distinct s."SaleId"), 0) as "NumberOfDocument", coalesce(SUM(si."TaxableValue"), 0) as "OutwardSupply", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."CGST"), 0) as "CGST", coalesce(SUM(si."SGST"), 0) as "SGST", coalesce(SUM(si."Cess"), 0) as "CESS", coalesce(SUM(si."IGST" + si."CGST" + si."SGST" + si."Cess"), 0) as "TotalTax" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 4, 6, 7, 8, 9, 10) and s."DocumentStatus" = 1 and si."TaxabilityCode" = 2 ) as b2bTotal ), 'b2c', ( select jsonb_build_object( 'NumberOfDocument', b2cTotal."NumberOfDocument", 'OutwardSupply', b2cTotal."OutwardSupply", 'IGST', b2cTotal."IGST", 'CGST', b2cTotal."CGST", 'SGST', b2cTotal."SGST", 'CESS', b2cTotal."CESS", 'TotalTax', b2cTotal."TotalTax" ) from ( select coalesce(COUNT(distinct s."SaleId"), 0) as "NumberOfDocument", coalesce(SUM(si."TaxableValue"), 0) as "OutwardSupply", coalesce(SUM(si."IGST"), 0) as "IGST", coalesce(SUM(si."CGST"), 0) as "CGST", coalesce(SUM(si."SGST"), 0) as "SGST", coalesce(SUM(si."Cess"), 0) as "CESS", coalesce(SUM(si."IGST" + si."CGST" + si."SGST" + si."Cess"), 0) as "TotalTax" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (3) and si."TaxabilityCode" = 2 and s."DocumentStatus" = 1 ) as b2cTotal ), 'nilExp', ( select jsonb_build_object( 'NumberOfDocument', expTotal."NumberOfDocument", 'OutwardSupply', expTotal."OutwardSupply", 'IGST', expTotal."IGST", 'CGST', expTotal."CGST", 'SGST', expTotal."SGST", 'CESS', expTotal."CESS", 'TotalTax', expTotal."TotalTax" ) from ( select coalesce(SUM(exps."NumberOfDocument"), 0) as "NumberOfDocument", coalesce(SUM(exps."OutwardSupply"), 0) as "OutwardSupply", coalesce(SUM(exps."IGST"), 0) as "IGST", coalesce(SUM(exps."CGST"), 0) as "CGST", coalesce(SUM(exps."SGST"), 0) as "SGST", coalesce(SUM(exps."CESS"), 0) as "CESS", coalesce(SUM(exps."TotalTax"), 0) as "TotalTax" from ( select SUM(nilTotal."NumberOfDocument") as "NumberOfDocument", SUM(nilTotal."OutwardSupply") as "OutwardSupply", SUM(nilTotal."IGST") as "IGST", SUM(nilTotal."CGST") as "CGST", SUM(nilTotal."SGST") as "SGST", SUM(nilTotal."CESS") as "CESS", SUM(nilTotal."TotalTax") as "TotalTax" from ( select COUNT(distinct s."SaleId") as "NumberOfDocument", SUM(si."TaxableValue") as "OutwardSupply", SUM(si."IGST") as "IGST", SUM(si."CGST") as "CGST", SUM(si."SGST") as "SGST", SUM(si."Cess") as "CESS", SUM(si."IGST" + si."CGST" + si."SGST" + si."Cess") as "TotalTax" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 3, 4, 6, 7, 8, 9, 10) and s."DocumentStatus" = 1 and si."TaxabilityCode" in (3, 4, 5) union all select COUNT(distinct sr."SaleReturnId") as "NumberOfDocument", -SUM(sri."TaxableValue") as "OutwardSupply", -SUM(sri."IGST") as "IGST", -SUM(sri."CGST") as "CGST", -SUM(sri."SGST") as "SGST", -SUM(sri."Cess") as "CESS", -SUM(sri."IGST" + sri."CGST" + sri."SGST" + sri."Cess") as "TotalTax" from "10083_10833"."SalesReturn" sr inner join "10083_10833"."SalesReturnItems" sri on sr."SaleReturnId" = sri."SaleReturnId" inner join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 3, 4, 6, 7, 8, 9, 10) and sr."DocumentStatus" = 1 and sri."TaxabilityCode" in (3, 4, 5) union all select COUNT(distinct sdn."SaleDebitNoteId") as "NumberOfDocument", SUM(sdni."TaxableValue") as "OutwardSupply", SUM(sdni."IGST") as "IGST", SUM(sdni."CGST") as "CGST", SUM(sdni."SGST") as "SGST", SUM(sdni."Cess") as "CESS", SUM(sdni."IGST" + sdni."CGST" + sdni."SGST" + sdni."Cess") as "TotalTax" from "10083_10833"."SalesDebitNote" sdn inner join "10083_10833"."SalesDebitNoteItems" sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" inner join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and c."GSTCategoryCode" in (1, 2, 3, 4, 6, 7, 8, 9, 10) and sdn."DocumentStatus" = 1 and sdni."TaxabilityCode" in (3, 4, 5) ) as nilTotal union all select COUNT(distinct(s."SaleId")) as "NumberOfDocument", SUM(si."TaxableValue") as "OutwardSupply", SUM(si."IGST") as "IGST", SUM(si."CGST") as "CGST", SUM(si."SGST") as "SGST", SUM(si."Cess") as "CESS", SUM(si."IGST" + si."CGST" + si."SGST" + si."Cess") as "TotalTax" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and c."GSTCategoryCode" in (5) and si."TaxabilityCode" = 2 and s."DocumentStatus" = 1 ) as exps ) as expTotal ), 'cdn', ( select jsonb_build_object('NumberOfDocument', cdnTotal."NumberOfDocument", 'OutwardSupply', cdnTotal."OutwardSupply", 'IGST', cdnTotal."IGST", 'CGST', cdnTotal."CGST", 'SGST', cdnTotal."SGST", 'CESS', cdnTotal."CESS", 'TotalTax', cdnTotal."TotalTax" ) from ( select coalesce(SUM("NumberOfDocument"), 0) as "NumberOfDocument", coalesce(SUM("OutwardSupply"), 0) as "OutwardSupply", coalesce(SUM("IGST"), 0) as "IGST", coalesce(SUM("CGST"), 0) as "CGST", coalesce(SUM("SGST"), 0) as "SGST", coalesce(SUM("CESS"), 0) as "CESS", coalesce(SUM("TotalTax"), 0) as "TotalTax" from ( select count(distinct(s."SaleReturnId")) as "NumberOfDocument", -SUM(sri."TaxableValue") as "OutwardSupply", -SUM(sri."IGST") as "IGST", -SUM(sri."CGST") as "CGST", -SUM(sri."SGST") as "SGST", -SUM(sri."Cess") as "CESS", -SUM(sri."IGST" + sri."CGST" + sri."SGST" + sri."Cess") as "TotalTax" from "10083_10833"."SalesReturn" s join "10083_10833"."SalesReturnItems" sri on s."SaleReturnId" = sri."SaleReturnId" join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."DocumentStatus" = 1 and s."Date" between fromdate and todate and sri."TaxabilityCode" = 2 and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) union all select count(distinct(s."SaleDebitNoteId")) as "NumberOfDocument", SUM(sdni."TaxableValue") as "OutwardSupply", SUM(sdni."IGST") as "IGST", SUM(sdni."CGST") as "CGST", SUM(sdni."SGST") as "SGST", SUM(sdni."Cess") as "CESS", SUM(sdni."IGST" + sdni."CGST" + sdni."SGST" + sdni."Cess") as "TotalTax" from "10083_10833"."SalesDebitNote" s join "10083_10833"."SalesDebitNoteItems" sdni on s."SaleDebitNoteId" = sdni."SaleDebitNoteId" join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."DocumentStatus" = 1 and s."Date" between fromdate and todate and sdni."TaxabilityCode" = 2 and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) ) as combinedData ) as cdnTotal ), 'hsn', ( select jsonb_build_object( 'NumberOfDocument', hsnTotal."NumberOfDocument", 'OutwardSupply', hsnTotal."OutwardSupply", 'IGST', hsnTotal."IGST", 'CGST', hsnTotal."CGST", 'SGST', hsnTotal."SGST", 'CESS', hsnTotal."CESS", 'TotalTax', hsnTotal."TotalTax" ) from ( select coalesce(COUNT(distinct "NumberOfDocument"), 0) as "NumberOfDocument", coalesce(SUM("OutwardSupply"), 0) as "OutwardSupply", coalesce(SUM("IGST"), 0) as "IGST", coalesce(SUM("CGST"), 0) as "CGST", coalesce(SUM("SGST"), 0) as "SGST", coalesce(SUM("CESS"), 0) as "CESS", coalesce(SUM("TotalTax"), 0) as "TotalTax" from ( select si."HSNSAC" as "NumberOfDocument", SUM(si."TaxableValue") as "OutwardSupply", SUM(si."IGST") as "IGST", SUM(si."CGST") as "CGST", SUM(si."SGST") as "SGST", SUM(si."Cess") as "CESS", SUM(si."IGST" + si."CGST" + si."SGST" + si."Cess") as "TotalTax" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and s."DocumentStatus" = 1 and si."TaxabilityCode" in (2) and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) group by si."HSNSAC" union all select sri."HSNSAC" as "NumberOfDocument", -SUM(sri."TaxableValue") as "OutwardSupply", -SUM(sri."IGST") as "IGST", -SUM(sri."CGST") as "CGST", -SUM(sri."SGST") as "SGST", -SUM(sri."Cess") as "CESS", -SUM(sri."IGST" + sri."CGST" + sri."SGST" + sri."Cess") as "TotalTax" from "10083_10833"."SalesReturn" s inner join "10083_10833"."SalesReturnItems" sri on s."SaleReturnId" = sri."SaleReturnId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and s."DocumentStatus" = 1 and sri."TaxabilityCode" in (2) and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) group by sri."HSNSAC" union all select sdni."HSNSAC" as "NumberOfDocument", SUM(sdni."TaxableValue") as "OutwardSupply", SUM(sdni."IGST") as "IGST", SUM(sdni."CGST") as "CGST", SUM(sdni."SGST") as "SGST", SUM(sdni."Cess") as "CESS", SUM(sdni."IGST" + sdni."CGST" + sdni."SGST" + sdni."Cess") as "TotalTax" from "10083_10833"."SalesDebitNote" s inner join "10083_10833"."SalesDebitNoteItems" sdni on s."SaleDebitNoteId" = sdni."SaleDebitNoteId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and s."DocumentStatus" = 1 and sdni."TaxabilityCode" in (2) and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) group by sdni."HSNSAC" ) as combinedData ) as hsnTotal ) ) into jsondata from ( select "NOD", "DocumentType", "fromData", "toData", "TotalNo", "Cancellated", "NetIssued" from ( select 'Invoice for Outward Supply' as "NOD", 'S' as "DocumentType", MIN(s."Number") as "fromData", MAX(s."Number") as "toData", COUNT(distinct s."SaleId") as "TotalNo", SUM(case when s."DocumentStatus" = 2 then 1 else 0 end) as "Cancellated", (COUNT(distinct(s."SaleId")) - SUM(case when s."DocumentStatus" = 2 then 1 else 0 end) ) as "NetIssued" from "10083_10833"."Sales" s inner join "10083_10833"."SalesItems" si on s."SaleId" = si."SaleId" inner join "10083_10833"."Customer" c on s."CustomerId" = c."CustomerId" where s."Date" between fromdate and todate and s."DocumentStatus" in (1, 2) and si."TaxabilityCode" in (2, 3, 4, 5) and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9) union all select 'Credit Note' as "NOD", 'SR' as "DocumentType", MIN(sr."Number") as "fromData", MAX(sr."Number") as "toData", COUNT(distinct sr."SaleReturnId") as "TotalNo", SUM(case when sr."DocumentStatus" = 2 then 1 else 0 end) as "Cancellated", (COUNT(distinct(sr."SaleReturnId")) - SUM(case when sr."DocumentStatus" = 2 then 1 else 0 end) ) as "NetIssued" from "10083_10833"."SalesReturn" sr inner join "10083_10833"."SalesReturnItems" sri on sr."SaleReturnId" = sri."SaleReturnId" inner join "10083_10833"."Customer" c on sr."CustomerId" = c."CustomerId" where sr."Date" between fromdate and todate and sr."DocumentStatus" in (1, 2) and sri."TaxabilityCode" in (2, 3, 4, 5) and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9) union all select 'Debit Note' as "NOD", 'SDN' as "DocumentType", MIN(sdn."Number") as "fromData", MAX(sdn."Number") as "toData", COUNT(distinct sdn."SaleDebitNoteId") as "TotalNo", SUM(case when sdn."DocumentStatus" = 2 then 1 else 0 end) as "Cancellated", (COUNT(distinct(sdn."SaleDebitNoteId")) - SUM(case when sdn."DocumentStatus" = 2 then 1 else 0 end) ) as "NetIssued" from "10083_10833"."SalesDebitNote" sdn inner join "10083_10833"."SalesDebitNoteItems" sdni on sdn."SaleDebitNoteId" = sdni."SaleDebitNoteId" inner join "10083_10833"."Customer" c on sdn."CustomerId" = c."CustomerId" where sdn."Date" between fromdate and todate and sdn."DocumentStatus" in (1, 2) and sdni."TaxabilityCode" in (2, 3, 4, 5) and c."GSTCategoryCode" in (1, 2, 3, 4, 5, 6, 7, 8, 9) ) as combineData ) as docs; end; $$;


ALTER PROCEDURE "10083_10833".getgstr1summary(IN fromdate date, IN todate date, OUT jsondata jsonb) OWNER TO "10083";

--
-- TOC entry 2352 (class 1255 OID 186191)
-- Name: purchase_update_add(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".purchase_update_add(IN purchase_data jsonb, OUT purchase_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; flag char(1); temp_id integer; item_count integer; purchase_item_id integer; other_charges_count integer; purchase_item_wareHouse_count integer; supplier_data record; stock_group_id integer; temp_WareHouse_Id integer; tempBatchJson jsonb; tempWarehouseJson jsonb; updateAutoNumber boolean; begin purchase_id := (purchase_data->>'PurchaseId') ::integer; flag := (purchase_data->>'Flag'); if flag = 'U' then update "10083_10833"."Purchase" set "Number" = (purchase_data->>'Number'), "Date" = (purchase_data->>'Date')::date, "FinancialYear" = (purchase_data->>'FinancialYear')::integer, "TemplateId" = (purchase_data->>'TemplateId')::integer, "SupplierId" = (purchase_data->>'SupplierId')::integer, "DocumentName" = (purchase_data->>'DocumentName'), "SupplierInvoiceNo" = (purchase_data->>'SupplierInvoiceNo'), "SupplierInvoiceDate" = (purchase_data->>'SupplierInvoiceDate')::date, "ReverseCharge" =( purchase_data->>'ReverseCharge'), "TermAndConditionId" = (purchase_data->>'TermAndConditionId')::integer, "TermAndConditionText" =( purchase_data->>'TermAndConditionText'), "EcomGSTIN" = (purchase_data->>'EcomGSTIN'), "SalesPersonId" = (purchase_data ->> 'SalesPersonId')::integer, "CurrencyId" = (purchase_data ->> 'CurrencyId')::integer, "ExchangeRate" =(purchase_data ->> 'ExchangeRate')::float where "Purchase"."PurchaseId" = purchase_id; elseif flag = 'A' then insert into "10083_10833"."Purchase" ( "Number", "Date", "TemplateId", "FinancialYear", "SupplierId", "DocumentName", "SupplierInvoiceNo", "SupplierInvoiceDate", "TermAndConditionId", "TermAndConditionText", "EcomGSTIN", "ReverseCharge", "DocumentStatus", "SalesPersonId", "CurrencyId", "ExchangeRate" ) values( (purchase_data->>'Number'), (purchase_data->>'Date')::date, (purchase_data->>'TemplateId')::integer, (purchase_data->>'FinancialYear')::integer, (purchase_data->>'SupplierId')::integer, (purchase_data->>'DocumentName'), (purchase_data->>'SupplierInvoiceNo'), (purchase_data->>'SupplierInvoiceDate')::date, (purchase_data->>'TermAndConditionId')::integer, (purchase_data->>'TermAndConditionText'), (purchase_data->>'EcomGSTIN'), (purchase_data->>'ReverseCharge'), (coalesce((purchase_data->>'DocumentStatus')::integer, 1)::integer), (purchase_data ->> 'SalesPersonId')::integer, (purchase_data ->> 'CurrencyId')::integer, (purchase_data ->> 'ExchangeRate')::float ) returning "PurchaseId" into purchase_id; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchase_data ->> 'PurchaseEwayBillsDetails'); if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'PurchaseEwayBillsDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseEwayBillsDetails" sst where sst."PurchaseEwayBillsDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseEwayBillsDetails" set "GSTIN" = (tempJson->> 'GSTIN'), "TransporterName" = (tempJson->> 'TransporterName'), "TransportModeCode" = (tempJson->> 'TransportModeCode')::integer, "TransportModeName" = (tempJson->> 'TransportModeName'), "Distance" = (tempJson->> 'Distance'), "TransportDocumentNumber" = (tempJson->> 'TransportDocumentNumber'), "TransportDocumentDate" = (tempJson->> 'TransportDocumentDate')::date, "VehicleNumber" = (tempJson->> 'VehicleNumber'), "VehicleTypeCode" = (tempJson->> 'VehicleTypeCode'), "VehicleTypeName" = (tempJson->> 'VehicleTypeName'), "EwayBillNumber" = (tempJson->> 'EwayBillNumber'), "EwayBillDate" = (tempJson->> 'EwayBillDate')::date, "DispatchFrom" = (tempJson->> 'DispatchFrom'), "ShipTo" = (tempJson->> 'ShipTo') where "PurchaseEwayBillsDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseEwayBillsDetails" ( "PurchaseId", "GSTIN", "TransporterName", "TransportModeCode", "TransportModeName", "Distance", "TransportDocumentNumber", "TransportDocumentDate", "VehicleNumber", "VehicleTypeCode", "VehicleTypeName", "EwayBillNumber", "EwayBillDate", "DispatchFrom", "ShipTo" ) values ( (purchase_Id), (tempJson->> 'GSTIN'), (tempJson->> 'TransporterName'), (tempJson->> 'TransportModeCode')::integer, (tempJson->> 'TransportModeName'), (tempJson->> 'Distance'), (tempJson->> 'TransportDocumentNumber'), (tempJson->> 'TransportDocumentDate')::date, (tempJson->> 'VehicleNumber'), (tempJson->> 'VehicleTypeCode'), (tempJson->> 'VehicleTypeName'), (tempJson->> 'EwayBillNumber'), (tempJson->> 'EwayBillDate')::date, (tempJson->> 'DispatchFrom'), (tempJson->> 'ShipTo') ); end if; end if; flag := ''; tempJson := (purchase_data ->> 'PurchaseBillFrom'); if tempJson is not null then if flag <> 'D' and (tempJson ->> 'MapFromMaster')::boolean is true and tempJson ->> 'SupplierAddressId' is not null then select "Address" , "City" , "StateCode" , "StateName" , "Pincode" , "CountryCode" , "CountryName" from "10083_10833"."SupplierAddress" where "SupplierAddressId" = (tempJson ->> 'SupplierAddressId')::integer into supplier_data; tempJson := jsonb_set(tempJson, '{Address}', to_jsonb(coalesce(supplier_data."Address", ''))); tempJson := jsonb_set(tempJson, '{City}', to_jsonb(coalesce(supplier_data."City", ''))); tempJson := jsonb_set(tempJson, '{StateCode}', to_jsonb(coalesce(supplier_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{StateName}', to_jsonb(coalesce(supplier_data."StateName", ''))); tempJson := jsonb_set(tempJson, '{PinZipCode}', to_jsonb(coalesce(supplier_data."Pincode", ''))); tempJson := jsonb_set(tempJson, '{CountryCode}', to_jsonb(coalesce(supplier_data."CountryCode", ''))); tempJson := jsonb_set(tempJson, '{CountryName}', to_jsonb(coalesce(supplier_data."CountryName", ''))); tempJson := jsonb_set(tempJson, '{POSCode}', to_jsonb(coalesce(supplier_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{POSName}', to_jsonb(coalesce(supplier_data."StateName", ''))); end if; flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseBillFromId'); if flag = 'D' then delete from "10083_10833"."PurchaseBillFrom" sbt where sbt."PurchaseBillFromId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseBillFrom" set "MailingName" = (tempJson->> 'MailingName'), "Address" = (tempJson->> 'Address'), "City" = (tempJson->> 'City'), "StateCode" = (tempJson->> 'StateCode'), "StateName" = (tempJson->> 'StateName'), "PinZipCode" = (tempJson->> 'PinZipCode'), "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = (tempJson->> 'CountryName'), "POSCode" = (tempJson->> 'POSCode'), "POSName" = (tempJson->> 'POSName'), "GSTIN" = tempJson->> 'GSTIN' where "PurchaseBillFromId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseBillFrom" ( "PurchaseId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "POSCode", "POSName", "GSTIN" ) values ( (purchase_id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'POSCode'), (tempJson->> 'POSName'), (tempJson->> 'GSTIN') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchase_data ->> 'PurchaseShipTo'); if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'PurchaseShipToId'); if flag = 'D' then delete from "10083_10833"."PurchaseShipTo" sst where sst."PurchaseShipToId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseShipTo" set "MailingName" = (tempJson->> 'MailingName'), "Address" = (tempJson->> 'Address'), "City" = (tempJson->> 'City'), "StateCode" = (tempJson->> 'StateCode'), "StateName" = (tempJson->> 'StateName'), "PinZipCode" = (tempJson->> 'PinZipCode'), "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = (tempJson->> 'CountryName') where "PurchaseShipToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseShipTo" ( "PurchaseId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName" ) values ( (purchase_id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchase_data ->> 'PurchaseReceiptDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseReceiptDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseReceiptDetails" sdd where sdd."PurchaseReceiptDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseReceiptDetails" set "MailingName" = (tempJson ->> 'MailingName'), "Address" = (tempJson ->> 'Address'), "City" = (tempJson ->> 'City'), "StateCode" = (tempJson ->> 'StateCode'), "StateName" = (tempJson ->> 'StateName'), "PinZipCode" = (tempJson ->> 'PinZipCode'), "CountryCode" = (tempJson ->> 'CountryCode'), "CountryName" =(tempJson ->> 'CountryName'), "ReceiptDocNo" =(tempJson ->> 'ReceiptDocNo'), "ReceiptThrough" =(tempJson ->> 'ReceiptThrough'), "Destination" =(tempJson ->> 'Destination'), "CarrierNameAgent" =(tempJson ->> 'CarrierNameAgent'), "BillOfLandingLrRrNo" =(tempJson ->> 'BillOfLandingLrRrNo'), "Date" = (tempJson ->> 'Date')::date, "MotorVehicleNo" =(tempJson ->> 'MotorVehicleNo') where "PurchaseReceiptDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseReceiptDetails" ( "PurchaseId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "ReceiptDocNo", "ReceiptThrough", "Destination", "CarrierNameAgent", "BillOfLandingLrRrNo", "Date", "MotorVehicleNo" ) values ( purchase_id, (tempJson ->> 'MailingName'), (tempJson ->> 'Address'), (tempJson ->> 'City'), (tempJson ->> 'StateCode'), (tempJson ->> 'StateName'), (tempJson ->> 'PinZipCode'), (tempJson ->> 'CountryCode'), (tempJson ->> 'CountryName'), (tempJson ->> 'ReceiptDocNo'), (tempJson ->> 'ReceiptThrough'), (tempJson ->> 'Destination'), (tempJson ->> 'CarrierNameAgent'), (tempJson ->> 'BillOfLandingLrRrNo'), (tempJson ->> 'Date')::date, (tempJson ->> 'MotorVehicleNo') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchase_data ->> 'PurchaseImportDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseImportDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseImportDetails" sed where sed."PurchaseImportDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseImportDetails" set "ShippingBillNumber" =(tempJson ->> 'ShippingBillNumber'), "ShippingBillDate" = (tempJson ->> 'ShippingBillDate')::date, "PortCode" =(tempJson ->> 'PortCode'), "PortName" =(tempJson ->> 'PortName'), "CountryCode" =(tempJson ->> 'CountryCode'), "CountryName" =(tempJson ->> 'CountryName'), "RefundClaim" = (tempJson ->> 'RefundClaim')::boolean, "ImportDuty" = (tempJson ->> 'ExportDuty')::float, "DispatchThrough" =(tempJson ->> 'DispatchThrough'), "VesselFlightNo" =(tempJson ->> 'VesselFlightNo'), "DestinationPortCode" =(tempJson ->> 'DestinationPortCode'), "DestinationPortName" =(tempJson ->> 'DestinationPortName'), "Destination" =(tempJson ->> 'Destination'), "LUTNumber" =(tempJson ->> 'LUTNumber'), "PlaceOfReceiptByShipper" =(tempJson ->> 'PlaceOfReceiptByShipper'), "PortOfLoadingCode" = (tempJson ->> 'PortOfLoadingCode'), "PortOfLoadingName" = (tempJson ->> 'PortOfLoadingName'), "PortOfDischargeCode" = (tempJson ->> 'PortOfDischargeCode'), "PortOfDischargeName" = (tempJson ->> 'PortOfDischargeName') where "PurchaseImportDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseImportDetails" ( "PurchaseId", "ShippingBillNumber", "ShippingBillDate", "PortCode", "PortName", "CountryCode", "CountryName", "RefundClaim", "ImportDuty", "DispatchThrough", "VesselFlightNo", "DestinationPortCode", "DestinationPortName", "Destination", "LUTNumber", "PlaceOfReceiptByShipper", "PortOfLoadingCode", "PortOfLoadingName", "PortOfDischargeCode", "PortOfDischargeName" ) values ( purchase_id, ( tempJson ->> 'ShippingBillNumber'), (tempJson ->> 'ShippingBillDate')::date, ( tempJson ->> 'PortCode'), (tempJson ->> 'PortName'), (tempJson ->> 'CountryCode'), (tempJson ->> 'CountryName'), (tempJson ->> 'RefundClaim')::boolean, (tempJson ->> 'ImportDuty')::float, (tempJson ->> 'DispatchThrough'), (tempJson ->> 'VesselFlightNo'), (tempJson ->> 'DestinationPortCode'), (tempJson ->> 'DestinationPortName'), ( tempJson ->> 'Destination'), (tempJson ->> 'LUTNumber'), ( tempJson ->> 'PlaceOfReceiptByShipper'), (tempJson ->> 'PortOfLoadingCode'), (tempJson ->> 'PortOfLoadingName'), (tempJson ->> 'PortOfDischargeCode'), (tempJson ->> 'PortOfDischargeName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchase_data ->> 'PurchaseValueDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseValueDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseValueDetails" svd where svd."PurchaseValueDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseValueDetails" set "AssessableValue" =(tempJson ->> 'AssessableValue')::float, "IGSTValue" =(tempJson ->> 'IGSTValue')::float, "CGSTValue" =(tempJson ->> 'CGSTValue')::float, "SGSTValue" =(tempJson ->> 'SGSTValue')::float, "CessValue" =(tempJson ->> 'CessValue')::float, "StateCessValue" =(tempJson ->> 'StateCessValue')::float, "TotalInvoiceValue" =(tempJson ->> 'TotalInvoiceValue')::float, "RoundOffAmount" =(tempJson ->> 'RoundOffAmount')::float, "TotalInvValForeignCurrency" =(tempJson ->> 'TotalInvValForeignCurrency')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharge" =(tempJson ->> 'OtherCharge')::float, "OtherChargeTaxable" =(tempJson ->> 'OtherChargeTaxable')::float, "TCSRate" =(tempJson ->> 'TCSRate')::float, "InvoiceValueWithoutTCS" =(tempJson ->> 'InvoiceValueWithoutTCS')::float, "TCSAmount" =(tempJson ->> 'TCSAmount')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float where "PurchaseValueDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseValueDetails" ( "PurchaseId", "AssessableValue", "IGSTValue", "CGSTValue", "SGSTValue", "CessValue", "StateCessValue", "TotalInvoiceValue", "RoundOffAmount", "TotalInvValForeignCurrency", "Discount", "OtherCharge", "OtherChargeTaxable", "TCSRate", "InvoiceValueWithoutTCS", "TCSAmount", "SubTotal" ) values ( purchase_id, (tempJson ->> 'AssessableValue')::float, (tempJson ->> 'IGSTValue')::float, (tempJson ->> 'CGSTValue')::float, (tempJson ->> 'SGSTValue')::float, (tempJson ->> 'CessValue')::float, (tempJson ->> 'StateCessValue')::float, (tempJson ->> 'TotalInvoiceValue')::float, (tempJson ->> 'RoundOffAmount')::float, (tempJson ->> 'TotalInvValForeignCurrency')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharge')::float, (tempJson ->> 'OtherChargeTaxable')::float, (tempJson ->> 'TCSRate')::float, (tempJson ->> 'InvoiceValueWithoutTCS')::float, (tempJson ->> 'TCSAmount')::float, (tempJson ->> 'SubTotal')::float ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchase_data ->> 'PurchaseOtherDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseOtherDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseOtherDetails" sod where sod."PurchaseOtherDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseOtherDetails" set "ModeTermsOfPayment" =(tempJson ->> 'ModeTermsOfPayment'), "TermsOfDelivery" =(tempJson ->> 'TermsOfDelivery'), "TermAndCondition" =(tempJson ->> 'TermAndCondition') where "PurchaseOtherDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseOtherDetails" ( "PurchaseId", "ModeTermsOfPayment", "TermsOfDelivery", "TermAndCondition" ) values ( purchase_id, (tempJson ->> 'ModeTermsOfPayment'), (tempJson ->> 'TermsOfDelivery'), (tempJson ->> 'TermAndCondition') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; other_charges_count := jsonb_array_length((purchase_data ->> 'PurchaseOtherCharges')::jsonb); if other_charges_count > 0 then for i in 0.. other_charges_count-1 loop tempJson = (purchase_data ->> 'PurchaseOtherCharges')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseOtherChargeId')::integer; if flag = 'D' then delete from "10083_10833"."PurchaseOtherCharges" poc where soc."PurchaseOtherChargeId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseOtherCharges" set "OtherChargeId" =(tempJson ->> 'OtherChargeId')::integer, "GSTRateCode" =(tempJson ->> 'GSTRateCode')::float, "GSTRateName" =(tempJson ->> 'GSTRateName')::float, "Amount" =(tempJson ->> 'Amount')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "IGST" =(tempJson ->> 'IGST')::float, "HSN" =(tempJson ->> 'HSN'), "TaxableCode" =(tempJson ->>'TaxableCode')::integer, "TaxableName" =(tempJson ->>'TaxableName'), "AppropriateCode" =(tempJson ->>'AppropriateCode')::integer, "AppropriateName" =(tempJson ->>'AppropriateName'), "Name" =(tempJson ->>'Name') where "PurchaseOtherChargeId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseOtherCharges" ( "PurchaseId", "OtherChargeId", "GSTRateCode", "GSTRateName", "Amount", "CGST", "SGST", "IGST", "HSN", "TaxableCode", "TaxableName", "AppropriateCode", "AppropriateName", "Name") values( purchase_id, (tempJson ->> 'OtherChargeId')::integer, (tempJson ->> 'GSTRateCode')::float, (tempJson ->> 'GSTRateName')::float, (tempJson ->> 'Amount')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'HSN'), (tempJson ->> 'TaxableCode')::integer, (tempJson ->> 'TaxableName'), (tempJson ->> 'AppropriateCode')::integer, (tempJson ->> 'AppropriateName'), (tempJson ->>'Name')); end if; end if; end loop; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((purchase_data ->> 'PurchaseItems')::jsonb); if item_count > 0 then for i in 0.. item_count-1 loop tempJson = (purchase_data ->> 'PurchaseItems')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseItemsId'); if flag = 'D' then delete from "10083_10833"."PurchaseItems" si where si."PurchaseItemsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseItems" set "StockItemId" =(tempJson ->> 'StockItemId')::integer, "ItemName" =(tempJson ->> 'ItemName'), "ItemSerialNumber" =(tempJson ->> 'ItemSerialNumber')::integer, "ItemCode" =(tempJson ->> 'ItemCode')::integer, "ItemDescription" =(tempJson ->> 'ItemDescription'), "HSNSAC" =(tempJson ->> 'HSNSAC'), "BarCode" =(tempJson ->> 'BarCode'), "Quantity" =(tempJson ->> 'Quantity')::float, "FreeQuantity" =(tempJson ->> 'FreeQuantity')::float, "UnitPrice" =(tempJson ->> 'UnitPrice')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharges" =(tempJson ->> 'OtherCharges')::float, "TaxableValue" =(tempJson ->> 'TaxableValue')::float, "GstRate" =(tempJson ->> 'GstRate')::float, "CessRate" =(tempJson ->> 'CessRate')::float, "StateCessRateCode" =(tempJson ->> 'StateCessRateCode')::float, "StateCessRateName" =(tempJson ->> 'StateCessRateName')::float, "IGST" =(tempJson ->> 'IGST')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "Cess" =(tempJson ->> 'Cess')::float, "StateCess" =(tempJson ->> 'StateCess')::float, "CessNonAdvolRateCode" =(tempJson ->> 'CessNonAdvolRateCode')::float, "CessNonAdvolRateName" =(tempJson ->> 'CessNonAdvolRateName')::float, "CessNonAdvolUnit" =(tempJson ->> 'CessNonAdvolUnit')::float, "StateCessNonAdvolRateCode" =(tempJson ->> 'StateCessNonAdvolRateCode')::float, "StateCessNonAdvolRateName" =(tempJson ->> 'StateCessNonAdvolRateName')::float, "StateCessNonAdvolUnit" =(tempJson ->> 'StateCessNonAdvolUnit')::float, "CessNonAdvol" =(tempJson ->> 'CessNonAdvol')::float, "StateCessNonAdvol" =(tempJson ->> 'StateCessNonAdvol')::float, "TotalItemValue" =(tempJson ->> 'TotalItemValue')::float, "MarksContainerNo" =(tempJson ->> 'MarksContainerNo'), "NumberOfPackages" =(tempJson ->> 'NumberOfPackages')::integer, "UOMCode" = (tempJson ->> 'UOMCode'), "DiscountRate" =(tempJson ->> 'DiscountRate')::float where "PurchaseItemsId" = temp_id; purchase_item_id := temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseItems" ( "PurchaseId", "StockItemId", "ItemName", "ItemSerialNumber", "ItemCode", "ItemDescription", "HSNSAC", "BarCode", "Quantity", "FreeQuantity", "UnitPrice", "SubTotal", "Discount", "OtherCharges", "TaxableValue", "GstRate", "CessRate", "StateCessRateCode", "StateCessRateName", "IGST", "CGST", "SGST", "Cess", "StateCess", "CessNonAdvolRateCode", "CessNonAdvolRateName", "CessNonAdvolUnit", "StateCessNonAdvolRateCode", "StateCessNonAdvolRateName", "StateCessNonAdvolUnit", "CessNonAdvol", "StateCessNonAdvol", "TotalItemValue", "MarksContainerNo", "NumberOfPackages", "UOMCode", "DiscountRate" ) values ( purchase_id, (tempJson ->> 'StockItemId')::integer, (tempJson ->> 'ItemName'), (tempJson ->> 'ItemSerialNumber')::integer, (tempJson ->> 'ItemCode')::integer, (tempJson ->> 'ItemDescription'), (tempJson ->> 'HSNSAC'), (tempJson ->> 'BarCode'), (tempJson ->> 'Quantity')::float, (tempJson ->> 'FreeQuantity')::float, (tempJson ->> 'UnitPrice')::float, (tempJson ->> 'SubTotal')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharges')::float, (tempJson ->> 'TaxableValue')::float, (tempJson ->> 'GstRate')::float, (tempJson ->> 'CessRate')::float, (tempJson ->> 'StateCessRateCode')::float, (tempJson ->> 'StateCessRateName')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'Cess')::float, (tempJson ->> 'StateCess')::float, (tempJson ->> 'CessNonAdvolRateCode')::float, (tempJson ->> 'CessNonAdvolRateName')::float, (tempJson ->> 'CessNonAdvolUnit')::float, (tempJson ->> 'StateCessNonAdvolRateCode')::float, (tempJson ->> 'StateCessNonAdvolRateName')::float, (tempJson ->> 'StateCessNonAdvolUnit')::float, (tempJson ->> 'CessNonAdvol')::float, (tempJson ->> 'StateCessNonAdvol')::float, (tempJson ->> 'TotalItemValue')::float, (tempJson ->> 'MarksContainerNo'), (tempJson ->> 'NumberOfPackages')::integer, (tempJson ->> 'UOMCode'), (tempJson ->> 'DiscountRate')::float ) returning "PurchaseItemsId" into purchase_item_id; end if; end if; if flag <> 'D' then flag := ''; temp_id := 0; tempBatchJson := (tempJson ->> 'PurchaseBatchDetails')::jsonb; flag := (tempBatchJson->> 'Flag'); temp_id := (tempBatchJson ->> 'PurchaseBatchDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseBatchDetails" pbd where pbd."PurchaseBatchDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseBatchDetails" ( "PurchaseItemsId", "Name", "SerialNumber", "ExpiryDate", "ManufacturingDate" ) values ( purchase_item_id, (tempBatchJson ->> 'Name'), (tempBatchJson ->> 'SerialNumber')::integer, (tempBatchJson ->> 'ExpiryDate')::date, (tempBatchJson ->> 'ManufacturingDate')::date ); elseif flag = 'U' then update "10083_10833"."PurchaseBatchDetails" set "PurchaseItemsId" =(tempBatchJson ->> 'PurchaseItemsId')::integer, "Name" =(tempBatchJson ->> 'Name'), "SerialNumber" =(tempBatchJson ->> 'SerialNumber')::integer, "ExpiryDate" =(tempBatchJson ->> 'ExpiryDate')::date, "ManufacturingDate" =(tempBatchJson ->> 'ManufacturingDate')::date where "PurchaseBatchDetailsId" = temp_id; end if; end if; flag := ''; flag :=(tempJson ->> 'Flag'); if flag <> 'D' then flag := ''; temp_id := 0; purchase_item_wareHouse_count := jsonb_array_length((tempJson ->> 'PurchaseItemWareHouse')::jsonb); if purchase_item_wareHouse_count > 0 then for j in 0.. purchase_item_wareHouse_count-1 loop tempWarehouseJson := (tempJson ->> 'PurchaseItemWareHouse')::jsonb->j; if tempWarehouseJson is not null then flag := (tempWarehouseJson ->> 'Flag'); temp_id = (tempWarehouseJson ->> 'PurchaseItemWareHouseId'); select "StockGroupId" from "10083_10833"."StockItem" where "StockItemId" = ( tempJson->>'StockItemId' )::INTEGER into stock_group_id ; if flag = 'D' then delete from "10083_10833"."PurchaseItemWareHouse" siwh where siwh."PurchaseItemWareHouseId" = temp_id; insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out") values ( (tempJson->>'StockItemId')::integer, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, (tempWarehouseJson ->> 'TempQuantity')::float, 0) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId')::integer and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "In" = (coalesce ("10083_10833"."StockItemBalance"."In") - (tempWarehouseJson ->> 'TempQuantity')::float)::float; elseif flag = 'A' then insert into "10083_10833"."PurchaseItemWareHouse" ( "PurchaseItemsId", "WareHouseId", "Quantity", "Rate", "Total" ) values (purchase_item_id, (tempWarehouseJson ->> 'WareHouseId')::integer, coalesce((tempWarehouseJson ->> 'Quantity')::float, 0), (tempWarehouseJson ->> 'Rate')::float, (tempWarehouseJson ->> 'Total')::float ); insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out") values ( (tempJson->>'StockItemId')::integer, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, (tempWarehouseJson ->> 'TempQuantity')::float, 0) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId')::integer and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "In" = (coalesce ("10083_10833"."StockItemBalance"."In") + (tempWarehouseJson ->> 'TempQuantity')::float)::float; elseif flag = 'U' then update "10083_10833"."PurchaseItemWareHouse" set "PurchaseItemsId" =(tempWarehouseJson ->> 'PurchaseItemsId')::integer, "WareHouseId" =(tempWarehouseJson ->> 'WareHouseId')::integer, "Quantity" = coalesce((tempWarehouseJson ->> 'Quantity')::float, 0), "Rate" =(tempWarehouseJson ->> 'Rate')::float, "Total" =(tempWarehouseJson ->> 'Total')::float where "PurchaseItemWareHouseId" = temp_id; temp_WareHouse_Id := (tempWarehouseJson->>'TempWareHouseId') ::integer; if (tempWarehouseJson ->> 'WareHouseId')::integer <> temp_WareHouse_Id then insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out") values ( (tempJson->>'StockItemId')::integer, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, (tempWarehouseJson ->> 'TempQuantity')::float, 0) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId')::integer and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "In" = (coalesce ("10083_10833"."StockItemBalance"."In") + (tempWarehouseJson ->> 'TempQuantity')::float)::float; update "10083_10833"."StockItemBalance" set "In" =(coalesce("10083_10833"."StockItemBalance"."In" , 0) - coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT where "StockItemId" = ( tempJson->>'StockItemId' ) ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'TempWareHouseId')::integer; else insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out") values ( (tempJson->>'StockItemId')::integer, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer , (tempWarehouseJson ->> 'TempQuantity')::float, 0) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId')::integer and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "In" = (coalesce ("10083_10833"."StockItemBalance"."In") + (tempWarehouseJson ->> 'TempQuantity')::float)::float; end if; end if; end if; end loop; end if; end if; end loop; end if; updateAutoNumber := (purchase_data->>'UpdateAutoNumber') ::boolean ; if (updateAutoNumber = true ) then update "10083_10833"."AutoNumbering" set "StartingNumber" = "StartingNumber" + 1 where "TemplateId" = (purchase_data->>'TemplateId')::integer; end if; if exists ( select "Date" from "10083_10833"."LastDocumentDate") then update "10083_10833"."LastDocumentDate" set "Date" = (purchase_data->>'Date')::date, "UpdatedOn" = (CURRENT_TIMESTAMP)::date where "Date" < (purchase_data->>'Date')::date; else insert into "10083_10833"."LastDocumentDate" ( "Date", "UpdatedOn") values( (purchase_data ->> 'Date')::date , (CURRENT_TIMESTAMP)::date ); end if; end; $$;


ALTER PROCEDURE "10083_10833".purchase_update_add(IN purchase_data jsonb, OUT purchase_id integer) OWNER TO "10083";

--
-- TOC entry 2354 (class 1255 OID 186214)
-- Name: purchasecreditnote_update_add(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".purchasecreditnote_update_add(IN purchasecreditnote_data jsonb, OUT purchasecreditnote_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; flag char(1); temp_id integer; item_count integer; purchaseCreditNote_item_id integer; other_charges_count integer; purchase_creditNote_item_wareHouse_count integer; supplier_data record; stock_group_id integer; temp_WareHouse_Id integer; tempWarehouseJson jsonb; tempBatchJson jsonb; updateAutoNumber boolean; begin purchaseCreditNote_Id := (purchaseCreditNote_data->>'PurchaseCreditNoteId')::integer; flag := (purchaseCreditNote_data->>'Flag'); if flag = 'U' then update "10083_10833"."PurchaseCreditNote" set "Number" = (purchaseCreditNote_data->>'Number'), "Date" = (purchaseCreditNote_data->>'Date')::date, "FinancialYear" = (purchaseCreditNote_data->>'FinancialYear')::integer, "TemplateId" = (purchaseCreditNote_data->>'TemplateId')::integer, "DocumentName" = purchaseCreditNote_data->>'DocumentName', "OriginalInvoiceNo" = (purchaseCreditNote_data->>'OriginalInvoiceNo'), "OriginalInvoiceDate" = (purchaseCreditNote_data->>'OriginalInvoiceDate')::date, "TermAndConditionId" = (purchaseCreditNote_data->>'TermAndConditionId')::integer, "SupplierId" = (purchaseCreditNote_data->>'SupplierId')::integer, "TermAndConditionText" = purchaseCreditNote_data->>'TermAndConditionText', "EcomGSTIN" = (purchaseCreditNote_data->>'EcomGSTIN'), "CurrencyId" = (purchaseCreditNote_data ->> 'CurrencyId')::integer, "SalesPersonId" = (purchaseCreditNote_data ->> 'SalesPersonId')::integer, "ExchangeRate" =(purchaseCreditNote_data ->> 'ExchangeRate')::float where "PurchaseCreditNote"."PurchaseCreditNoteId" = purchaseCreditNote_Id; elseif flag = 'A' then insert into "10083_10833"."PurchaseCreditNote" ( "Number", "Date", "FinancialYear", "TemplateId", "SupplierId", "DocumentName", "OriginalInvoiceNo", "OriginalInvoiceDate", "TermAndConditionId", "TermAndConditionText", "EcomGSTIN", "DocumentStatus", "CurrencyId", "SalesPersonId", "ExchangeRate" ) values( (purchaseCreditNote_data->>'Number'), (purchaseCreditNote_data->>'Date')::date, (purchaseCreditNote_data->>'FinancialYear')::integer, (purchaseCreditNote_data->>'TemplateId')::integer, (purchaseCreditNote_data->>'SupplierId')::integer, purchaseCreditNote_data->>'DocumentName', (purchaseCreditNote_data->>'OriginalInvoiceNo'), (purchaseCreditNote_data->>'OriginalInvoiceDate')::date, (purchaseCreditNote_data->>'TermAndConditionId')::integer, purchaseCreditNote_data->>'TermAndConditionText', (purchaseCreditNote_data->>'EcomGSTIN'), (coalesce((purchaseCreditNote_data->>'DocumentStatus')::integer, 1)::integer), (purchaseCreditNote_data ->> 'CurrencyId')::integer, (purchaseCreditNote_data ->> 'SalesPersonId')::integer, (purchaseCreditNote_data ->> 'ExchangeRate')::float ) returning "PurchaseCreditNoteId" into purchaseCreditNote_Id; end if; flag := ''; tempJson := (purchaseCreditNote_data ->> 'PurchaseCreditNoteBillFrom'); if tempJson is not null then if flag <> 'D' and (tempJson ->> 'MapFromMaster')::boolean is true and tempJson ->> 'SupplierAddressId' is not null then select "Address", "City", "StateName", "StateCode", "Pincode", "CountryCode", "CountryName" from "10083_10833"."SupplierAddress" where "SupplierAddressId" = (tempJson ->> 'SupplierAddressId')::integer into supplier_data; tempJson := jsonb_set(tempJson, '{Address}', to_jsonb(coalesce(supplier_data."Address", ''))); tempJson := jsonb_set(tempJson, '{City}', to_jsonb(coalesce(supplier_data."City", ''))); tempJson := jsonb_set(tempJson, '{StateCode}', to_jsonb(coalesce(supplier_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{StateName}', to_jsonb(coalesce(supplier_data."StateName", ''))); tempJson := jsonb_set(tempJson, '{PinZipCode}', to_jsonb(coalesce(supplier_data."Pincode", ''))); tempJson := jsonb_set(tempJson, '{CountryCode}', to_jsonb(coalesce(supplier_data."CountryCode", ''))); tempJson := jsonb_set(tempJson, '{CountryName}', to_jsonb(coalesce(supplier_data."CountryName", ''))); tempJson := jsonb_set(tempJson, '{POSCode}', to_jsonb(coalesce(supplier_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{POSName}', to_jsonb(coalesce(supplier_data."StateName", ''))); end if; flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseCreditNoteBillFromId'); if flag = 'D' then delete from "10083_10833"."PurchaseCreditNoteBillFrom" sbt where sbt."PurchaseCreditNoteBillFromId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseCreditNoteBillFrom" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName', "POSCode" = (tempJson->> 'POSCode'), "POSName" = tempJson->> 'POSName', "GSTIN" = tempJson->> 'GSTIN' where "PurchaseCreditNoteBillFromId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseCreditNoteBillFrom" ( "PurchaseCreditNoteId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "POSCode", "POSName", "GSTIN" ) values ( (purchaseCreditNote_Id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'POSCode'), (tempJson->> 'POSName'), (tempJson->> 'GSTIN') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseCreditNote_data ->> 'PurchaseCreditNoteShipTo'); if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'PurchaseCreditNoteShipToId'); if flag = 'D' then delete from "10083_10833"."PurchaseCreditNoteShipTo" sst where sst."PurchaseCreditNoteShipToId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseCreditNoteShipTo" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName' where "PurchaseCreditNoteShipToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseCreditNoteShipTo" ( "PurchaseCreditNoteId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName" ) values ( (purchaseCreditNote_Id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseCreditNote_data ->> 'PurchaseCreditNoteDispatchFrom'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseCreditNoteDispatchFromId'); if flag = 'D' then delete from "10083_10833"."PurchaseCreditNoteDispatchFrom" sdd where sdd."PurchaseCreditNoteDispatchFromId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseCreditNoteDispatchFrom" set "MailingName" = tempJson ->> 'MailingName', "Address" = tempJson ->> 'Address', "City" = tempJson ->> 'City', "StateCode" = (tempJson ->> 'StateCode'), "StateName" = tempJson ->> 'StateName', "PinZipCode" = tempJson ->> 'PinZipCode', "CountryCode" = tempJson ->> 'CountryCode', "CountryName" = tempJson ->> 'CountryName', "DispatchDocNo" = tempJson ->> 'DispatchDocNo', "DispatchThrough" = tempJson ->> 'DispatchThrough', "Destination" = tempJson ->> 'Destination', "CarrierNameAgent" = tempJson ->> 'CarrierNameAgent', "BillOfLandingLrRrNo" = tempJson ->> 'BillOfLandingLrRrNo', "Date" = (tempJson ->> 'Date')::date, "MotorVehicleNo" = tempJson ->> 'MotorVehicleNo' where "PurchaseCreditNoteDispatchFromId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseCreditNoteDispatchFrom" ( "PurchaseCreditNoteId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "DispatchDocNo", "DispatchThrough", "Destination", "CarrierNameAgent", "BillOfLandingLrRrNo", "Date", "MotorVehicleNo") values ( purchaseCreditNote_Id, tempJson ->> 'MailingName', tempJson ->> 'Address', tempJson ->> 'City', (tempJson ->> 'StateCode'), tempJson ->> 'StateName', tempJson ->> 'PinZipCode', tempJson ->> 'CountryCode', tempJson ->> 'CountryName', tempJson ->> 'DispatchDocNo', tempJson ->> 'DispatchThrough', tempJson ->> 'Destination', tempJson ->> 'CarrierNameAgent', tempJson ->> 'BillOfLandingLrRrNo', (tempJson ->> 'Date')::date, tempJson ->> 'MotorVehicleNo' ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseCreditNote_data ->> 'PurchaseCreditNoteExportDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseCreditNoteExportDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseCreditNoteExportDetails" sed where sed."PurchaseCreditNoteExportDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseCreditNoteExportDetails" set "ShippingBillNumber" = tempJson ->> 'ShippingBillNumber', "ShippingBillDate" = (tempJson ->> 'ShippingBillDate')::date, "PortCode" = tempJson ->> 'PortCode', "PortName" = tempJson ->> 'PortName', "CountryCode" = tempJson ->> 'CountryCode', "CountryName" = tempJson ->> 'CountryName', "RefundClaim" = (tempJson ->> 'RefundClaim')::boolean, "ExportDuty" = (tempJson ->> 'ExportDuty')::float, "DispatchThrough" = tempJson ->> 'DispatchThrough', "VesselFlightNo" = tempJson ->> 'VesselFlightNo', "DestinationPortCode" = tempJson ->> 'DestinationPortCode', "DestinationPortName" = tempJson ->> 'DestinationPortName', "Destination" = tempJson ->> 'Destination', "LUTNumber" = tempJson ->> 'LUTNumber', "PlaceOfReceiptByShipper" = tempJson ->> 'PlaceOfReceiptByShipper', "PortOfLoadingCode" = tempJson ->> 'PortOfLoadingCode', "PortOfLoadingName" = tempJson ->> 'PortOfLoadingName', "PortOfDischargeCode" = tempJson ->> 'PortOfDischargeCode', "PortOfDischargeName" = tempJson ->> 'PortOfDischargeName' where "PurchaseCreditNoteExportDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseCreditNoteExportDetails" ( "PurchaseCreditNoteId", "ShippingBillNumber", "ShippingBillDate", "PortCode", "PortName", "CountryCode", "CountryName", "RefundClaim", "ExportDuty", "DispatchThrough", "VesselFlightNo", "DestinationPortCode", "DestinationPortName", "Destination", "LUTNumber", "PlaceOfReceiptByShipper", "PortOfLoadingCode", "PortOfLoadingName", "PortOfDischargeCode", "PortOfDischargeName" ) values ( purchaseCreditNote_Id, tempJson ->> 'ShippingBillNumber', (tempJson ->> 'ShippingBillDate')::date, tempJson ->> 'PortCode', tempJson ->> 'PortName', tempJson ->> 'CountryCode', tempJson ->> 'CountryName', (tempJson ->> 'RefundClaim')::boolean, (tempJson ->> 'ExportDuty')::float, tempJson ->> 'DispatchThrough', tempJson ->> 'VesselFlightNo', (tempJson ->> 'DestinationPortCode'), (tempJson ->> 'DestinationPortName'), (tempJson ->> 'Destination'), (tempJson ->> 'LUTNumber'), (tempJson ->> 'PlaceOfReceiptByShipper'), (tempJson ->> 'PortOfLoadingCode'), (tempJson ->> 'PortOfLoadingName'), (tempJson ->> 'PortOfDischargeCode'), (tempJson ->> 'PortOfDischargeName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseCreditNote_data ->> 'PurchaseCreditNoteValueDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseCreditNoteValueDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseCreditNoteValueDetails" svd where svd."PurchaseCreditNoteValueDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseCreditNoteValueDetails" set "AssessableValue" =(tempJson ->> 'AssessableValue')::float, "IGSTValue" =(tempJson ->> 'IGSTValue')::float, "CGSTValue" =(tempJson ->> 'CGSTValue')::float, "SGSTValue" =(tempJson ->> 'SGSTValue')::float, "CessValue" =(tempJson ->> 'CessValue')::float, "StateCessValue" =(tempJson ->> 'StateCessValue')::float, "TotalInvoiceValue" =(tempJson ->> 'TotalInvoiceValue')::float, "RoundOffAmount" =(tempJson ->> 'RoundOffAmount')::float, "TotalInvValForeignCurrency" =(tempJson ->> 'TotalInvValForeignCurrency')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharge" =(tempJson ->> 'OtherCharge')::float, "OtherChargeTaxable" =(tempJson ->> 'OtherChargeTaxable')::float, "TCSRate" =(tempJson ->> 'TCSRate')::float, "InvoiceValueWithoutTCS" =(tempJson ->> 'InvoiceValueWithoutTCS')::float, "TCSAmount" =(tempJson ->> 'TCSAmount')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float where "PurchaseCreditNoteValueDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseCreditNoteValueDetails" ( "PurchaseCreditNoteId", "AssessableValue", "IGSTValue", "CGSTValue", "SGSTValue", "CessValue", "StateCessValue", "TotalInvoiceValue", "RoundOffAmount", "TotalInvValForeignCurrency", "Discount", "OtherCharge", "OtherChargeTaxable", "TCSRate", "InvoiceValueWithoutTCS", "TCSAmount", "SubTotal" ) values ( purchaseCreditNote_Id, (tempJson ->> 'AssessableValue')::float, (tempJson ->> 'IGSTValue')::float, (tempJson ->> 'CGSTValue')::float, (tempJson ->> 'SGSTValue')::float, (tempJson ->> 'CessValue')::float, (tempJson ->> 'StateCessValue')::float, (tempJson ->> 'TotalInvoiceValue')::float, (tempJson ->> 'RoundOffAmount')::float, (tempJson ->> 'TotalInvValForeignCurrency')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharge')::float, (tempJson ->> 'OtherChargeTaxable')::float, (tempJson ->> 'TCSRate')::float, (tempJson ->> 'InvoiceValueWithoutTCS')::float, (tempJson ->> 'TCSAmount')::float, (tempJson ->> 'SubTotal')::float ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseCreditNote_data ->> 'PurchaseCreditNoteOtherDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseCreditNoteOtherDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseCreditNoteOtherDetails" sod where sod."PurchaseCreditNoteOtherDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseCreditNoteOtherDetails" set "ModeTermsOfPayment" =(tempJson ->> 'ModeTermsOfPayment'), "TermsOfDelivery" =(tempJson ->> 'TermsOfDelivery'), "TermAndCondition" =(tempJson ->> 'TermAndCondition') where "PurchaseCreditNoteOtherDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseCreditNoteOtherDetails" ( "PurchaseCreditNoteId", "ModeTermsOfPayment", "TermsOfDelivery", "TermAndCondition" ) values ( purchaseCreditNote_Id, (tempJson ->> 'ModeTermsOfPayment'), (tempJson ->> 'TermsOfDelivery'), (tempJson ->> 'TermAndCondition') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseCreditNote_data ->> 'PurchaseCreditNoteEwayBillsDetails'); if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'PurchaseCreditNoteEwayBillsDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseCreditNoteEwayBillsDetails" sst where sst."PurchaseCreditNoteEwayBillsDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseCreditNoteEwayBillsDetails" set "GSTIN" = tempJson->> 'GSTIN', "TransporterName" = tempJson->> 'TransporterName', "TransportModeCode" = (tempJson->> 'TransportModeCode')::integer, "TransportModeName" = (tempJson->> 'TransportModeName'), "Distance" = tempJson->> 'Distance', "TransportDocumentNumber" = tempJson->> 'TransportDocumentNumber', "TransportDocumentDate" = (tempJson->> 'TransportDocumentDate')::date, "VehicleNumber" = tempJson->> 'VehicleNumber', "VehicleTypeCode" = tempJson->> 'VehicleTypeCode', "VehicleTypeName" = (tempJson->> 'VehicleTypeName'), "EwayBillNumber" = tempJson->> 'EwayBillNumber', "EwayBillDate" = (tempJson->> 'EwayBillDate')::date, "DispatchFrom" = (tempJson->> 'DispatchFrom'), "ShipTo" = tempJson->> 'ShipTo' where "PurchaseCreditNoteEwayBillsDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseCreditNoteEwayBillsDetails" ( "PurchaseCreditNoteId", "GSTIN", "TransporterName", "TransportModeCode", "TransportModeName", "Distance", "TransportDocumentNumber", "TransportDocumentDate", "VehicleNumber", "VehicleTypeCode", "VehicleTypeName", "EwayBillNumber", "EwayBillDate", "DispatchFrom", "ShipTo" ) values ( (purchaseCreditNote_Id), (tempJson->> 'GSTIN'), (tempJson->> 'TransporterName'), (tempJson->> 'TransportModeCode')::integer, (tempJson->> 'TransportModeName'), (tempJson->> 'Distance'), (tempJson->> 'TransportDocumentNumber'), (tempJson->> 'TransportDocumentDate')::date, (tempJson->> 'VehicleNumber'), (tempJson->> 'VehicleTypeCode'), (tempJson->> 'VehicleTypeName'), (tempJson->> 'EwayBillNumber'), (tempJson->> 'EwayBillDate')::date, (tempJson->> 'DispatchFrom'), (tempJson->> 'ShipTo') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; other_charges_count := jsonb_array_length((purchaseCreditNote_data ->> 'PurchaseCreditNoteOtherCharges')::jsonb); if other_charges_count > 0 then for i in 0.. other_charges_count-1 loop tempJson = (purchaseCreditNote_data ->> 'PurchaseCreditNoteOtherCharges')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseCreditNoteOtherChargeId')::integer; if flag = 'D' then delete from "10083_10833"."PurchaseCreditNoteOtherCharges" proc where proc."PurchaseCreditNoteOtherChargeId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseCreditNoteOtherCharges" set "OtherChargeId" =(tempJson ->> 'OtherChargeId')::integer, "GSTRateCode" =(tempJson ->> 'GSTRateCode')::float, "GSTRateName" =(tempJson ->> 'GSTRateName')::float, "Amount" =(tempJson ->> 'Amount')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "IGST" =(tempJson ->> 'IGST')::float, "HSN" =(tempJson ->> 'HSN'), "TaxableCode" =(tempJson ->> 'TaxableCode')::integer, "TaxableName" =(tempJson ->> 'TaxableName'), "AppropriateCode" =(tempJson ->>'AppropriateCode')::integer, "AppropriateName" =(tempJson ->>'AppropriateName'), "Name" =(tempJson ->>'Name') where "PurchaseCreditNoteOtherChargeId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseCreditNoteOtherCharges" ( "PurchaseCreditNoteId", "OtherChargeId", "GSTRateCode", "GSTRateName", "Amount", "CGST", "SGST", "IGST", "HSN", "TaxableCode", "TaxableName", "AppropriateCode", "AppropriateName", "Name") values( purchaseCreditNote_Id, (tempJson ->> 'OtherChargeId')::integer, (tempJson ->> 'GSTRateCode')::float, (tempJson ->> 'GSTRateName')::float, (tempJson ->> 'Amount')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'HSN'), (tempJson ->> 'TaxableCode')::integer, (tempJson ->> 'TaxableName'), (tempJson ->> 'AppropriateCode')::integer, (tempJson ->> 'AppropriateName'), (tempJson ->>'Name')); end if; end if; end loop; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((purchaseCreditNote_data ->> 'PurchaseCreditNoteItems')::jsonb); if item_count > 0 then for i in 0.. item_count-1 loop tempJson = (purchaseCreditNote_data ->> 'PurchaseCreditNoteItems')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseCreditNoteItemsId'); if flag = 'D' then delete from "10083_10833"."PurchaseCreditNoteItems" si where si."PurchaseCreditNoteItemsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseCreditNoteItems" set "StockItemId" =(tempJson ->> 'StockItemId')::integer, "ItemName" =(tempJson ->> 'ItemName'), "ItemSerialNumber" =(tempJson ->> 'ItemSerialNumber')::integer, "ItemCode" =(tempJson ->> 'ItemCode')::integer, "ItemDescription" =(tempJson ->> 'ItemDescription'), "HSNSAC" =(tempJson ->> 'HSNSAC'), "BarCode" =(tempJson ->> 'BarCode'), "Quantity" =(tempJson ->> 'Quantity')::float, "FreeQuantity" =(tempJson ->> 'FreeQuantity')::float, "UnitPrice" =(tempJson ->> 'UnitPrice')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharges" =(tempJson ->> 'OtherCharges')::float, "TaxableValue" =(tempJson ->> 'TaxableValue')::float, "GstRate" =(tempJson ->> 'GstRate')::float, "CessRate" =(tempJson ->> 'CessRate')::float, "StateCessRateCode" =(tempJson ->> 'StateCessRateCode')::float, "StateCessRateName" =(tempJson ->> 'StateCessRateName')::float, "IGST" =(tempJson ->> 'IGST')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "Cess" =(tempJson ->> 'Cess')::float, "StateCess" =(tempJson ->> 'StateCess')::float, "CessNonAdvolRateCode" =(tempJson ->> 'CessNonAdvolRateCode')::float, "CessNonAdvolRateName" =(tempJson ->> 'CessNonAdvolRateName')::float, "CessNonAdvolUnit" =(tempJson ->> 'CessNonAdvolUnit')::float, "StateCessNonAdvolRateCode" =(tempJson ->> 'StateCessNonAdvolRateCode')::float, "StateCessNonAdvolRateName" =(tempJson ->> 'StateCessNonAdvolRateName')::float, "StateCessNonAdvolUnit" =(tempJson ->> 'StateCessNonAdvolUnit')::float, "CessNonAdvol" =(tempJson ->> 'CessNonAdvol')::float, "StateCessNonAdvol" =(tempJson ->> 'StateCessNonAdvol')::float, "TotalItemValue" =(tempJson ->> 'TotalItemValue')::float, "MarksContainerNo" =(tempJson ->> 'MarksContainerNo'), "NumberOfPackages" =(tempJson ->> 'NumberOfPackages')::float, "UOMCode" = (tempJson ->> 'UOMCode'), "DiscountRate" =(tempJson ->> 'DiscountRate')::float where "PurchaseCreditNoteItemsId" = temp_id; purchaseCreditNote_item_id := temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseCreditNoteItems" ( "PurchaseCreditNoteId", "StockItemId", "ItemName", "ItemSerialNumber", "ItemCode", "ItemDescription", "HSNSAC", "BarCode", "Quantity", "FreeQuantity", "UnitPrice", "SubTotal", "Discount", "OtherCharges", "TaxableValue", "GstRate", "CessRate", "StateCessRateCode", "StateCessRateName", "IGST", "CGST", "SGST", "Cess", "StateCess", "CessNonAdvolRateCode", "CessNonAdvolRateName", "CessNonAdvolUnit", "StateCessNonAdvolRateCode", "StateCessNonAdvolRateName", "StateCessNonAdvolUnit", "CessNonAdvol", "StateCessNonAdvol", "TotalItemValue", "MarksContainerNo", "NumberOfPackages", "UOMCode", "DiscountRate" ) values ( purchaseCreditNote_Id, (tempJson ->> 'StockItemId')::integer, (tempJson ->> 'ItemName'), (tempJson ->> 'ItemSerialNumber')::integer, (tempJson ->> 'ItemCode')::integer, (tempJson ->> 'ItemDescription'), (tempJson ->> 'HSNSAC'), (tempJson ->> 'BarCode'), (tempJson ->> 'Quantity')::float, (tempJson ->> 'FreeQuantity')::float, (tempJson ->> 'UnitPrice')::float, (tempJson ->> 'SubTotal')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharges')::float, (tempJson ->> 'TaxableValue')::float, (tempJson ->> 'GstRate')::float, (tempJson ->> 'CessRate')::float, (tempJson ->> 'StateCessRateCode')::float, (tempJson ->> 'StateCessRateName')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'Cess')::float, (tempJson ->> 'StateCess')::float, (tempJson ->> 'CessNonAdvolRateCode')::float, (tempJson ->> 'CessNonAdvolRateName')::float, (tempJson ->> 'CessNonAdvolUnit')::float, (tempJson ->> 'StateCessNonAdvolRateCode')::float, (tempJson ->> 'StateCessNonAdvolRateName')::float, (tempJson ->> 'StateCessNonAdvolUnit')::float, (tempJson ->> 'CessNonAdvol')::float, (tempJson ->> 'StateCessNonAdvol')::float, (tempJson ->> 'TotalItemValue')::float, (tempJson ->> 'MarksContainerNo'), (tempJson ->> 'NumberOfPackages')::float, (tempJson ->> 'UOMCode'), (tempJson ->> 'DiscountRate')::float ) returning "PurchaseCreditNoteItemsId" into purchaseCreditNote_item_id; end if; end if; if flag <> 'D' then flag := ''; temp_id := 0; tempBatchJson := (tempJson ->> 'PCNBatchDetails')::jsonb; flag := (tempBatchJson->> 'Flag'); temp_id := (tempBatchJson ->> 'PCNBatchId'); if flag = 'D' then delete from "10083_10833"."PCNBatchDetails" prb where prb."PCNBatchId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PCNBatchDetails" ( "PCNItemId", "Name", "SerialNumber", "ExpiryDate", "ManufacturingDate" ) values ( purchaseCreditNote_item_id, (tempBatchJson ->> 'Name'), (tempBatchJson ->> 'SerialNumber')::integer, (tempBatchJson ->> 'ExpiryDate')::date, (tempBatchJson ->> 'ManufacturingDate')::date ); elseif flag = 'U' then update "10083_10833"."PCNBatchDetails" set "PCNItemId" =(tempBatchJson ->> 'PCNItemId')::integer, "Name" =(tempBatchJson ->> 'Name'), "SerialNumber" =(tempBatchJson ->> 'SerialNumber')::integer, "ExpiryDate" =(tempBatchJson ->> 'ExpiryDate')::date, "ManufacturingDate" =(tempBatchJson ->> 'ManufacturingDate')::date where "PCNBatchId" = temp_id; end if; end if; flag := ''; flag :=(tempJson ->> 'Flag'); if flag <> 'D' then flag := ''; temp_id := 0; purchase_creditNote_item_wareHouse_count := jsonb_array_length((tempJson ->> 'PCNItemWareHouse')::jsonb); if purchase_creditNote_item_wareHouse_count > 0 then for j in 0.. purchase_creditNote_item_wareHouse_count-1 loop tempWarehouseJson := (tempJson ->> 'PCNItemWareHouse')::jsonb->j; if tempWarehouseJson is not null then flag := (tempWarehouseJson ->> 'Flag'); temp_id = (tempWarehouseJson ->> 'PCNItemWHId'); select "StockGroupId" from "10083_10833"."StockItem" where "StockItemId" = ( tempJson->>'StockItemId' )::INTEGER into stock_group_id; if flag = 'D' then delete from "10083_10833"."PCNItemWareHouse" priwh where priwh."PCNItemWHId" = temp_id; insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out") values ( (tempJson->>'StockItemId')::integer, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, (tempWarehouseJson ->> 'TempQuantity')::float, 0) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId')::integer and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "In" = (coalesce ("10083_10833"."StockItemBalance"."In") + (tempWarehouseJson ->> 'TempQuantity')::float)::float; elseif flag = 'A' then insert into "10083_10833"."PCNItemWareHouse" ( "PCNItemId", "WareHouseId", "Quantity", "Rate", "Total" ) values (purchaseCreditNote_item_id, (tempWarehouseJson ->> 'WareHouseId')::integer, coalesce((tempWarehouseJson ->> 'Quantity')::float, 0), (tempWarehouseJson ->> 'Rate')::float, (tempWarehouseJson ->> 'Total')::float ); insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out") values ( (tempJson->>'StockItemId')::integer, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, (tempWarehouseJson ->> 'TempQuantity')::float, 0) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId')::integer and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "In" = (coalesce ("10083_10833"."StockItemBalance"."In") - (tempWarehouseJson ->> 'TempQuantity')::float)::float; elseif flag = 'U' then update "10083_10833"."PCNItemWareHouse" set "PCNItemId" =(tempWarehouseJson ->> 'PCNItemId')::integer, "WareHouseId" =(tempWarehouseJson ->> 'WareHouseId')::integer, "Quantity" = coalesce((tempWarehouseJson ->> 'Quantity')::float, 0), "Rate" =(tempWarehouseJson ->> 'Rate')::float, "Total" =(tempWarehouseJson ->> 'Total')::float where "PCNItemWHId" = temp_id; temp_WareHouse_Id := (tempWarehouseJson->>'TempWareHouseId') ::integer; if (tempWarehouseJson ->> 'WareHouseId')::integer <> temp_WareHouse_Id then insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out") values ( (tempJson->>'StockItemId')::integer, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, (tempWarehouseJson ->> 'TempQuantity')::float, 0) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId')::integer and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "In" = (coalesce ("10083_10833"."StockItemBalance"."In") - (tempWarehouseJson ->> 'TempQuantity')::float)::float; update "10083_10833"."StockItemBalance" set "In" =(coalesce("10083_10833"."StockItemBalance"."In" , 0) + coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT where "StockItemId" = ( tempJson->>'StockItemId' ) ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'TempWareHouseId')::integer; else insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out") values ( (tempJson->>'StockItemId')::integer, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer , (tempWarehouseJson ->> 'TempQuantity')::float, 0) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId')::integer and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "In" = (coalesce ("10083_10833"."StockItemBalance"."In") - (tempWarehouseJson ->> 'TempQuantity')::float)::float; end if; end if; end if; end loop; end if; end if; end loop; end if; updateAutoNumber := (purchaseCreditNote_data->>'UpdateAutoNumber') ::boolean ; if (updateAutoNumber = true ) then update "10083_10833"."AutoNumbering" set "StartingNumber" = "StartingNumber" + 1 where "TemplateId" = (purchaseCreditNote_data->>'TemplateId')::integer; end if; if exists ( select "Date" from "10083_10833"."LastDocumentDate") then update "10083_10833"."LastDocumentDate" set "Date" = (purchaseCreditNote_data->>'Date')::date, "UpdatedOn" = (CURRENT_TIMESTAMP)::date where "Date" < (purchaseCreditNote_data->>'Date')::date; else insert into "10083_10833"."LastDocumentDate" ( "Date", "UpdatedOn") values( (purchaseCreditNote_data ->> 'Date')::date , (CURRENT_TIMESTAMP)::date ); end if; end; $$;


ALTER PROCEDURE "10083_10833".purchasecreditnote_update_add(IN purchasecreditnote_data jsonb, OUT purchasecreditnote_id integer) OWNER TO "10083";

--
-- TOC entry 2355 (class 1255 OID 186195)
-- Name: purchaseorder_update_add(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".purchaseorder_update_add(IN purchaseorder_data jsonb, OUT purchaseorder_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; flag char(1); temp_id integer; item_count integer; purchaseOrder_item_id integer; supplier_data record; begin purchaseOrder_Id := (purchaseOrder_data->>'PurchaseOrderId') ::integer; flag := (purchaseOrder_data->>'Flag'); if flag = 'U' then update "10083_10833"."PurchaseOrder" set "Number" = (purchaseOrder_data->>'Number'), "Date" = (purchaseOrder_data->>'Date')::date, "FinancialYear" = (purchaseOrder_data->>'FinancialYear')::integer, "TemplateId" = (purchaseOrder_data->>'TemplateId')::integer, "DocumentName" = purchaseOrder_data->>'DocumentName', "SupplierId" = (purchaseOrder_data->>'SupplierId')::integer where "PurchaseOrder"."PurchaseOrderId" = purchaseOrder_Id; elseif flag = 'A' then insert into "10083_10833"."PurchaseOrder" ( "Number", "Date", "FinancialYear", "TemplateId", "DocumentName", "SupplierId" ) values( (purchaseOrder_data->>'Number'), (purchaseOrder_data->>'Date')::date, (purchaseOrder_data->>'FinancialYear')::integer, (purchaseOrder_data->>'TemplateId')::integer, (purchaseOrder_data->>'DocumentName'), (purchaseOrder_data->>'SupplierId')::integer ) returning "PurchaseOrderId" into purchaseOrder_Id; end if; flag := ''; tempJson := (purchaseOrder_data ->> 'PurchaseOrderBillTo'); if tempJson is not null then if flag <> 'D' and tempJson ->> 'Address' is null and tempJson ->> 'SupplierAddressId' is not null then select "Address", "City", "StateName", "StateCode", "Pincode", "CountryCode", "CountryName" from "10083_10833"."SupplierAddress" where "SupplierAddressId" = (tempJson ->> 'SupplierAddressId')::integer into supplier_data; tempJson := jsonb_set(tempJson, '{Address}', to_jsonb(supplier_data."Address")); tempJson := jsonb_set(tempJson, '{City}', to_jsonb(supplier_data."City")); tempJson := jsonb_set(tempJson, '{StateCode}', to_jsonb(supplier_data."StateCode")); tempJson := jsonb_set(tempJson, '{StateName}', to_jsonb(supplier_data."StateName")); tempJson := jsonb_set(tempJson, '{PinZipCode}', to_jsonb(supplier_data."Pincode")); tempJson := jsonb_set(tempJson, '{CountryCode}', to_jsonb(supplier_data."CountryCode")); tempJson := jsonb_set(tempJson, '{POSCode}', to_jsonb(supplier_data."StateCode")); tempJson := jsonb_set(tempJson, '{POSName}', to_jsonb(supplier_data."StateName")); end if; flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseOrderBillToId'); if flag = 'D' then delete from "10083_10833"."PurchaseOrderBillTo" pobt where pobt."PurchaseOrderBillToId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseOrderBillTo" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName', "POSCode" = (tempJson->> 'POSCode'), "POSName" = tempJson->> 'POSName' where "PurchaseOrderBillToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseOrderBillTo" ( "PurchaseOrderId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "POSCode", "POSName" ) values ( (purchaseOrder_Id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'POSCode'), (tempJson->> 'POSName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseOrder_data ->> 'PurchaseOrderShipTo'); if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'PurchaseOrderShipToId'); if flag = 'D' then delete from "10083_10833"."PurchaseOrderShipTo" sst where sst."PurchaseOrderShipToId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseOrderShipTo" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName' where "PurchaseOrderShipToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseOrderShipTo" ( "PurchaseOrderId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName" ) values ( (purchaseOrder_Id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseOrder_data ->> 'PurchaseOrderDispatchFrom'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseOrderDispatchFromId'); if flag = 'D' then delete from "10083_10833"."PurchaseOrderDispatchFrom" sdd where sdd."PurchaseOrderDispatchFromId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseOrderDispatchFrom" set "MailingName" = tempJson ->> 'MailingName', "Address1" = tempJson ->> 'Address1', "Address2" = tempJson ->> 'Address2', "City" = tempJson ->> 'City', "StateCode" = (tempJson ->> 'StateCode'), "StateName" = tempJson ->> 'StateName', "PinZipCode" = tempJson ->> 'PinZipCode', "CountryCode" = tempJson ->> 'CountryCode', "CountryName" = tempJson ->> 'CountryName' where "PurchaseOrderDispatchFromId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseOrderDispatchFrom" ( "PurchaseOrderId", "MailingName", "Address1", "Address2", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName" ) values ( purchaseOrder_Id, tempJson ->> 'MailingName', tempJson ->> 'Address1', tempJson ->> 'Address2', tempJson ->> 'City', (tempJson ->> 'StateCode'), tempJson ->> 'StateName', tempJson ->> 'PinZipCode', tempJson ->> 'CountryCode', tempJson ->> 'CountryName' ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseOrder_data ->> 'PurchaseOrderExportDetail'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseOrderExportDetailId'); if flag = 'D' then delete from "10083_10833"."PurchaseOrderExportDetail" sed where sed."PurchaseOrderExportDetailId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseOrderExportDetail" set "ShippingBillNumber" = tempJson ->> 'ShippingBillNumber', "ShippingBillDate" = (tempJson ->> 'ShippingBillDate')::date, "PortCode" = tempJson ->> 'PortCode', "PortName" = tempJson ->> 'PortName', "ForeignCurrency" = (tempJson ->> 'ForeignCurrency'), "CountryCode" = tempJson ->> 'CountryCode', "CountryName" = tempJson ->> 'CountryName', "RefundClaim" = (tempJson ->> 'RefundClaim')::boolean, "ExportDuty" = (tempJson ->> 'ExportDuty')::float, "DispatchThrough" = tempJson ->> 'DispatchThrough', "VehicleNumber" = tempJson ->> 'VehicleNumber', "ExchangeRate" =(tempJson ->> 'ExchangeRate')::float, "DestinationPortCode" = tempJson ->> 'DestinationPortCode', "DestinationPortName" = tempJson ->> 'DestinationPortName', "Destination" = tempJson ->> 'Destination', "LUTNumber" = tempJson ->> 'LUTNumber', "PlaceOfReceipt" = tempJson ->> 'PlaceOfReceipt' where "PurchaseOrderExportDetailId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseOrderExportDetail" ( "PurchaseOrderId", "ShippingBillNumber", "ShippingBillDate", "PortCode", "PortName", "ForeignCurrency", "CountryCode", "CountryName", "RefundClaim", "ExportDuty", "DispatchThrough", "VehicleNumber", "ExchangeRate", "DestinationPortCode", "DestinationPortName", "Destination", "LUTNumber", "PlaceOfReceipt" ) values ( purchaseOrder_Id, tempJson ->> 'ShippingBillNumber', (tempJson ->> 'ShippingBillDate')::date, tempJson ->> 'PortCode', tempJson ->> 'PortName', (tempJson ->> 'ForeignCurrency'), tempJson ->> 'CountryCode', tempJson ->> 'CountryName', (tempJson ->> 'RefundClaim')::boolean, (tempJson ->> 'ExportDuty')::float, tempJson ->> 'DispatchThrough', tempJson ->> 'VehicleNumber', (tempJson ->> 'ExchangeRate')::float, tempJson ->> 'DestinationPortCode', tempJson ->> 'DestinationPortName', tempJson ->> 'Destination', tempJson ->> 'LUTNumber', tempJson ->> 'PlaceOfReceipt' ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseOrder_data ->> 'PurchaseOrderValueDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseOrderValueDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseOrderValueDetails" svd where svd."PurchaseOrderValueDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseOrderValueDetails" set "AssessableValue" =(tempJson ->> 'AssessableValue')::float, "IGST" =(tempJson ->> 'IGST')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "Cess" =(tempJson ->> 'Cess')::float, "StateCess" =(tempJson ->> 'StateCess')::float, "InvoiceValue" =(tempJson ->> 'InvoiceValue')::float, "RoundOffAmount" =(tempJson ->> 'RoundOffAmount')::float, "InvoiceValueForeignCurrency" =(tempJson ->> 'InvoiceValueForeignCurrency')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharge" =(tempJson ->> 'OtherCharge')::float, "OtherChargeTaxable" =(tempJson ->> 'OtherChargeTaxable')::float, "TCSRate" =(tempJson ->> 'TCSRate')::float, "TCSAmount" =(tempJson ->> 'TCSAmount')::float where "PurchaseOrderValueDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseOrderValueDetails" ( "PurchaseOrderId", "AssessableValue", "IGST", "CGST", "SGST", "Cess", "StateCess", "InvoiceValue", "RoundOffAmount", "InvoiceValueForeignCurrency", "Discount", "OtherCharge", "OtherChargeTaxable", "TCSRate", "TCSAmount" ) values ( (purchaseOrder_Id), (tempJson ->> 'AssessableValue')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'Cess')::float, (tempJson ->> 'StateCess')::float, (tempJson ->> 'InvoiceValue')::float, (tempJson ->> 'RoundOffAmount')::float, (tempJson ->> 'InvoiceValueForeignCurrency')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharge')::float, (tempJson ->> 'OtherChargeTaxable')::float, (tempJson ->> 'TCSRate')::float, (tempJson ->> 'TCSAmount')::float ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseOrder_data ->> 'PurchaseOrderDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseOrderDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseOrderDetails" sod where sod."PurchaseOrderDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseOrderDetails" set "ModeTermsOfPayment" =(tempJson ->> 'ModeTermsOfPayment'), "TermsOfDelivery" =(tempJson ->> 'TermsOfDelivery'), "TermAndCondition" =(tempJson ->> 'TermAndCondition') where "PurchaseOrderDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseOrderDetails" ( "PurchaseOrderId", "ModeTermsOfPayment", "TermsOfDelivery", "TermAndCondition" ) values ( (purchaseOrder_Id), (tempJson ->> 'ModeTermsOfPayment'), (tempJson ->> 'TermsOfDelivery'), (tempJson ->> 'TermAndCondition') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((purchaseOrder_data ->> 'PurchaseOrderItems')::jsonb); for i in 0.. item_count-1 loop tempJson = (purchaseOrder_data ->> 'PurchaseOrderItems')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseOrderItemsId'); if flag = 'D' then delete from "10083_10833"."PurchaseOrderItems" si where si."PurchaseOrderItemsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseOrderItems" set "StockItemId" =(tempJson ->> 'StockItemId')::integer, "ItemName" =(tempJson ->> 'ItemName'), "ItemSerialNumber" =(tempJson ->> 'ItemSerialNumber')::integer, "ItemCode" =(tempJson ->> 'ItemCode')::integer, "ItemDescription" =(tempJson ->> 'ItemDescription'), "HSNSAC" =(tempJson ->> 'HSNSAC'), "BarCode" =(tempJson ->> 'BarCode'), "OrderQuantity" =(tempJson ->> 'OrderQuantity')::float, "BalanceQuantity" =(tempJson ->> 'BalanceQuantity')::float, "FreeQuantity" =(tempJson ->> 'FreeQuantity')::float, "UnitPrice" =(tempJson ->> 'UnitPrice')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharges" =(tempJson ->> 'OtherCharges')::float, "TaxableValue" =(tempJson ->> 'TaxableValue')::float, "GstRate" =(tempJson ->> 'GstRate')::float, "CessRate" =(tempJson ->> 'CessRate')::float, "StateCessRate" =(tempJson ->> 'StateCessRate')::float, "IGST" =(tempJson ->> 'IGST')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "Cess" =(tempJson ->> 'Cess')::float, "StateCess" =(tempJson ->> 'StateCess')::float, "CessNonAdvolRate" =(tempJson ->> 'CessNonAdvolRate')::float, "CessNonAdvolUnit" =(tempJson ->> 'CessNonAdvolUnit')::float, "StateCessNonAdvolRate" =(tempJson ->> 'StateCessNonAdvolRate')::float, "StateCessNonAdvolUnit" =(tempJson ->> 'StateCessNonAdvolUnit')::float, "CessNonAdvol" =(tempJson ->> 'CessNonAdvol')::float, "StateCessNonAdvol" =(tempJson ->> 'StateCessNonAdvol')::float, "TotalItemValue" =(tempJson ->> 'TotalItemValue')::float where "PurchaseOrderItemsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseOrderItems" ( "PurchaseOrderId", "StockItemId", "ItemName", "ItemSerialNumber", "ItemCode", "ItemDescription", "HSNSAC", "BarCode", "OrderQuantity", "BalanceQuantity", "FreeQuantity", "UnitPrice", "SubTotal", "Discount", "OtherCharges", "TaxableValue", "GstRate", "CessRate", "StateCessRate", "IGST", "CGST", "SGST", "Cess", "StateCess", "CessNonAdvolRate", "CessNonAdvolUnit", "StateCessNonAdvolRate", "StateCessNonAdvolUnit", "CessNonAdvol", "StateCessNonAdvol", "TotalItemValue" ) values ( (purchaseOrder_Id), (tempJson ->> 'StockItemId')::integer, (tempJson ->> 'ItemName'), (tempJson ->> 'ItemSerialNumber')::integer, (tempJson ->> 'ItemCode')::integer, (tempJson ->> 'ItemDescription'), (tempJson ->> 'HSNSAC'), (tempJson ->> 'BarCode'), (tempJson ->> 'OrderQuantity')::float, (tempJson ->> 'BalanceQuantity')::float, (tempJson ->> 'FreeQuantity')::float, (tempJson ->> 'UnitPrice')::float, (tempJson ->> 'SubTotal')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharges')::float, (tempJson ->> 'TaxableValue')::float, (tempJson ->> 'GstRate')::float, (tempJson ->> 'CessRate')::float, (tempJson ->> 'StateCessRate')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'Cess')::float, (tempJson ->> 'StateCess')::float, (tempJson ->> 'CessNonAdvolRate')::float, (tempJson ->> 'CessNonAdvolUnit')::float, (tempJson ->> 'StateCessNonAdvolRate')::float, (tempJson ->> 'StateCessNonAdvolUnit')::float, (tempJson ->> 'CessNonAdvol')::float, (tempJson ->> 'StateCessNonAdvol')::float, (tempJson ->> 'TotalItemValue')::float ) returning "PurchaseOrderItemsId" into purchaseOrder_item_id; end if; end if; if flag <> 'D' then flag := ''; temp_id := 0; tempJson := (tempJson ->> 'PurchaseOrderBatchDetails')::jsonb; flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseOrderBatchDetailsId'); if flag = 'A' then insert into "10083_10833"."PurchaseOrderBatchDetails" ( "PurchaseOrderItemsId", "Name", "SerialNumber", "ExpiryDate", "ManufacturingDate" ) values ( purchaseOrder_item_id, (tempJson ->> 'Name'), (tempJson ->> 'SerialNumber')::integer, (tempJson ->> 'ExpiryDate')::date, (tempJson ->> 'ManufacturingDate')::date ); elseif flag = 'U' then update "10083_10833"."PurchaseOrderBatchDetails" set "PurchaseOrderItemsId" =(tempJson ->> 'PurchaseOrderItemsId')::integer, "Name" =(tempJson ->> 'Name'), "SerialNumber" =(tempJson ->> 'SerialNumber')::integer, "ExpiryDate" =(tempJson ->> 'ExpiryDate')::date, "ManufacturingDate" =(tempJson ->> 'ManufacturingDate')::date where "PurchaseOrderBatchDetailsId" = temp_id; end if; end if; end loop; end; $$;


ALTER PROCEDURE "10083_10833".purchaseorder_update_add(IN purchaseorder_data jsonb, OUT purchaseorder_id integer) OWNER TO "10083";

--
-- TOC entry 2353 (class 1255 OID 186193)
-- Name: purchasereturn_update_add(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".purchasereturn_update_add(IN purchasereturn_data jsonb, OUT purchasereturn_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; flag char(1); temp_id integer; item_count integer; purchaseReturn_item_id integer; other_charges_count integer; purchase_return_item_wareHouse_count integer; supplier_data record; stock_group_id integer; temp_WareHouse_Id integer; tempWarehouseJson jsonb; tempBatchJson jsonb; updateAutoNumber boolean; begin purchaseReturn_Id := (purchaseReturn_data->>'PurchaseReturnId')::integer; flag := (purchaseReturn_data->>'Flag'); if flag = 'U' then update "10083_10833"."PurchaseReturn" set "Number" = (purchaseReturn_data->>'Number'), "Date" = (purchaseReturn_data->>'Date')::date, "FinancialYear" = (purchaseReturn_data->>'FinancialYear')::integer, "TemplateId" = (purchaseReturn_data->>'TemplateId')::integer, "DocumentName" = purchaseReturn_data->>'DocumentName', "OriginalInvoiceNo" = (purchaseReturn_data->>'OriginalInvoiceNo'), "OriginalInvoiceDate" = (purchaseReturn_data->>'OriginalInvoiceDate')::date, "TermAndConditionId" = (purchaseReturn_data->>'TermAndConditionId')::integer, "SupplierId" = (purchaseReturn_data->>'SupplierId')::integer, "TermAndConditionText" = purchaseReturn_data->>'TermAndConditionText', "EcomGSTIN" = (purchaseReturn_data->>'EcomGSTIN'), "CurrencyId" = (purchaseReturn_data ->> 'CurrencyId')::integer, "SalesPersonId" = (purchaseReturn_data ->> 'SalesPersonId')::integer, "ExchangeRate" =(purchaseReturn_data ->> 'ExchangeRate')::float where "PurchaseReturn"."PurchaseReturnId" = purchaseReturn_Id; elseif flag = 'A' then insert into "10083_10833"."PurchaseReturn" ( "Number", "Date", "FinancialYear", "TemplateId", "SupplierId", "DocumentName", "OriginalInvoiceNo", "OriginalInvoiceDate", "TermAndConditionId", "TermAndConditionText", "EcomGSTIN", "DocumentStatus", "CurrencyId", "SalesPersonId", "ExchangeRate" ) values( (purchaseReturn_data->>'Number'), (purchaseReturn_data->>'Date')::date, (purchaseReturn_data->>'FinancialYear')::integer, (purchaseReturn_data->>'TemplateId')::integer, (purchaseReturn_data->>'SupplierId')::integer, purchaseReturn_data->>'DocumentName', (purchaseReturn_data->>'OriginalInvoiceNo'), (purchaseReturn_data->>'OriginalInvoiceDate')::date, (purchaseReturn_data->>'TermAndConditionId')::integer, purchaseReturn_data->>'TermAndConditionText', (purchaseReturn_data->>'EcomGSTIN'), (coalesce((purchaseReturn_data->>'DocumentStatus')::integer, 1)::integer), (purchaseReturn_data ->> 'CurrencyId')::integer, (purchaseReturn_data ->> 'SalesPersonId')::integer, (purchaseReturn_data ->> 'ExchangeRate')::float ) returning "PurchaseReturnId" into purchaseReturn_Id; end if; flag := ''; tempJson := (purchaseReturn_data ->> 'PurchaseReturnBillFrom'); if tempJson is not null then if flag <> 'D' and (tempJson ->> 'MapFromMaster')::boolean is true and tempJson ->> 'SupplierAddressId' is not null then select "Address", "City", "StateName", "StateCode", "Pincode", "CountryCode", "CountryName" from "10083_10833"."SupplierAddress" where "SupplierAddressId" = (tempJson ->> 'SupplierAddressId')::integer into supplier_data; tempJson := jsonb_set(tempJson, '{Address}', to_jsonb(coalesce(supplier_data."Address", ''))); tempJson := jsonb_set(tempJson, '{City}', to_jsonb(coalesce(supplier_data."City", ''))); tempJson := jsonb_set(tempJson, '{StateCode}', to_jsonb(coalesce(supplier_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{StateName}', to_jsonb(coalesce(supplier_data."StateName", ''))); tempJson := jsonb_set(tempJson, '{PinZipCode}', to_jsonb(coalesce(supplier_data."Pincode", ''))); tempJson := jsonb_set(tempJson, '{CountryCode}', to_jsonb(coalesce(supplier_data."CountryCode", ''))); tempJson := jsonb_set(tempJson, '{CountryName}', to_jsonb(coalesce(supplier_data."CountryName", ''))); tempJson := jsonb_set(tempJson, '{POSCode}', to_jsonb(coalesce(supplier_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{POSName}', to_jsonb(coalesce(supplier_data."StateName", ''))); end if; flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseReturnBillFromId'); if flag = 'D' then delete from "10083_10833"."PurchaseReturnBillFrom" sbt where sbt."PurchaseReturnBillFromId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseReturnBillFrom" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName', "POSCode" = (tempJson->> 'POSCode'), "POSName" = tempJson->> 'POSName', "GSTIN" = tempJson->> 'GSTIN' where "PurchaseReturnBillFromId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseReturnBillFrom" ( "PurchaseReturnId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "POSCode", "POSName", "GSTIN" ) values ( (purchaseReturn_Id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'POSCode'), (tempJson->> 'POSName'), (tempJson->> 'GSTIN') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseReturn_data ->> 'PurchaseReturnShipTo'); if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'PurchaseReturnShipToId'); if flag = 'D' then delete from "10083_10833"."PurchaseReturnShipTo" sst where sst."PurchaseReturnShipToId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseReturnShipTo" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName' where "PurchaseReturnShipToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseReturnShipTo" ( "PurchaseReturnId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName" ) values ( (purchaseReturn_Id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseReturn_data ->> 'PurchaseReturnDispatchFrom'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseReturnDispatchFromId'); if flag = 'D' then delete from "10083_10833"."PurchaseReturnDispatchFrom" sdd where sdd."PurchaseReturnDispatchFromId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseReturnDispatchFrom" set "MailingName" = tempJson ->> 'MailingName', "Address" = tempJson ->> 'Address', "City" = tempJson ->> 'City', "StateCode" = (tempJson ->> 'StateCode'), "StateName" = tempJson ->> 'StateName', "PinZipCode" = tempJson ->> 'PinZipCode', "CountryCode" = tempJson ->> 'CountryCode', "CountryName" = tempJson ->> 'CountryName', "DispatchDocNo" = tempJson ->> 'DispatchDocNo', "DispatchThrough" = tempJson ->> 'DispatchThrough', "Destination" = tempJson ->> 'Destination', "CarrierNameAgent" = tempJson ->> 'CarrierNameAgent', "BillOfLandingLrRrNo" = tempJson ->> 'BillOfLandingLrRrNo', "Date" = (tempJson ->> 'Date')::date, "MotorVehicleNo" = tempJson ->> 'MotorVehicleNo' where "PurchaseReturnDispatchFromId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseReturnDispatchFrom" ( "PurchaseReturnId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "DispatchDocNo", "DispatchThrough", "Destination", "CarrierNameAgent", "BillOfLandingLrRrNo", "Date", "MotorVehicleNo") values ( purchaseReturn_Id, tempJson ->> 'MailingName', tempJson ->> 'Address', tempJson ->> 'City', (tempJson ->> 'StateCode'), tempJson ->> 'StateName', tempJson ->> 'PinZipCode', tempJson ->> 'CountryCode', tempJson ->> 'CountryName', tempJson ->> 'DispatchDocNo', tempJson ->> 'DispatchThrough', tempJson ->> 'Destination', tempJson ->> 'CarrierNameAgent', tempJson ->> 'BillOfLandingLrRrNo', (tempJson ->> 'Date')::date, tempJson ->> 'MotorVehicleNo' ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseReturn_data ->> 'PurchaseReturnExportDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseReturnExportDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseReturnExportDetails" sed where sed."PurchaseReturnExportDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseReturnExportDetails" set "ShippingBillNumber" = tempJson ->> 'ShippingBillNumber', "ShippingBillDate" = (tempJson ->> 'ShippingBillDate')::date, "PortCode" = tempJson ->> 'PortCode', "PortName" = tempJson ->> 'PortName', "CountryCode" = tempJson ->> 'CountryCode', "CountryName" = tempJson ->> 'CountryName', "RefundClaim" = (tempJson ->> 'RefundClaim')::boolean, "ExportDuty" = (tempJson ->> 'ExportDuty')::float, "DispatchThrough" = tempJson ->> 'DispatchThrough', "VesselFlightNo" = tempJson ->> 'VesselFlightNo', "DestinationPortCode" = tempJson ->> 'DestinationPortCode', "DestinationPortName" = tempJson ->> 'DestinationPortName', "Destination" = tempJson ->> 'Destination', "LUTNumber" = tempJson ->> 'LUTNumber', "PlaceOfReceiptByShipper" = tempJson ->> 'PlaceOfReceiptByShipper', "PortOfLoadingCode" = tempJson ->> 'PortOfLoadingCode', "PortOfLoadingName" = tempJson ->> 'PortOfLoadingName', "PortOfDischargeCode" = tempJson ->> 'PortOfDischargeCode', "PortOfDischargeName" = tempJson ->> 'PortOfDischargeName' where "PurchaseReturnExportDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseReturnExportDetails" ( "PurchaseReturnId", "ShippingBillNumber", "ShippingBillDate", "PortCode", "PortName", "CountryCode", "CountryName", "RefundClaim", "ExportDuty", "DispatchThrough", "VesselFlightNo", "DestinationPortCode", "DestinationPortName", "Destination", "LUTNumber", "PlaceOfReceiptByShipper", "PortOfLoadingCode", "PortOfLoadingName", "PortOfDischargeCode", "PortOfDischargeName" ) values ( purchaseReturn_Id, tempJson ->> 'ShippingBillNumber', (tempJson ->> 'ShippingBillDate')::date, tempJson ->> 'PortCode', tempJson ->> 'PortName', tempJson ->> 'CountryCode', tempJson ->> 'CountryName', (tempJson ->> 'RefundClaim')::boolean, (tempJson ->> 'ExportDuty')::float, tempJson ->> 'DispatchThrough', tempJson ->> 'VesselFlightNo', (tempJson ->> 'DestinationPortCode'), (tempJson ->> 'DestinationPortName'), (tempJson ->> 'Destination'), (tempJson ->> 'LUTNumber'), (tempJson ->> 'PlaceOfReceiptByShipper'), (tempJson ->> 'PortOfLoadingCode'), (tempJson ->> 'PortOfLoadingName'), (tempJson ->> 'PortOfDischargeCode'), (tempJson ->> 'PortOfDischargeName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseReturn_data ->> 'PurchaseReturnValueDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseReturnValueDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseReturnValueDetails" svd where svd."PurchaseReturnValueDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseReturnValueDetails" set "AssessableValue" =(tempJson ->> 'AssessableValue')::float, "IGSTValue" =(tempJson ->> 'IGSTValue')::float, "CGSTValue" =(tempJson ->> 'CGSTValue')::float, "SGSTValue" =(tempJson ->> 'SGSTValue')::float, "CessValue" =(tempJson ->> 'CessValue')::float, "StateCessValue" =(tempJson ->> 'StateCessValue')::float, "TotalInvoiceValue" =(tempJson ->> 'TotalInvoiceValue')::float, "RoundOffAmount" =(tempJson ->> 'RoundOffAmount')::float, "TotalInvValForeignCurrency" =(tempJson ->> 'TotalInvValForeignCurrency')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharge" =(tempJson ->> 'OtherCharge')::float, "OtherChargeTaxable" =(tempJson ->> 'OtherChargeTaxable')::float, "TCSRate" =(tempJson ->> 'TCSRate')::float, "InvoiceValueWithoutTCS" =(tempJson ->> 'InvoiceValueWithoutTCS')::float, "TCSAmount" =(tempJson ->> 'TCSAmount')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float where "PurchaseReturnValueDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseReturnValueDetails" ( "PurchaseReturnId", "AssessableValue", "IGSTValue", "CGSTValue", "SGSTValue", "CessValue", "StateCessValue", "TotalInvoiceValue", "RoundOffAmount", "TotalInvValForeignCurrency", "Discount", "OtherCharge", "OtherChargeTaxable", "TCSRate", "InvoiceValueWithoutTCS", "TCSAmount", "SubTotal" ) values ( purchaseReturn_Id, (tempJson ->> 'AssessableValue')::float, (tempJson ->> 'IGSTValue')::float, (tempJson ->> 'CGSTValue')::float, (tempJson ->> 'SGSTValue')::float, (tempJson ->> 'CessValue')::float, (tempJson ->> 'StateCessValue')::float, (tempJson ->> 'TotalInvoiceValue')::float, (tempJson ->> 'RoundOffAmount')::float, (tempJson ->> 'TotalInvValForeignCurrency')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharge')::float, (tempJson ->> 'OtherChargeTaxable')::float, (tempJson ->> 'TCSRate')::float, (tempJson ->> 'InvoiceValueWithoutTCS')::float, (tempJson ->> 'TCSAmount')::float, (tempJson ->> 'SubTotal')::float ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseReturn_data ->> 'PurchaseReturnOtherDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseReturnOtherDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseReturnOtherDetails" sod where sod."PurchaseReturnOtherDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseReturnOtherDetails" set "ModeTermsOfPayment" =(tempJson ->> 'ModeTermsOfPayment'), "TermsOfDelivery" =(tempJson ->> 'TermsOfDelivery'), "TermAndCondition" =(tempJson ->> 'TermAndCondition') where "PurchaseReturnOtherDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseReturnOtherDetails" ( "PurchaseReturnId", "ModeTermsOfPayment", "TermsOfDelivery", "TermAndCondition" ) values ( purchaseReturn_Id, (tempJson ->> 'ModeTermsOfPayment'), (tempJson ->> 'TermsOfDelivery'), (tempJson ->> 'TermAndCondition') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (purchaseReturn_data ->> 'PurchaseReturnEwayBillsDetails'); if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'PurchaseReturnEwayBillsDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseReturnEwayBillsDetails" sst where sst."PurchaseReturnEwayBillsDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseReturnEwayBillsDetails" set "GSTIN" = tempJson->> 'GSTIN', "TransporterName" = tempJson->> 'TransporterName', "TransportModeCode" = (tempJson->> 'TransportModeCode')::integer, "TransportModeName" = (tempJson->> 'TransportModeName'), "Distance" = tempJson->> 'Distance', "TransportDocumentNumber" = tempJson->> 'TransportDocumentNumber', "TransportDocumentDate" = (tempJson->> 'TransportDocumentDate')::date, "VehicleNumber" = tempJson->> 'VehicleNumber', "VehicleTypeCode" = tempJson->> 'VehicleTypeCode', "VehicleTypeName" = (tempJson->> 'VehicleTypeName'), "EwayBillNumber" = tempJson->> 'EwayBillNumber', "EwayBillDate" = (tempJson->> 'EwayBillDate')::date, "DispatchFrom" = (tempJson->> 'DispatchFrom'), "ShipTo" = tempJson->> 'ShipTo' where "PurchaseReturnEwayBillsDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseReturnEwayBillsDetails" ( "PurchaseReturnId", "GSTIN", "TransporterName", "TransportModeCode", "TransportModeName", "Distance", "TransportDocumentNumber", "TransportDocumentDate", "VehicleNumber", "VehicleTypeCode", "VehicleTypeName", "EwayBillNumber", "EwayBillDate", "DispatchFrom", "ShipTo" ) values ( (purchaseReturn_Id), (tempJson->> 'GSTIN'), (tempJson->> 'TransporterName'), (tempJson->> 'TransportModeCode')::integer, (tempJson->> 'TransportModeName'), (tempJson->> 'Distance'), (tempJson->> 'TransportDocumentNumber'), (tempJson->> 'TransportDocumentDate')::date, (tempJson->> 'VehicleNumber'), (tempJson->> 'VehicleTypeCode'), (tempJson->> 'VehicleTypeName'), (tempJson->> 'EwayBillNumber'), (tempJson->> 'EwayBillDate')::date, (tempJson->> 'DispatchFrom'), (tempJson->> 'ShipTo') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; other_charges_count := jsonb_array_length((purchaseReturn_data ->> 'PurchaseReturnOtherCharges')::jsonb); if other_charges_count > 0 then for i in 0.. other_charges_count-1 loop tempJson = (purchaseReturn_data ->> 'PurchaseReturnOtherCharges')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseReturnOtherChargeId')::integer; if flag = 'D' then delete from "10083_10833"."PurchaseReturnOtherCharges" proc where proc."PurchaseReturnOtherChargeId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseReturnOtherCharges" set "OtherChargeId" =(tempJson ->> 'OtherChargeId')::integer, "GSTRateCode" =(tempJson ->> 'GSTRateCode')::float, "GSTRateName" =(tempJson ->> 'GSTRateName')::float, "Amount" =(tempJson ->> 'Amount')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "IGST" =(tempJson ->> 'IGST')::float, "HSN" =(tempJson ->> 'HSN'), "TaxableCode" =(tempJson ->> 'TaxableCode')::integer, "TaxableName" =(tempJson ->> 'TaxableName'), "AppropriateCode" =(tempJson ->>'AppropriateCode')::integer, "AppropriateName" =(tempJson ->>'AppropriateName'), "Name" =(tempJson ->>'Name') where "PurchaseReturnOtherChargeId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseReturnOtherCharges" ( "PurchaseReturnId", "OtherChargeId", "GSTRateCode", "GSTRateName", "Amount", "CGST", "SGST", "IGST", "HSN", "TaxableCode", "TaxableName", "AppropriateCode", "AppropriateName", "Name") values( purchaseReturn_Id, (tempJson ->> 'OtherChargeId')::integer, (tempJson ->> 'GSTRateCode')::float, (tempJson ->> 'GSTRateName')::float, (tempJson ->> 'Amount')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'HSN'), (tempJson ->> 'TaxableCode')::integer, (tempJson ->> 'TaxableName'), (tempJson ->> 'AppropriateCode')::integer, (tempJson ->> 'AppropriateName'), (tempJson ->>'Name')); end if; end if; end loop; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((purchaseReturn_data ->> 'PurchaseReturnItems')::jsonb); if item_count > 0 then for i in 0.. item_count-1 loop tempJson = (purchaseReturn_data ->> 'PurchaseReturnItems')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'PurchaseReturnItemsId'); if flag = 'D' then delete from "10083_10833"."PurchaseReturnItems" si where si."PurchaseReturnItemsId" = temp_id; elseif flag = 'U' then update "10083_10833"."PurchaseReturnItems" set "StockItemId" =(tempJson ->> 'StockItemId')::integer, "ItemName" =(tempJson ->> 'ItemName'), "ItemSerialNumber" =(tempJson ->> 'ItemSerialNumber')::integer, "ItemCode" =(tempJson ->> 'ItemCode')::integer, "ItemDescription" =(tempJson ->> 'ItemDescription'), "HSNSAC" =(tempJson ->> 'HSNSAC'), "BarCode" =(tempJson ->> 'BarCode'), "Quantity" =(tempJson ->> 'Quantity')::float, "FreeQuantity" =(tempJson ->> 'FreeQuantity')::float, "UnitPrice" =(tempJson ->> 'UnitPrice')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharges" =(tempJson ->> 'OtherCharges')::float, "TaxableValue" =(tempJson ->> 'TaxableValue')::float, "GstRate" =(tempJson ->> 'GstRate')::float, "CessRate" =(tempJson ->> 'CessRate')::float, "StateCessRateCode" =(tempJson ->> 'StateCessRateCode')::float, "StateCessRateName" =(tempJson ->> 'StateCessRateName')::float, "IGST" =(tempJson ->> 'IGST')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "Cess" =(tempJson ->> 'Cess')::float, "StateCess" =(tempJson ->> 'StateCess')::float, "CessNonAdvolRateCode" =(tempJson ->> 'CessNonAdvolRateCode')::float, "CessNonAdvolRateName" =(tempJson ->> 'CessNonAdvolRateName')::float, "CessNonAdvolUnit" =(tempJson ->> 'CessNonAdvolUnit')::float, "StateCessNonAdvolRateCode" =(tempJson ->> 'StateCessNonAdvolRateCode')::float, "StateCessNonAdvolRateName" =(tempJson ->> 'StateCessNonAdvolRateName')::float, "StateCessNonAdvolUnit" =(tempJson ->> 'StateCessNonAdvolUnit')::float, "CessNonAdvol" =(tempJson ->> 'CessNonAdvol')::float, "StateCessNonAdvol" =(tempJson ->> 'StateCessNonAdvol')::float, "TotalItemValue" =(tempJson ->> 'TotalItemValue')::float, "MarksContainerNo" =(tempJson ->> 'MarksContainerNo'), "NumberOfPackages" =(tempJson ->> 'NumberOfPackages')::float, "UOMCode" = (tempJson ->> 'UOMCode'), "DiscountRate" =(tempJson ->> 'DiscountRate')::float where "PurchaseReturnItemsId" = temp_id; purchaseReturn_item_id := temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseReturnItems" ( "PurchaseReturnId", "StockItemId", "ItemName", "ItemSerialNumber", "ItemCode", "ItemDescription", "HSNSAC", "BarCode", "Quantity", "FreeQuantity", "UnitPrice", "SubTotal", "Discount", "OtherCharges", "TaxableValue", "GstRate", "CessRate", "StateCessRateCode", "StateCessRateName", "IGST", "CGST", "SGST", "Cess", "StateCess", "CessNonAdvolRateCode", "CessNonAdvolRateName", "CessNonAdvolUnit", "StateCessNonAdvolRateCode", "StateCessNonAdvolRateName", "StateCessNonAdvolUnit", "CessNonAdvol", "StateCessNonAdvol", "TotalItemValue", "MarksContainerNo", "NumberOfPackages", "UOMCode", "DiscountRate" ) values ( purchaseReturn_Id, (tempJson ->> 'StockItemId')::integer, (tempJson ->> 'ItemName'), (tempJson ->> 'ItemSerialNumber')::integer, (tempJson ->> 'ItemCode')::integer, (tempJson ->> 'ItemDescription'), (tempJson ->> 'HSNSAC'), (tempJson ->> 'BarCode'), (tempJson ->> 'Quantity')::float, (tempJson ->> 'FreeQuantity')::float, (tempJson ->> 'UnitPrice')::float, (tempJson ->> 'SubTotal')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharges')::float, (tempJson ->> 'TaxableValue')::float, (tempJson ->> 'GstRate')::float, (tempJson ->> 'CessRate')::float, (tempJson ->> 'StateCessRateCode')::float, (tempJson ->> 'StateCessRateName')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'Cess')::float, (tempJson ->> 'StateCess')::float, (tempJson ->> 'CessNonAdvolRateCode')::float, (tempJson ->> 'CessNonAdvolRateName')::float, (tempJson ->> 'CessNonAdvolUnit')::float, (tempJson ->> 'StateCessNonAdvolRateCode')::float, (tempJson ->> 'StateCessNonAdvolRateName')::float, (tempJson ->> 'StateCessNonAdvolUnit')::float, (tempJson ->> 'CessNonAdvol')::float, (tempJson ->> 'StateCessNonAdvol')::float, (tempJson ->> 'TotalItemValue')::float, (tempJson ->> 'MarksContainerNo'), (tempJson ->> 'NumberOfPackages')::float, (tempJson ->> 'UOMCode'), (tempJson ->> 'DiscountRate')::float ) returning "PurchaseReturnItemsId" into purchaseReturn_item_id; end if; end if; if flag <> 'D' then flag := ''; temp_id := 0; tempBatchJson := (tempJson ->> 'PurchaseReturnBatchDetails')::jsonb; flag := (tempBatchJson->> 'Flag'); temp_id := (tempBatchJson ->> 'BatchDetailsId'); if flag = 'D' then delete from "10083_10833"."PurchaseReturnBatchDetails" prb where prb."BatchDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."PurchaseReturnBatchDetails" ( "PRItemId", "Name", "SerialNumber", "ExpiryDate", "ManufacturingDate" ) values ( purchaseReturn_item_id, (tempBatchJson ->> 'Name'), (tempBatchJson ->> 'SerialNumber')::integer, (tempBatchJson ->> 'ExpiryDate')::date, (tempBatchJson ->> 'ManufacturingDate')::date ); elseif flag = 'U' then update "10083_10833"."PurchaseReturnBatchDetails" set "PRItemId" =(tempBatchJson ->> 'PRItemId')::integer, "Name" =(tempBatchJson ->> 'Name'), "SerialNumber" =(tempBatchJson ->> 'SerialNumber')::integer, "ExpiryDate" =(tempBatchJson ->> 'ExpiryDate')::date, "ManufacturingDate" =(tempBatchJson ->> 'ManufacturingDate')::date where "BatchDetailsId" = temp_id; end if; end if; flag := ''; flag :=(tempJson ->> 'Flag'); if flag <> 'D' then flag := ''; temp_id := 0; purchase_return_item_wareHouse_count := jsonb_array_length((tempJson ->> 'PurchaseReturnItemWareHouse')::jsonb); if purchase_return_item_wareHouse_count > 0 then for j in 0.. purchase_return_item_wareHouse_count-1 loop tempWarehouseJson := (tempJson ->> 'PurchaseReturnItemWareHouse')::jsonb->j; if tempWarehouseJson is not null then flag := (tempWarehouseJson ->> 'Flag'); temp_id = (tempWarehouseJson ->> 'PRItemWHId'); select "StockGroupId" from "10083_10833"."StockItem" where "StockItemId" = ( tempJson->>'StockItemId' )::INTEGER into stock_group_id; if flag = 'D' then delete from "10083_10833"."PurchaseReturnItemWareHouse" priwh where priwh."PRItemWHId" = temp_id; insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out") values ( (tempJson->>'StockItemId')::integer, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, (tempWarehouseJson ->> 'TempQuantity')::float, 0) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId')::integer and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "In" = (coalesce ("10083_10833"."StockItemBalance"."In") + (tempWarehouseJson ->> 'TempQuantity')::float)::float; elseif flag = 'A' then insert into "10083_10833"."PurchaseReturnItemWareHouse" ( "PRItemId", "WareHouseId", "Quantity", "Rate", "Total" ) values (purchaseReturn_item_id, (tempWarehouseJson ->> 'WareHouseId')::integer, coalesce((tempWarehouseJson ->> 'Quantity')::float, 0), (tempWarehouseJson ->> 'Rate')::float, (tempWarehouseJson ->> 'Total')::float ); insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out") values ( (tempJson->>'StockItemId')::integer, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, (tempWarehouseJson ->> 'TempQuantity')::float, 0) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId')::integer and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "In" = (coalesce ("10083_10833"."StockItemBalance"."In") - (tempWarehouseJson ->> 'TempQuantity')::float)::float; elseif flag = 'U' then update "10083_10833"."PurchaseReturnItemWareHouse" set "PRItemId" =(tempWarehouseJson ->> 'PRItemId')::integer, "WareHouseId" =(tempWarehouseJson ->> 'WareHouseId')::integer, "Quantity" = coalesce((tempWarehouseJson ->> 'Quantity')::float, 0), "Rate" =(tempWarehouseJson ->> 'Rate')::float, "Total" =(tempWarehouseJson ->> 'Total')::float where "PRItemWHId" = temp_id; temp_WareHouse_Id := (tempWarehouseJson->>'TempWareHouseId') ::integer; if (tempWarehouseJson ->> 'WareHouseId')::integer <> temp_WareHouse_Id then insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out") values ( (tempJson->>'StockItemId')::integer, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, (tempWarehouseJson ->> 'TempQuantity')::float, 0) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId')::integer and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "In" = (coalesce ("10083_10833"."StockItemBalance"."In") - (tempWarehouseJson ->> 'TempQuantity')::float)::float; update "10083_10833"."StockItemBalance" set "In" =(coalesce("10083_10833"."StockItemBalance"."In" , 0) + coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT where "StockItemId" = ( tempJson->>'StockItemId' ) ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'TempWareHouseId')::integer; else insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out") values ( (tempJson->>'StockItemId')::integer, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer , (tempWarehouseJson ->> 'TempQuantity')::float, 0) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId')::integer and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "In" = (coalesce ("10083_10833"."StockItemBalance"."In") - (tempWarehouseJson ->> 'TempQuantity')::float)::float; end if; end if; end if; end loop; end if; end if; end loop; end if; updateAutoNumber := (purchaseReturn_data->>'UpdateAutoNumber') ::boolean ; if (updateAutoNumber = true ) then update "10083_10833"."AutoNumbering" set "StartingNumber" = "StartingNumber" + 1 where "TemplateId" = (purchaseReturn_data->>'TemplateId')::integer; end if; if exists ( select "Date" from "10083_10833"."LastDocumentDate") then update "10083_10833"."LastDocumentDate" set "Date" = (purchaseReturn_data->>'Date')::date, "UpdatedOn" = (CURRENT_TIMESTAMP)::date where "Date" < (purchaseReturn_data->>'Date')::date; else insert into "10083_10833"."LastDocumentDate" ( "Date", "UpdatedOn") values( (purchaseReturn_data ->> 'Date')::date , (CURRENT_TIMESTAMP)::date ); end if; end; $$;


ALTER PROCEDURE "10083_10833".purchasereturn_update_add(IN purchasereturn_data jsonb, OUT purchasereturn_id integer) OWNER TO "10083";

--
-- TOC entry 2356 (class 1255 OID 187214)
-- Name: quotation_update_add(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".quotation_update_add(IN quotation_data jsonb, OUT quotation_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; flag char(1); temp_id integer; item_count integer; other_charges_count integer; quotation_item_id integer; customer_data record; temp_Customer_Id integer; updateAutoNumber boolean; begin quotation_id := (quotation_data->>'QuotationId') ::integer; flag := (quotation_data->>'Flag'); if flag = 'U' then update "10083_10833"."Quotation" set "QuotationNumber" = quotation_data->>'QuotationNumber', "Date" = (quotation_data->>'Date')::date, "ValidTillDate" = (quotation_data->>'ValidTillDate')::date, "FinancialYear" = (quotation_data->>'FinancialYear')::integer, "TemplateId" = (quotation_data->>'TemplateId')::integer, "DocumentName" = quotation_data->>'DocumentName', "CustomerId" = (quotation_data->>'CustomerId')::integer, "TermAndConditionId" = (quotation_data->>'TermAndConditionId')::integer, "TermAndConditionText" = quotation_data->>'TermAndConditionText', "CurrencyId" = (quotation_data->>'CurrencyId')::integer, "SalesPersonId" = (quotation_data->>'SalesPersonId')::integer, "ExchangeRate" = (quotation_data->>'ExchangeRate')::float where "Quotation"."QuotationId" = quotation_id; elseif flag = 'A' then insert into "10083_10833"."Quotation" ( "Date", "ValidTillDate", "FinancialYear", "QuotationNumber", "TemplateId", "DocumentName", "CustomerId", "TermAndConditionId", "TermAndConditionText", "DocumentStatus", "CurrencyId", "SalesPersonId", "ExchangeRate" ) values( (quotation_data->>'Date')::date, (quotation_data->>'ValidTillDate')::date, (quotation_data->>'FinancialYear')::integer, (quotation_data->>'QuotationNumber'), (quotation_data->>'TemplateId')::integer, (quotation_data->>'DocumentName'), (quotation_data->>'CustomerId')::integer, (quotation_data->>'TermAndConditionId')::integer, (quotation_data->>'TermAndConditionText'), (coalesce((quotation_data->>'DocumentStatus')::integer, 1)::integer), (quotation_data->>'CurrencyId')::integer, (quotation_data->>'SalesPersonId')::integer, (quotation_data->>'ExchangeRate')::float ) returning "QuotationId" into quotation_id; end if; flag := ''; tempJson := (quotation_data ->> 'QuotationTo'); if tempJson is not null then if flag <> 'D' and (tempJson ->> 'MapFromMaster')::boolean is true and tempJson ->> 'CustomerBillingAddressId' is not null then select "Address", "City", "StateCode", "StateName", "Pincode" , "CountryCode", "CountryName" from "10083_10833"."CustomerBillingAddress" where "CustomerBillingAddressId" = (tempJson ->> 'CustomerBillingAddressId')::integer into customer_data; tempJson := jsonb_set(tempJson, '{Address}', to_jsonb(coalesce(customer_data."Address", ''))); tempJson := jsonb_set(tempJson, '{City}', to_jsonb(coalesce(customer_data."City", ''))); tempJson := jsonb_set(tempJson, '{StateCode}', to_jsonb(coalesce(customer_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{StateName}', to_jsonb(coalesce(customer_data."StateName", ''))); tempJson := jsonb_set(tempJson, '{PinZipCode}', to_jsonb(coalesce(customer_data."Pincode", ''))); tempJson := jsonb_set(tempJson, '{CountryCode}', to_jsonb(coalesce(customer_data."CountryCode", ''))); tempJson := jsonb_set(tempJson, '{CountryName}', to_jsonb(coalesce(customer_data."CountryName", ''))); end if; flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'QuotationToId'); if flag = 'D' then delete from "10083_10833"."QuotationTo" sbt where sbt."QuotationToId" = temp_id; elseif flag = 'U' then update "10083_10833"."QuotationTo" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName', "GSTIN" = tempJson->> 'GSTIN' where "QuotationToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."QuotationTo" ( "QuotationId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "GSTIN") values ( (quotation_id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'GSTIN')); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (quotation_data ->> 'QuotationValueDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'QuotationValueDetailsId'); if flag = 'D' then delete from "10083_10833"."QuotationValueDetails" svd where svd."QuotationValueDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."QuotationValueDetails" set "AssessableValue" =(tempJson ->> 'AssessableValue')::float, "IGSTValue" =(tempJson ->> 'IGSTValue')::float, "CGSTValue" =(tempJson ->> 'CGSTValue')::float, "SGSTValue" =(tempJson ->> 'SGSTValue')::float, "CessValue" =(tempJson ->> 'CessValue')::float, "StateCessValue" =(tempJson ->> 'StateCessValue')::float, "TotalInvoiceValue" =(tempJson ->> 'TotalInvoiceValue')::float, "RoundOffAmount" =(tempJson ->> 'RoundOffAmount')::float, "TotalInvValForeignCurrency" =(tempJson ->> 'TotalInvValForeignCurrency')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharge" =(tempJson ->> 'OtherCharge')::float, "OtherChargeTaxable" =(tempJson ->> 'OtherChargeTaxable')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float where "QuotationValueDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."QuotationValueDetails" ( "QuotationId", "AssessableValue", "IGSTValue", "CGSTValue", "SGSTValue", "CessValue", "StateCessValue", "TotalInvoiceValue", "RoundOffAmount", "TotalInvValForeignCurrency", "Discount", "OtherCharge", "OtherChargeTaxable", "SubTotal") values ( quotation_id, (tempJson ->> 'AssessableValue')::float, (tempJson ->> 'IGSTValue')::float, (tempJson ->> 'CGSTValue')::float, (tempJson ->> 'SGSTValue')::float, (tempJson ->> 'CessValue')::float, (tempJson ->> 'StateCessValue')::float, (tempJson ->> 'TotalInvoiceValue')::float, (tempJson ->> 'RoundOffAmount')::float, (tempJson ->> 'TotalInvValForeignCurrency')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharge')::float, (tempJson ->> 'OtherChargeTaxable')::float, (tempJson ->> 'SubTotal')::float ); end if; end if; flag := ''; tempJson := null; temp_id := 0; other_charges_count := jsonb_array_length((quotation_data ->> 'QuotationOtherCharges')::jsonb); if other_charges_count > 0 then for i in 0.. other_charges_count-1 loop tempJson = (quotation_data ->> 'QuotationOtherCharges')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'QuotationOtherChargeId')::integer; if flag = 'D' then delete from "10083_10833"."QuotationOtherCharges" soc where soc."QuotationOtherChargeId" = temp_id; elseif flag = 'U' then update "10083_10833"."QuotationOtherCharges" set "OtherChargeId" =(tempJson ->> 'OtherChargeId')::integer, "GSTRateCode" =(tempJson ->> 'GSTRateCode')::float, "GSTRateName" =(tempJson ->> 'GSTRateName')::float, "Amount" =(tempJson ->> 'Amount')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "IGST" =(tempJson ->> 'IGST')::float, "HSN" =(tempJson ->> 'HSN'), "TaxableCode" =(tempJson ->>'TaxableCode')::integer, "TaxableName" =(tempJson ->>'TaxableName'), "AppropriateCode" =(tempJson ->>'AppropriateCode')::integer, "AppropriateName" =(tempJson ->>'AppropriateName'), "Name" =(tempJson ->>'Name') where "QuotationOtherChargeId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."QuotationOtherCharges" ( "QuotationId", "OtherChargeId", "GSTRateCode", "GSTRateName", "Amount", "CGST", "SGST", "IGST", "HSN", "TaxableCode", "TaxableName", "AppropriateCode", "AppropriateName", "Name") values( quotation_id, (tempJson ->> 'OtherChargeId')::integer, (tempJson ->> 'GSTRateCode')::float, (tempJson ->> 'GSTRateName')::float, (tempJson ->> 'Amount')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'HSN'), (tempJson ->> 'TaxableCode')::integer, (tempJson ->> 'TaxableName'), (tempJson ->> 'AppropriateCode')::integer, (tempJson ->> 'AppropriateName'), (tempJson ->>'Name')); end if; end if; end loop; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((quotation_data ->> 'QuotationItems')::jsonb); if item_count > 0 then for i in 0.. item_count-1 loop tempJson := (quotation_data ->> 'QuotationItems')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'QuotationItemsId'); if flag = 'D' then delete from "10083_10833"."QuotationItems" si where si."QuotationItemsId" = temp_id; elseif flag = 'U' then update "10083_10833"."QuotationItems" set "StockItemId" =(tempJson ->> 'StockItemId')::integer, "ItemName" =(tempJson ->> 'ItemName'), "ItemSerialNumber" =(tempJson ->> 'ItemSerialNumber')::integer, "ItemCode" =(tempJson ->> 'ItemCode')::integer, "ItemDescription" =(tempJson ->> 'ItemDescription'), "HSNSAC" =(tempJson ->> 'HSNSAC'), "Quantity" =(tempJson ->> 'Quantity')::float, "UnitPrice" =(tempJson ->> 'UnitPrice')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharges" =(tempJson ->> 'OtherCharges')::float, "TaxableValue" =(tempJson ->> 'TaxableValue')::float, "GstRate" =(tempJson ->> 'GstRate')::float, "CessRate" =(tempJson ->> 'CessRate')::float, "StateCessRateCode" =(tempJson ->> 'StateCessRateCode')::float, "StateCessRateName" =(tempJson ->> 'StateCessRateName')::integer, "IGST" =(tempJson ->> 'IGST')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "Cess" =(tempJson ->> 'Cess')::float, "StateCess" =(tempJson ->> 'StateCess')::float, "CessNonAdvolRateCode" =(tempJson ->> 'CessNonAdvolRateCode')::float, "CessNonAdvolRateName" =(tempJson ->> 'CessNonAdvolRateName')::float, "CessNonAdvolUnit" =(tempJson ->> 'CessNonAdvolUnit')::float, "StateCessNonAdvolRateCode" =(tempJson ->> 'StateCessNonAdvolRateCode')::float, "StateCessNonAdvolRateName" =(tempJson ->> 'StateCessNonAdvolRateName')::float, "StateCessNonAdvolUnit" =(tempJson ->> 'StateCessNonAdvolUnit')::float, "CessNonAdvol" =(tempJson ->> 'CessNonAdvol')::float, "StateCessNonAdvol" =(tempJson ->> 'StateCessNonAdvol')::float, "TotalItemValue" =(tempJson ->> 'TotalItemValue')::float, "TaxabilityCode" = (tempJson ->> 'TaxabilityCode'):: integer, "TaxabilityName" = (tempJson ->> 'TaxabilityName'), "DiscountRate" =(tempJson ->> 'DiscountRate')::float where "QuotationItemsId" = temp_id; quotation_item_id := temp_id; elseif flag = 'A' then insert into "10083_10833"."QuotationItems" ( "QuotationId", "StockItemId", "ItemName", "ItemSerialNumber", "ItemCode", "ItemDescription", "HSNSAC", "Quantity", "UnitPrice", "SubTotal", "Discount", "OtherCharges", "TaxableValue", "GstRate", "CessRate", "StateCessRateCode", "StateCessRateName", "IGST", "CGST", "SGST", "Cess", "StateCess", "CessNonAdvolRateCode", "CessNonAdvolRateName", "CessNonAdvolUnit", "StateCessNonAdvolRateCode", "StateCessNonAdvolRateName", "StateCessNonAdvolUnit", "CessNonAdvol", "StateCessNonAdvol", "TotalItemValue", "TaxabilityCode", "TaxabilityName", "DiscountRate" ) values ( quotation_id, (tempJson ->> 'StockItemId')::integer, (tempJson ->> 'ItemName'), (tempJson ->> 'ItemSerialNumber')::integer, (tempJson ->> 'ItemCode')::integer, (tempJson ->> 'ItemDescription'), (tempJson ->> 'HSNSAC'), (tempJson ->> 'Quantity')::float, (tempJson ->> 'UnitPrice')::float, (tempJson ->> 'SubTotal')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharges')::float, (tempJson ->> 'TaxableValue')::float, (tempJson ->> 'GstRate')::float, (tempJson ->> 'CessRate')::float, (tempJson ->> 'StateCessRateCode')::float, (tempJson ->> 'StateCessRateName')::integer, (tempJson ->> 'IGST')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'Cess')::float, (tempJson ->> 'StateCess')::float, (tempJson ->> 'CessNonAdvolRateCode')::float, (tempJson ->> 'CessNonAdvolRateName')::float, (tempJson ->> 'CessNonAdvolUnit')::float, (tempJson ->> 'StateCessNonAdvolRateCode')::float, (tempJson ->> 'StateCessNonAdvolRateName')::float, (tempJson ->> 'StateCessNonAdvolUnit')::float, (tempJson ->> 'CessNonAdvol')::float, (tempJson ->> 'StateCessNonAdvol')::float, (tempJson ->> 'TotalItemValue')::float, (tempJson ->> 'TaxabilityCode'):: integer, (tempJson ->> 'TaxabilityName'), (tempJson ->> 'DiscountRate')::float ) returning "QuotationItemsId" into quotation_item_id; end if; end if; end loop; end if; updateAutoNumber := (quotation_data->>'UpdateAutoNumber') ::boolean ; if (updateAutoNumber = true ) then update "10083_10833"."AutoNumbering" set "StartingNumber" = "StartingNumber" + 1 where "TemplateId" = (quotation_data->>'TemplateId')::integer; end if; end; $$;


ALTER PROCEDURE "10083_10833".quotation_update_add(IN quotation_data jsonb, OUT quotation_id integer) OWNER TO "10083";

--
-- TOC entry 2343 (class 1255 OID 186204)
-- Name: receiptnote_update_add(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".receiptnote_update_add(IN receiptnote_data jsonb, OUT receiptnote_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; flag char(1); temp_id integer; item_count integer; receiptNote_item_id integer; begin receiptNote_id := (receiptNote_data->>'ReceiptNoteId') ::integer; flag := (receiptNote_data->>'Flag'); if flag = 'U' then update "10083_10833"."ReceiptNote" set "Number" = (receiptNote_data->>'Number'), "Date" = (receiptNote_data->>'Date')::date, "FinancialYear" = (receiptNote_data->>'FinancialYear')::integer, "TemplateId" = (receiptNote_data->>'TemplateId')::integer, "CustomerId" = (receiptNote_data->>'CustomerId')::integer, "DocumentName" = (receiptNote_data->>'DocumentName') where "ReceiptNote"."ReceiptNoteId" = receiptNote_id; elseif flag = 'A' then insert into "10083_10833"."ReceiptNote" ( "Number", "Date", "FinancialYear", "TemplateId", "CustomerId", "DocumentName" ) values( (receiptNote_data->>'Number'), (receiptNote_data->>'Date')::date, (receiptNote_data->>'FinancialYear')::integer, (receiptNote_data->>'TemplateId')::integer, (receiptNote_data->>'CustomerId')::integer, (receiptNote_data->>'DocumentName') ) returning "ReceiptNoteId" into receiptNote_id; end if; flag := ''; tempJson := (receiptNote_data ->> 'ReceiptNoteBillTo'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'ReceiptNoteBillToId'); if flag = 'D' then delete from "10083_10833"."ReceiptNoteBillTo" rnbt where rnbt."ReceiptNoteBillToId" = temp_id; elseif flag = 'U' then update "10083_10833"."ReceiptNoteBillTo" set "MailingName" = (tempJson->> 'MailingName'), "Address" = (tempJson->> 'Address'), "City" = (tempJson->> 'City'), "StateCode" = (tempJson->> 'StateCode'), "StateName" = (tempJson->> 'StateName'), "PinZipCode" = (tempJson->> 'PinZipCode'), "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = (tempJson->> 'CountryName'), "POSCode" = (tempJson->> 'POSCode'), "POSName" = (tempJson->> 'POSName') where "ReceiptNoteBillToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."ReceiptNoteBillTo" ( "ReceiptNoteId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "POSCode", "POSName" ) values ( (receiptNote_id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'POSCode'), (tempJson->> 'POSName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (receiptNote_data ->> 'ReceiptNoteShipTo'); if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'ReceiptNoteShipToId'); if flag = 'D' then delete from "10083_10833"."ReceiptNoteShipTo" rnst where rnst."ReceiptNoteShipToId" = temp_id; elseif flag = 'U' then update "10083_10833"."ReceiptNoteShipTo" set "MailingName" = (tempJson->> 'MailingName'), "Address1" = (tempJson->> 'Address1'), "Address2" = (tempJson->> 'Address2'), "City" = (tempJson->> 'City'), "StateCode" = (tempJson->> 'StateCode'), "StateName" = (tempJson->> 'StateName'), "PinZipCode" = (tempJson->> 'PinZipCode'), "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = (tempJson->> 'CountryName') where "ReceiptNoteShipToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."ReceiptNoteShipTo" ( "ReceiptNoteId", "MailingName", "Address1", "Address2", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName" ) values ( (receiptNote_id), (tempJson->> 'MailingName'), (tempJson->> 'Address1'), (tempJson->> 'Address2'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (receiptNote_data ->> 'ReceiptNoteDispatchFrom'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'ReceiptNoteDispatchFromId'); if flag = 'D' then delete from "10083_10833"."ReceiptNoteDispatchFrom" rndf where rndf."ReceiptNoteDispatchFromId" = temp_id; elseif flag = 'U' then update "10083_10833"."ReceiptNoteDispatchFrom" set "MailingName" = (tempJson ->> 'MailingName'), "Address1" = (tempJson ->> 'Address1'), "Address2" = (tempJson ->> 'Address2'), "City" = (tempJson ->> 'City'), "StateCode" = (tempJson ->> 'StateCode'), "StateName" = (tempJson ->> 'StateName') , "PinZipCode" = (tempJson ->> 'PinZipCode') , "CountryCode" = (tempJson ->> 'CountryCode') , "CountryName" = (tempJson ->> 'CountryName') where "ReceiptNoteDispatchFromId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."ReceiptNoteDispatchFrom" ( "ReceiptNoteId", "MailingName", "Address1", "Address2", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName" ) values ( receiptNote_id, (tempJson ->> 'MailingName'), (tempJson ->> 'Address1'), (tempJson ->> 'Address2'), (tempJson ->> 'City'), (tempJson ->> 'StateCode'), ( tempJson ->> 'StateName'), (tempJson ->> 'PinZipCode'), (tempJson ->> 'CountryCode'), (tempJson ->> 'CountryName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (receiptNote_data ->> 'ReceiptNoteExportDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'ReceiptNoteExportDetailsId'); if flag = 'D' then delete from "10083_10833"."ReceiptNoteExportDetails" rned where rned."ReceiptNoteExportDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."ReceiptNoteExportDetails" set "ShippingBillNumber" = tempJson ->> 'ShippingBillNumber', "ShippingBillDate" = (tempJson ->> 'ShippingBillDate')::date, "PortCode" = tempJson ->> 'PortCode', "PortName" = tempJson ->> 'PortName', "ForeignCurrency" = (tempJson ->> 'ForeignCurrency'), "CountryCode" = tempJson ->> 'CountryCode', "CountryName" = tempJson ->> 'CountryName', "RefundClaim" = (tempJson ->> 'RefundClaim')::boolean, "ExportDuty" = (tempJson ->> 'ExportDuty')::float, "DispatchThrough" = tempJson ->> 'DispatchThrough', "VehicleNumber" = tempJson ->> 'VehicleNumber', "ExchangeRate" =(tempJson ->> 'ExchangeRate')::float, "DestinationPortCode" = tempJson ->> 'DestinationPortCode', "DestinationPortName" = tempJson ->> 'DestinationPortName', "Destination" = tempJson ->> 'Destination', "LUTNumber" = tempJson ->> 'LUTNumber', "PlaceOfReceipt" = tempJson ->> 'PlaceOfReceipt' where "ReceiptNoteExportDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."ReceiptNoteExportDetails" ( "ReceiptNoteId", "ShippingBillNumber", "ShippingBillDate", "PortCode", "PortName", "ForeignCurrency", "CountryCode", "CountryName", "RefundClaim", "ExportDuty", "DispatchThrough", "VehicleNumber", "ExchangeRate", "DestinationPortCode", "DestinationPortName", "Destination", "LUTNumber", "PlaceOfReceipt" ) values ( receiptNote_id, (tempJson ->> 'ShippingBillNumber'), (tempJson ->> 'ShippingBillDate')::date, (tempJson ->> 'PortCode'), (tempJson ->> 'PortName'), (tempJson ->> 'ForeignCurrency'), (tempJson ->> 'CountryCode'), (tempJson ->> 'CountryName'), (tempJson ->> 'RefundClaim')::boolean, (tempJson ->> 'ExportDuty')::float, (tempJson ->> 'DispatchThrough'), (tempJson ->> 'VehicleNumber'), (tempJson ->> 'ExchangeRate')::float, (tempJson ->> 'DestinationPortCode'), (tempJson ->> 'DestinationPortName'), (tempJson ->> 'Destination'), (tempJson ->> 'LUTNumber'), (tempJson ->> 'PlaceOfReceipt') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (receiptNote_data ->> 'ReceiptNoteValueDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'ReceiptNoteValueDetailsId'); if flag = 'D' then delete from "10083_10833"."ReceiptNoteValueDetails" rnvd where rnvd."ReceiptNoteValueDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."ReceiptNoteValueDetails" set "AssessableValue" =(tempJson ->> 'AssessableValue')::float, "IGST" =(tempJson ->> 'IGST')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "Cess" =(tempJson ->> 'Cess')::float, "StateCess" =(tempJson ->> 'StateCess')::float, "InvoiceValue" =(tempJson ->> 'InvoiceValue')::float, "RoundOffAmount" =(tempJson ->> 'RoundOffAmount')::float, "InvoiceValueForeignCurrency" =(tempJson ->> 'InvoiceValueForeignCurrency')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharge" =(tempJson ->> 'OtherCharge')::float, "OtherChargeTaxable" =(tempJson ->> 'OtherChargeTaxable')::float, "TCSRate" =(tempJson ->> 'TCSRate')::float, "TCSAmount" =(tempJson ->> 'TCSAmount')::float where "ReceiptNoteValueDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."ReceiptNoteValueDetails" ( "ReceiptNoteId", "AssessableValue", "IGST", "CGST", "SGST", "Cess", "StateCess", "InvoiceValue", "RoundOffAmount", "InvoiceValueForeignCurrency", "Discount", "OtherCharge", "OtherChargeTaxable", "TCSRate", "TCSAmount" ) values ( receiptNote_id, (tempJson ->> 'AssessableValue')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'Cess')::float, (tempJson ->> 'StateCess')::float, (tempJson ->> 'InvoiceValue')::float, (tempJson ->> 'RoundOffAmount')::float, (tempJson ->> 'InvoiceValueForeignCurrency')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharge')::float, (tempJson ->> 'OtherChargeTaxable')::float, (tempJson ->> 'TCSRate')::float, (tempJson ->> 'TCSAmount')::float ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (receiptNote_data ->> 'ReceiptNoteDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'ReceiptNoteDetailsId'); if flag = 'D' then delete from "10083_10833"."ReceiptNoteDetails" rnd where rnd."ReceiptNoteDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."ReceiptNoteDetails" set "ModeTermsOfPayment" =(tempJson ->> 'ModeTermsOfPayment'), "TermsOfReceipt" =(tempJson ->> 'TermsOfReceipt'), "TermAndCondition" =(tempJson ->> 'TermAndCondition') where "ReceiptNoteDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."ReceiptNoteDetails" ( "ReceiptNoteId", "ModeTermsOfPayment", "TermsOfReceipt", "TermAndCondition" ) values ( receiptNote_id, (tempJson ->> 'ModeTermsOfPayment'), (tempJson ->> 'TermsOfReceipt'), (tempJson ->> 'TermAndCondition') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((receiptNote_data ->> 'ReceiptNoteItems')::jsonb); for i in 0.. item_count-1 loop tempJson = (receiptNote_data ->> 'ReceiptNoteItems')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'ReceiptNoteItemsId'); if flag = 'D' then delete from "10083_10833"."ReceiptNoteItems" rni where rni."ReceiptNoteItemsId" = temp_id; elseif flag = 'U' then update "10083_10833"."ReceiptNoteItems" set "StockItemId" =(tempJson ->> 'StockItemId')::integer, "ItemName" =(tempJson ->> 'ItemName'), "ItemSerialNumber" =(tempJson ->> 'ItemSerialNumber')::integer, "ItemCode" =(tempJson ->> 'ItemCode')::integer, "ItemDescription" =(tempJson ->> 'ItemDescription'), "HSNSAC" =(tempJson ->> 'HSNSAC')::integer, "BarCode" =(tempJson ->> 'BarCode'), "OrderQuantity" =(tempJson ->> 'OrderQuantity')::float, "BalanceQuantity" =(tempJson ->> 'BalanceQuantity')::float, "FreeQuantity" =(tempJson ->> 'FreeQuantity')::float, "UnitPrice" =(tempJson ->> 'UnitPrice')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharges" =(tempJson ->> 'OtherCharges')::float, "TaxableValue" =(tempJson ->> 'TaxableValue')::float, "GstRate" =(tempJson ->> 'GstRate')::float, "CessRate" =(tempJson ->> 'CessRate')::float, "StateCessRate" =(tempJson ->> 'StateCessRate')::float, "IGST" =(tempJson ->> 'IGST')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "Cess" =(tempJson ->> 'Cess')::float, "StateCess" =(tempJson ->> 'StateCess')::float, "CessNonAdvolRate" =(tempJson ->> 'CessNonAdvolRate')::float, "CessNonAdvolUnit" =(tempJson ->> 'CessNonAdvolUnit')::float, "StateCessNonAdvolRate" =(tempJson ->> 'StateCessNonAdvolRate')::float, "StateCessNonAdvolUnit" =(tempJson ->> 'StateCessNonAdvolUnit')::float, "CessNonAdvol" =(tempJson ->> 'CessNonAdvol')::float, "StateCessNonAdvol" =(tempJson ->> 'StateCessNonAdvol')::float, "TotalItemValue" =(tempJson ->> 'TotalItemValue')::float where "ReceiptNoteItemsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."ReceiptNoteItems" ( "ReceiptNoteId", "StockItemId", "ItemName", "ItemSerialNumber", "ItemCode", "ItemDescription", "HSNSAC", "BarCode", "OrderQuantity", "BalanceQuantity", "FreeQuantity", "UnitPrice", "SubTotal", "Discount", "OtherCharges", "TaxableValue", "GstRate", "CessRate", "StateCessRate", "IGST", "CGST", "SGST", "Cess", "StateCess", "CessNonAdvolRate", "CessNonAdvolUnit", "StateCessNonAdvolRate", "StateCessNonAdvolUnit", "CessNonAdvol", "StateCessNonAdvol", "TotalItemValue" ) values ( receiptNote_id, (tempJson ->> 'StockItemId')::integer, (tempJson ->> 'ItemName'), (tempJson ->> 'ItemSerialNumber')::integer, (tempJson ->> 'ItemCode')::integer, (tempJson ->> 'ItemDescription'), (tempJson ->> 'HSNSAC')::integer, (tempJson ->> 'BarCode'), (tempJson ->> 'OrderQuantity')::float, (tempJson ->> 'BalanceQuantity')::float, (tempJson ->> 'FreeQuantity')::float, (tempJson ->> 'UnitPrice')::float, (tempJson ->> 'SubTotal')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharges')::float, (tempJson ->> 'TaxableValue')::float, (tempJson ->> 'GstRate')::float, (tempJson ->> 'CessRate')::float, (tempJson ->> 'StateCessRate')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'Cess')::float, (tempJson ->> 'StateCess')::float, (tempJson ->> 'CessNonAdvolRate')::float, (tempJson ->> 'CessNonAdvolUnit')::float, (tempJson ->> 'StateCessNonAdvolRate')::float, (tempJson ->> 'StateCessNonAdvolUnit')::float, (tempJson ->> 'CessNonAdvol')::float, (tempJson ->> 'StateCessNonAdvol')::float, (tempJson ->> 'TotalItemValue')::float ) returning "ReceiptNoteItemsId" into receiptNote_item_id; end if; end if; if flag <> 'D' then flag := ''; temp_id := 0; tempJson := (tempJson ->> 'ReceiptNoteBatchDetails')::jsonb; flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'ReceiptNoteBatchDetailsId'); if flag = 'A' then insert into "10083_10833"."ReceiptNoteBatchDetails" ( "ReceiptNoteItemsId", "Name", "SerialNumber", "ExpiryDate", "ManufacturingDate" ) values ( receiptNote_item_id, (tempJson ->> 'Name'), (tempJson ->> 'SerialNumber')::integer, (tempJson ->> 'ExpiryDate')::date, (tempJson ->> 'ManufacturingDate')::date ); elseif flag = 'U' then update "10083_10833"."ReceiptNoteBatchDetails" set "ReceiptNoteItemsId" =(tempJson ->> 'ReceiptNoteItemsId')::integer, "Name" =(tempJson ->> 'Name'), "SerialNumber" =(tempJson ->> 'SerialNumber')::integer, "ExpiryDate" =(tempJson ->> 'ExpiryDate')::date, "ManufacturingDate" =(tempJson ->> 'ManufacturingDate')::date where "ReceiptNoteBatchDetailsId" = temp_id; end if; end if; end loop; end; $$;


ALTER PROCEDURE "10083_10833".receiptnote_update_add(IN receiptnote_data jsonb, OUT receiptnote_id integer) OWNER TO "10083";

--
-- TOC entry 2357 (class 1255 OID 186189)
-- Name: sales_update_add(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".sales_update_add(IN sales_data jsonb, OUT sale_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; flag char(1); temp_id integer; item_count integer; sales_item_wareHouse_count integer; other_charges_count integer; sale_item_id integer; customer_data record; updateAutoNumber boolean; stock_group_id integer; temp_WareHouse_Id integer; tempBatchJson jsonb; tempWarehouseJson jsonb; temp_Customer_Id integer; container_list_count integer; packing_list_count integer; begin sale_id := (sales_data->>'SaleId') ::integer; flag := (sales_data->>'Flag'); if flag = 'U' then update "10083_10833"."Sales" set "Number" = sales_data->>'Number', "Date" = (sales_data->>'Date')::date, "FinancialYear" = (sales_data->>'FinancialYear')::integer, "TemplateId" = (sales_data->>'TemplateId')::integer, "DocumentName" = sales_data->>'DocumentName', "CustomerId" = (sales_data->>'CustomerId')::integer, "ReverseCharge" = sales_data->>'ReverseCharge', "TermAndConditionId" = (sales_data->>'TermAndConditionId')::integer, "TermAndConditionText" = sales_data->>'TermAndConditionText', "Title" = sales_data->>'Title', "InvoiceRemark" = sales_data->>'InvoiceRemark', "EcomGSTIN" = sales_data->>'EcomGSTIN', "CurrencyId" = (sales_data->>'CurrencyId')::integer, "SalesPersonId" = (sales_data->>'SalesPersonId')::integer, "ExchangeRate" = (sales_data->>'ExchangeRate')::float, "InvoiceType" = (sales_data->>'InvoiceType') where "Sales"."SaleId" = sale_id; elseif flag = 'A' then insert into "10083_10833"."Sales" ( "Date", "FinancialYear", "Number", "TemplateId", "DocumentName", "CustomerId", "ReverseCharge", "TermAndConditionId", "TermAndConditionText", "Title", "InvoiceRemark", "EcomGSTIN", "DocumentStatus", "CurrencyId", "SalesPersonId", "ExchangeRate", "InvoiceType" ) values( (sales_data->>'Date')::date, (sales_data->>'FinancialYear')::integer, (sales_data->>'Number'), (sales_data->>'TemplateId')::integer, (sales_data->>'DocumentName'), (sales_data->>'CustomerId')::integer, (sales_data->>'ReverseCharge'), (sales_data->>'TermAndConditionId')::integer, (sales_data->>'TermAndConditionText'), (sales_data->>'Title'), (sales_data->>'InvoiceRemark'), (sales_data->>'EcomGSTIN'), (coalesce((sales_data->>'DocumentStatus')::integer, 1)::integer), (sales_data->>'CurrencyId')::integer, (sales_data->>'SalesPersonId')::integer, (sales_data->>'ExchangeRate')::float, (sales_data->>'InvoiceType') ) returning "SaleId" into sale_id; end if; flag := ''; tempJson := (sales_data ->> 'SalesBillTo'); if tempJson is not null then if flag <> 'D' and (tempJson ->> 'MapFromMaster')::boolean is true and tempJson ->> 'CustomerBillingAddressId' is not null then select "Address", "City", "StateCode", "StateName", "Pincode" , "CountryCode", "CountryName" from "10083_10833"."CustomerBillingAddress" where "CustomerBillingAddressId" = (tempJson ->> 'CustomerBillingAddressId')::integer into customer_data; tempJson := jsonb_set(tempJson, '{Address}', to_jsonb(coalesce(customer_data."Address", ''))); tempJson := jsonb_set(tempJson, '{City}', to_jsonb(coalesce(customer_data."City", ''))); tempJson := jsonb_set(tempJson, '{StateCode}', to_jsonb(coalesce(customer_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{StateName}', to_jsonb(coalesce(customer_data."StateName", ''))); tempJson := jsonb_set(tempJson, '{PinZipCode}', to_jsonb(coalesce(customer_data."Pincode", ''))); tempJson := jsonb_set(tempJson, '{CountryCode}', to_jsonb(coalesce(customer_data."CountryCode", ''))); tempJson := jsonb_set(tempJson, '{CountryName}', to_jsonb(coalesce(customer_data."CountryName", ''))); tempJson := jsonb_set(tempJson, '{POSCode}', to_jsonb(coalesce(customer_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{POSName}', to_jsonb(coalesce(customer_data."StateName", ''))); end if; flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesBillToId'); if flag = 'D' then delete from "10083_10833"."SalesBillTo" sbt where sbt."SalesBillToId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesBillTo" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName', "POSCode" = (tempJson->> 'POSCode'), "POSName" = tempJson->> 'POSName', "GSTIN" = tempJson->> 'GSTIN' where "SalesBillToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesBillTo" ( "SaleId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "POSCode", "POSName", "GSTIN") values ( (sale_id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'POSCode'), (tempJson->> 'POSName'), (tempJson->> 'GSTIN') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (sales_data ->> 'SalesShipTo'); if tempJson is not null then if flag <> 'D' and (tempJson ->> 'MapFromMaster')::boolean is true and tempJson ->> 'CustomerShippingAddressId' is not null then select "Address", "City", "StateCode", "StateName", "Pincode", "CountryCode", "CountryName" from "10083_10833"."CustomerShippingAddress" where "CustomerShippingAddressId" = (tempJson ->> 'CustomerShippingAddressId')::integer into customer_data; tempJson := jsonb_set(tempJson, '{Address}', to_jsonb(coalesce(customer_data."Address", ''))); tempJson := jsonb_set(tempJson, '{City}', to_jsonb(coalesce(customer_data."City", ''))); tempJson := jsonb_set(tempJson, '{StateCode}', to_jsonb(coalesce(customer_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{StateName}', to_jsonb(coalesce(customer_data."StateName", ''))); tempJson := jsonb_set(tempJson, '{PinZipCode}', to_jsonb(coalesce(customer_data."Pincode", ''))); tempJson := jsonb_set(tempJson, '{CountryCode}', to_jsonb(coalesce(customer_data."CountryCode", ''))); tempJson := jsonb_set(tempJson, '{CountryName}', to_jsonb(coalesce(customer_data."CountryName", ''))); end if; flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'SalesShipToId'); if flag = 'D' then delete from "10083_10833"."SalesShipTo" sst where sst."SalesShipToId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesShipTo" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName', "GSTIN" = tempJson->> 'GSTIN' where "SalesShipToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesShipTo" ( "SaleId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "GSTIN") values ( (sale_id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'GSTIN') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (sales_data ->> 'SalesDispatchDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesDispatchDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesDispatchDetails" sdd where sdd."SalesDispatchDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesDispatchDetails" set "MailingName" = tempJson ->> 'MailingName', "Address" = tempJson ->> 'Address', "City" = tempJson ->> 'City', "StateCode" = (tempJson ->> 'StateCode'), "StateName" = tempJson ->> 'StateName', "PinZipCode" = tempJson ->> 'PinZipCode', "CountryCode" = tempJson ->> 'CountryCode', "CountryName" = tempJson ->> 'CountryName', "DispatchDocNo" = tempJson ->> 'DispatchDocNo', "DispatchedThrough" = tempJson ->> 'DispatchedThrough', "Destination" = tempJson ->> 'Destination', "CarrierNameAgent" = tempJson ->> 'CarrierNameAgent', "BillOfLandingLrRrNo" = tempJson ->> 'BillOfLandingLrRrNo', "Date" = (tempJson ->> 'Date')::date, "MotorVehicleNo" = tempJson ->> 'MotorVehicleNo' where "SalesDispatchDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesDispatchDetails" ( "SaleId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "DispatchDocNo", "DispatchedThrough", "Destination", "CarrierNameAgent", "BillOfLandingLrRrNo", "Date", "MotorVehicleNo") values ( sale_id, tempJson ->> 'MailingName', tempJson ->> 'Address', tempJson ->> 'City', (tempJson ->> 'StateCode'), tempJson ->> 'StateName', tempJson ->> 'PinZipCode', tempJson ->> 'CountryCode', tempJson ->> 'CountryName', tempJson ->> 'DispatchDocNo', tempJson ->> 'DispatchedThrough', tempJson ->> 'Destination', tempJson ->> 'CarrierNameAgent', tempJson ->> 'BillOfLandingLrRrNo', (tempJson ->> 'Date')::date, tempJson ->> 'MotorVehicleNo' ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (sales_data ->> 'SalesExportDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesExportDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesExportDetails" sed where sed."SalesExportDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesExportDetails" set "ShippingBillNumber" = tempJson ->> 'ShippingBillNumber', "ShippingBillDate" = (tempJson ->> 'ShippingBillDate')::date, "PortCode" = tempJson ->> 'PortCode', "PortName" = tempJson ->> 'PortName', "CountryCode" = tempJson ->> 'CountryCode', "CountryName" = tempJson ->> 'CountryName', "RefundClaim" = (tempJson ->> 'RefundClaim')::boolean, "ExportDuty" = (tempJson ->> 'ExportDuty')::float, "DispatchThrough" = tempJson ->> 'DispatchThrough', "VesselFlightNo" = tempJson ->> 'VesselFlightNo', "DestinationPortCode" = tempJson ->> 'DestinationPortCode', "DestinationPortName" = tempJson ->> 'DestinationPortName', "Destination" = tempJson ->> 'Destination', "LUTMasterId" = (tempJson ->> 'LUTMasterId')::integer, "LUTNumber" = tempJson ->> 'LUTNumber', "PlaceOfReceiptByShipper" = tempJson ->> 'PlaceOfReceiptByShipper', "PortOfLoadingCode" = tempJson ->> 'PortOfLoadingCode', "PortOfLoadingName" = tempJson ->> 'PortOfLoadingName', "PortOfDischargeCode" = tempJson ->> 'PortOfDischargeCode', "PortOfDischargeName" = tempJson ->> 'PortOfDischargeName' where "SalesExportDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesExportDetails" ( "SaleId", "ShippingBillNumber", "ShippingBillDate", "PortCode", "PortName", "CountryCode", "CountryName", "RefundClaim", "ExportDuty", "DispatchThrough", "VesselFlightNo", "DestinationPortCode", "DestinationPortName", "Destination", "LUTMasterId", "LUTNumber", "PlaceOfReceiptByShipper", "PortOfLoadingCode", "PortOfLoadingName", "PortOfDischargeCode", "PortOfDischargeName" ) values ( sale_id, tempJson ->> 'ShippingBillNumber', (tempJson ->> 'ShippingBillDate')::date, tempJson ->> 'PortCode', tempJson ->> 'PortName', tempJson ->> 'CountryCode', tempJson ->> 'CountryName', (tempJson ->> 'RefundClaim')::boolean, (tempJson ->> 'ExportDuty')::float, tempJson ->> 'DispatchThrough', tempJson ->> 'VesselFlightNo', tempJson ->> 'DestinationPortCode', tempJson ->> 'DestinationPortName', tempJson ->> 'Destination', (tempJson ->> 'LUTMasterId')::integer, tempJson ->> 'LUTNumber', tempJson ->> 'PlaceOfReceiptByShipper', tempJson ->> 'PortOfLoadingCode', tempJson ->> 'PortOfLoadingName', tempJson ->> 'PortOfDischargeCode', tempJson ->> 'PortOfDischargeName'); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (sales_data ->> 'SalesValueDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesValueDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesValueDetails" svd where svd."SalesValueDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesValueDetails" set "AssessableValue" =(tempJson ->> 'AssessableValue')::float, "IGSTValue" =(tempJson ->> 'IGSTValue')::float, "CGSTValue" =(tempJson ->> 'CGSTValue')::float, "SGSTValue" =(tempJson ->> 'SGSTValue')::float, "CessValue" =(tempJson ->> 'CessValue')::float, "StateCessValue" =(tempJson ->> 'StateCessValue')::float, "TotalInvoiceValue" =(tempJson ->> 'TotalInvoiceValue')::float, "RoundOffAmount" =(tempJson ->> 'RoundOffAmount')::float, "TotalInvValForeignCurrency" =(tempJson ->> 'TotalInvValForeignCurrency')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharge" =(tempJson ->> 'OtherCharge')::float, "OtherChargeTaxable" =(tempJson ->> 'OtherChargeTaxable')::float, "TCSRate" =(tempJson ->> 'TCSRate')::float, "InvoiceValueWithoutTCS" =(tempJson ->> 'InvoiceValueWithoutTCS')::float, "TCSAmount" =(tempJson ->> 'TCSAmount')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float, "DiscountBeforeTax" =(tempJson ->> 'DiscountBeforeTax')::float where "SalesValueDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesValueDetails" ( "SaleId", "AssessableValue", "IGSTValue", "CGSTValue", "SGSTValue", "CessValue", "StateCessValue", "TotalInvoiceValue", "RoundOffAmount", "TotalInvValForeignCurrency", "Discount", "OtherCharge", "OtherChargeTaxable", "TCSRate", "InvoiceValueWithoutTCS", "TCSAmount", "SubTotal", "DiscountBeforeTax" ) values ( sale_id, (tempJson ->> 'AssessableValue')::float, (tempJson ->> 'IGSTValue')::float, (tempJson ->> 'CGSTValue')::float, (tempJson ->> 'SGSTValue')::float, (tempJson ->> 'CessValue')::float, (tempJson ->> 'StateCessValue')::float, (tempJson ->> 'TotalInvoiceValue')::float, (tempJson ->> 'RoundOffAmount')::float, (tempJson ->> 'TotalInvValForeignCurrency')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharge')::float, (tempJson ->> 'OtherChargeTaxable')::float, (tempJson ->> 'TCSRate')::float, (tempJson ->> 'InvoiceValueWithoutTCS')::float, (tempJson ->> 'TCSAmount')::float, (tempJson ->> 'SubTotal')::float,(tempJson ->> 'DiscountBeforeTax')::float ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (sales_data ->> 'SalesEwayBillsDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesEwayBillsDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesEwayBillsDetails" sod where sod."SalesEwayBillsDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesEwayBillsDetails" set "GSTIN" = (tempJson->> 'GSTIN'), "TransportersId" = (tempJson->> 'TransportersId')::integer, "TransporterName" = (tempJson->> 'TransporterName'), "TransportModeCode" = (tempJson->> 'TransportModeCode')::integer, "TransportModeName" = (tempJson->> 'TransportModeName'), "Distance" = (tempJson->> 'Distance'), "TransportDocumentNumber" = (tempJson->> 'TransportDocumentNumber'), "TransportDocumentDate" = (tempJson->> 'TransportDocumentDate')::date, "VehicleNumber" = (tempJson->> 'VehicleNumber'), "VehicleTypeCode" = (tempJson->> 'VehicleTypeCode'), "VehicleTypeName" = (tempJson->> 'VehicleTypeName'), "EwayBillNumber" = (tempJson->> 'EwayBillNumber'), "EwayBillDate" = (tempJson->> 'EwayBillDate')::date, "DispatchFrom" = (tempJson->> 'DispatchFrom'), "ShipTo" = (tempJson->> 'ShipTo'), "ValidUpTo" =(tempJson->> 'ValidUpTo')::date, "EwayStatus" =(tempJson->> 'EwayStatus') where "SalesEwayBillsDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesEwayBillsDetails" ( "SaleId", "GSTIN", "TransportersId", "TransporterName", "TransportModeCode", "TransportModeName", "Distance", "TransportDocumentNumber", "TransportDocumentDate", "VehicleNumber", "VehicleTypeCode", "VehicleTypeName", "EwayBillNumber", "EwayBillDate", "DispatchFrom", "ShipTo", "ValidUpTo", "EwayStatus" ) values ( sale_id, (tempJson->> 'GSTIN'), (tempJson->> 'TransportersId')::integer, (tempJson->> 'TransporterName'), (tempJson->> 'TransportModeCode')::integer, (tempJson->> 'TransportModeName'), (tempJson->> 'Distance'), (tempJson->> 'TransportDocumentNumber'), (tempJson->> 'TransportDocumentDate')::date, (tempJson->> 'VehicleNumber'), (tempJson->> 'VehicleTypeCode'), (tempJson->> 'VehicleTypeName'), (tempJson->> 'EwayBillNumber'), (tempJson->> 'EwayBillDate')::date, (tempJson->> 'DispatchFrom'), (tempJson->> 'ShipTo'), (tempJson->> 'ValidUpTo')::date, (tempJson->> 'EwayStatus') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (sales_data ->> 'SalesOtherDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesOtherDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesOtherDetails" sod where sod."SalesOtherDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesOtherDetails" set "ModeTermsOfPayment" =(tempJson ->> 'ModeTermsOfPayment'), "TermsOfDelivery" =(tempJson ->> 'TermsOfDelivery'), "TermAndCondition" =(tempJson ->> 'TermAndCondition') where "SalesOtherDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesOtherDetails" ( "SaleId", "ModeTermsOfPayment", "TermsOfDelivery", "TermAndCondition" ) values ( sale_id, (tempJson ->> 'ModeTermsOfPayment'), (tempJson ->> 'TermsOfDelivery'), (tempJson ->> 'TermAndCondition') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; other_charges_count := jsonb_array_length((sales_data ->> 'SalesOtherCharges')::jsonb); if other_charges_count > 0 then for i in 0.. other_charges_count-1 loop tempJson = (sales_data ->> 'SalesOtherCharges')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesOtherChargeId')::integer; if flag = 'D' then delete from "10083_10833"."SalesOtherCharges" soc where soc."SalesOtherChargeId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesOtherCharges" set "OtherChargeId" =(tempJson ->> 'OtherChargeId')::integer, "GSTRateCode" =(tempJson ->> 'GSTRateCode')::float, "GSTRateName" =(tempJson ->> 'GSTRateName')::float, "Amount" =(tempJson ->> 'Amount')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "IGST" =(tempJson ->> 'IGST')::float, "HSN" =(tempJson ->> 'HSN'), "TaxableCode" =(tempJson ->>'TaxableCode')::integer, "TaxableName" =(tempJson ->>'TaxableName'), "AppropriateCode" =(tempJson ->>'AppropriateCode')::integer, "AppropriateName" =(tempJson ->>'AppropriateName'), "ForeignCurrencyPrice" = (tempJson ->> 'ForeignCurrencyPrice')::float, "Name" =(tempJson ->>'Name') where "SalesOtherChargeId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesOtherCharges" ( "SaleId", "OtherChargeId", "GSTRateCode", "GSTRateName", "Amount", "CGST", "SGST", "IGST", "HSN", "TaxableCode", "TaxableName", "AppropriateCode", "AppropriateName", "ForeignCurrencyPrice", "Name") values( sale_id, (tempJson ->> 'OtherChargeId')::integer, (tempJson ->> 'GSTRateCode')::float, (tempJson ->> 'GSTRateName')::float, (tempJson ->> 'Amount')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'HSN'), (tempJson ->> 'TaxableCode')::integer, (tempJson ->> 'TaxableName'), (tempJson ->> 'AppropriateCode')::integer, (tempJson ->> 'AppropriateName'), (tempJson ->> 'ForeignCurrencyPrice')::float, (tempJson ->>'Name')); end if; end if; end loop; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((sales_data ->> 'SalesItems')::jsonb); if item_count > 0 then for i in 0.. item_count-1 loop tempJson := (sales_data ->> 'SalesItems')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesItemsId'); if flag = 'D' then delete from "10083_10833"."SalesItems" si where si."SalesItemsId" = temp_id; insert into "10083_10833"."CustomerTurnOver" ( "CustomerId", "In", "Out") values ( (sales_data->>'CustomerId')::integer, (tempJson ->> 'TempTaxableValue')::float, 0) on conflict ("CustomerId") where "CustomerId" = ( sales_data->>'CustomerId' ) ::INTEGER do update set "In" = (coalesce ("10083_10833"."CustomerTurnOver"."In") - (tempJson ->> 'TempTaxableValue')::float)::float; elseif flag = 'U' then update "10083_10833"."SalesItems" set "StockItemId" =(tempJson ->> 'StockItemId')::integer, "ItemName" =(tempJson ->> 'ItemName'), "ItemSerialNumber" =(tempJson ->> 'ItemSerialNumber')::integer, "ItemCode" =(tempJson ->> 'ItemCode')::integer, "ItemDescription" =(tempJson ->> 'ItemDescription'), "HSNSAC" =(tempJson ->> 'HSNSAC'), "BarCode" =(tempJson ->> 'BarCode'), "Quantity" =(tempJson ->> 'Quantity')::float, "FreeQuantity" =(tempJson ->> 'FreeQuantity')::float, "UnitPrice" =(tempJson ->> 'UnitPrice')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharges" =(tempJson ->> 'OtherCharges')::float, "TaxableValue" =(tempJson ->> 'TaxableValue')::float, "GstRate" =(tempJson ->> 'GstRate')::float, "CessRate" =(tempJson ->> 'CessRate')::float, "StateCessRateCode" =(tempJson ->> 'StateCessRateCode')::float, "StateCessRateName" =(tempJson ->> 'StateCessRateName')::integer, "IGST" =(tempJson ->> 'IGST')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "Cess" =(tempJson ->> 'Cess')::float, "StateCess" =(tempJson ->> 'StateCess')::float, "CessNonAdvolRateCode" =(tempJson ->> 'CessNonAdvolRateCode')::float, "CessNonAdvolRateName" =(tempJson ->> 'CessNonAdvolRateName')::float, "CessNonAdvolUnit" =(tempJson ->> 'CessNonAdvolUnit')::float, "StateCessNonAdvolRateCode" =(tempJson ->> 'StateCessNonAdvolRateCode')::float, "StateCessNonAdvolRateName" =(tempJson ->> 'StateCessNonAdvolRateName')::float, "StateCessNonAdvolUnit" =(tempJson ->> 'StateCessNonAdvolUnit')::float, "CessNonAdvol" =(tempJson ->> 'CessNonAdvol')::float, "StateCessNonAdvol" =(tempJson ->> 'StateCessNonAdvol')::float, "TotalItemValue" =(tempJson ->> 'TotalItemValue')::float, "MarksContainerNo" =(tempJson ->> 'MarksContainerNo'), "NumberOfPackages" =(tempJson ->> 'NumberOfPackages')::float, "TaxabilityCode" = (tempJson ->> 'TaxabilityCode'):: integer, "TaxabilityName" = (tempJson ->> 'TaxabilityName'), "ForeignCurrencyPrice" = (tempJson ->> 'ForeignCurrencyPrice')::float, "UOMCode" = (tempJson ->> 'UOMCode'), "DiscountRate" = (tempJson ->> 'DiscountRate')::float, "PreTaxValue" = (tempJson ->> 'PreTaxValue')::float where "SalesItemsId" = temp_id; sale_item_id := temp_id; temp_Customer_Id := (sales_data->>'TempCustomerId') ::integer; if (sales_data ->> 'CustomerId')::integer <> temp_Customer_Id then insert into "10083_10833"."CustomerTurnOver" ( "CustomerId", "In", "Out") values ( (sales_data->>'CustomerId')::integer, (tempJson ->> 'TempTaxableValue')::float, 0) on conflict ("CustomerId") where "CustomerId" = (sales_data->>'CustomerId')::integer do update set "In" = (coalesce ("10083_10833"."CustomerTurnOver"."In") + (tempJson ->> 'TempTaxableValue')::float)::float; update "10083_10833"."CustomerTurnOver" set "In" =(coalesce("10083_10833"."CustomerTurnOver"."In" , 0) - coalesce((tempJson ->> 'TempTaxableValue')::FLOAT, 0))::FLOAT where "CustomerId" = ( sales_data->>'TempCustomerId' ) ::INTEGER; else insert into "10083_10833"."CustomerTurnOver" ( "CustomerId", "In", "Out") values ( (sales_data->>'CustomerId')::integer, (tempJson ->> 'TempTaxableValue')::float, 0) on conflict ("CustomerId") where "CustomerId" = (sales_data->>'CustomerId')::integer do update set "In" = (coalesce ("10083_10833"."CustomerTurnOver"."In") + (tempJson ->> 'TempTaxableValue')::float)::float; end if; elseif flag = 'A' then insert into "10083_10833"."SalesItems" ( "SaleId", "StockItemId", "ItemName", "ItemSerialNumber", "ItemCode", "ItemDescription", "HSNSAC", "BarCode", "Quantity", "FreeQuantity", "UnitPrice", "SubTotal", "Discount", "OtherCharges", "TaxableValue", "GstRate", "CessRate", "StateCessRateCode", "StateCessRateName", "IGST", "CGST", "SGST", "Cess", "StateCess", "CessNonAdvolRateCode", "CessNonAdvolRateName", "CessNonAdvolUnit", "StateCessNonAdvolRateCode", "StateCessNonAdvolRateName", "StateCessNonAdvolUnit", "CessNonAdvol", "StateCessNonAdvol", "TotalItemValue", "MarksContainerNo", "NumberOfPackages", "TaxabilityCode", "TaxabilityName", "ForeignCurrencyPrice", "UOMCode", "DiscountRate" , "PreTaxValue" ) values ( sale_id, (tempJson ->> 'StockItemId')::integer, (tempJson ->> 'ItemName'), (tempJson ->> 'ItemSerialNumber')::integer, (tempJson ->> 'ItemCode')::integer, (tempJson ->> 'ItemDescription'), (tempJson ->> 'HSNSAC'), (tempJson ->> 'BarCode'), (tempJson ->> 'Quantity')::float, (tempJson ->> 'FreeQuantity')::float, (tempJson ->> 'UnitPrice')::float, (tempJson ->> 'SubTotal')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharges')::float, (tempJson ->> 'TaxableValue')::float, (tempJson ->> 'GstRate')::float, (tempJson ->> 'CessRate')::float, (tempJson ->> 'StateCessRateCode')::float, (tempJson ->> 'StateCessRateName')::integer, (tempJson ->> 'IGST')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'Cess')::float, (tempJson ->> 'StateCess')::float, (tempJson ->> 'CessNonAdvolRateCode')::float, (tempJson ->> 'CessNonAdvolRateName')::float, (tempJson ->> 'CessNonAdvolUnit')::float, (tempJson ->> 'StateCessNonAdvolRateCode')::float, (tempJson ->> 'StateCessNonAdvolRateName')::float, (tempJson ->> 'StateCessNonAdvolUnit')::float, (tempJson ->> 'CessNonAdvol')::float, (tempJson ->> 'StateCessNonAdvol')::float, (tempJson ->> 'TotalItemValue')::float, (tempJson ->> 'MarksContainerNo'), (tempJson ->> 'NumberOfPackages')::float, (tempJson ->> 'TaxabilityCode'):: integer, (tempJson ->> 'TaxabilityName'), (tempJson ->> 'ForeignCurrencyPrice')::float, (tempJson ->> 'UOMCode'), (tempJson ->> 'DiscountRate')::float, (tempJson ->> 'PreTaxValue')::float ) returning "SalesItemsId" into sale_item_id; insert into "10083_10833"."CustomerTurnOver" ( "CustomerId", "In", "Out") values ( (sales_data->>'CustomerId')::integer, (tempJson ->> 'TempTaxableValue')::float, 0) on conflict ("CustomerId") where "CustomerId" = (sales_data->>'CustomerId')::integer do update set "In" = (coalesce ("10083_10833"."CustomerTurnOver"."In") + (tempJson ->> 'TempTaxableValue')::float)::float; end if; end if; if flag <> 'D' then flag := ''; temp_id := 0; tempBatchJson := (tempJson ->> 'SalesBatchDetails')::jsonb; flag := (tempBatchJson->> 'Flag'); temp_id := (tempBatchJson ->> 'SalesBatchDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesBatchDetails" sbd where sbd."SalesBatchDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesBatchDetails" ( "SalesItemsId", "Name", "SerialNumber", "ExpiryDate", "ManufacturingDate" ) values ( sale_item_id, (tempBatchJson ->> 'Name'), (tempBatchJson ->> 'SerialNumber')::integer, (tempBatchJson ->> 'ExpiryDate')::date, (tempBatchJson ->> 'ManufacturingDate')::date ); elseif flag = 'U' then update "10083_10833"."SalesBatchDetails" set "SalesItemsId" =(tempBatchJson ->> 'SalesItemsId')::integer, "Name" =(tempBatchJson ->> 'Name'), "SerialNumber" =(tempBatchJson ->> 'SerialNumber')::integer, "ExpiryDate" =(tempBatchJson ->> 'ExpiryDate')::date, "ManufacturingDate" =(tempBatchJson ->> 'ManufacturingDate')::date where "SalesBatchDetailsId" = temp_id; end if; end if; flag := ''; flag :=(tempJson ->> 'Flag'); if flag <> 'D' then flag := ''; temp_id := 0; sales_item_wareHouse_count := jsonb_array_length((tempJson ->> 'SalesItemWareHouse')::jsonb); if sales_item_wareHouse_count > 0 then for j in 0.. sales_item_wareHouse_count-1 loop tempWarehouseJson := (tempJson ->> 'SalesItemWareHouse')::jsonb->j; if tempWarehouseJson is not null then flag := (tempWarehouseJson ->> 'Flag'); temp_id = (tempWarehouseJson ->> 'SalesItemWareHouseId'); select "StockGroupId" from "10083_10833"."StockItem" where "StockItemId" = ( tempJson->>'StockItemId' )::INTEGER into stock_group_id ; if flag = 'D' then delete from "10083_10833"."SalesItemWareHouse" siwh where siwh."SalesItemWareHouseId" = temp_id; insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out" ) values ( ( tempJson->>'StockItemId' ) ::INTEGER, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, 0, (tempWarehouseJson ->> 'TempQuantity')::FLOAT ) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = ( tempJson->>'StockItemId' ) ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "Out" = (coalesce("10083_10833"."StockItemBalance"."Out" , 0) - coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT; elseif flag = 'A' then insert into "10083_10833"."SalesItemWareHouse" ( "SalesItemsId", "WareHouseId", "Quantity", "Rate", "Total" ) values (sale_item_id, (tempWarehouseJson ->> 'WareHouseId')::integer, coalesce((tempWarehouseJson ->> 'Quantity')::float, 0), (tempWarehouseJson ->> 'Rate')::float, (tempWarehouseJson ->> 'Total')::float ); insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out" ) values ( ( tempJson->>'StockItemId' ) ::INTEGER, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, 0, (tempWarehouseJson ->> 'TempQuantity')::FLOAT ) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = ( tempjson->>'StockItemId' ) ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "Out" = (coalesce("10083_10833"."StockItemBalance"."Out" , 0) + coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT; elseif flag = 'U' then update "10083_10833"."SalesItemWareHouse" set "SalesItemsId" =(tempWarehouseJson ->> 'SalesItemsId')::integer, "WareHouseId" =(tempWarehouseJson ->> 'WareHouseId')::integer, "Quantity" = coalesce((tempWarehouseJson ->> 'Quantity')::float, 0), "Rate" =(tempWarehouseJson ->> 'Rate')::float, "Total" =(tempWarehouseJson ->> 'Total')::float where "SalesItemWareHouseId" = temp_id; temp_WareHouse_Id := (tempWarehouseJson->>'TempWareHouseId') ::integer; if (tempWarehouseJson ->> 'WareHouseId')::integer <> temp_WareHouse_Id then insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out" ) values ( ( tempJson->>'StockItemId' ) ::INTEGER, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, 0, (tempWarehouseJson ->> 'TempQuantity')::FLOAT ) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId') ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "Out" = (coalesce("10083_10833"."StockItemBalance"."Out" , 0) + coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT; update "10083_10833"."StockItemBalance" set "Out" =(coalesce("10083_10833"."StockItemBalance"."Out" , 0) - coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT where "StockItemId" = ( tempJson->>'StockItemId' ) ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'TempWareHouseId')::integer; else insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out" ) values ( ( tempJson->>'StockItemId' ) ::INTEGER, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, 0, (tempWarehouseJson ->> 'TempQuantity')::FLOAT ) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId') ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "Out" = (coalesce("10083_10833"."StockItemBalance"."Out" , 0) + coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT; end if; end if; end if; end loop; end if; end if; end loop; end if; flag := ''; tempJson := null; temp_id := 0; container_list_count := jsonb_array_length((sales_data ->> 'SalesContainerList')::jsonb); if container_list_count > 0 then for i in 0.. container_list_count-1 loop tempJson = (sales_data ->> 'SalesContainerList')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesContainerListId')::integer; if flag = 'D' then delete from "10083_10833"."SalesContainerList" scl where scl."SalesContainerListId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesContainerList" set "ContainerNumber" =(tempJson ->> 'ContainerNumber'), "LinerSealNumber" =(tempJson ->> 'LinerSealNumber'), "OTSNumber" =(tempJson ->> 'OTSNumber'), "Quantity" =(tempJson ->> 'Quantity') where "SalesContainerListId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesContainerList" ( "SaleId", "ContainerNumber", "LinerSealNumber", "OTSNumber", "Quantity") values( sale_id, (tempJson ->> 'ContainerNumber'), (tempJson ->> 'LinerSealNumber'), (tempJson ->> 'OTSNumber'), (tempJson ->> 'Quantity') ); end if; end if; end loop; end if; flag := ''; tempJson := null; temp_id := 0; packing_list_count := jsonb_array_length((sales_data ->> 'SalesPackingList')::jsonb); if packing_list_count > 0 then for i in 0.. packing_list_count-1 loop tempJson = (sales_data ->> 'SalesPackingList')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesPackingListId')::integer; if flag = 'D' then delete from "10083_10833"."SalesPackingList" scl where scl."SalesPackingListId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesPackingList" set "NumberOfPackageUOM" =(tempJson ->> 'NumberOfPackageUOM'), "NetWeightOfEachPackageUOM" =(tempJson ->> 'NetWeightOfEachPackageUOM'), "TareWeightOfEachPackageUOM" =(tempJson ->> 'TareWeightOfEachPackageUOM'), "TareWeightOfEachPalletUOM" =(tempJson ->> 'TareWeightOfEachPalletUOM'), "TotalNumberOfPalletsUOM" =(tempJson ->> 'TotalNumberOfPalletsUOM'), "TotalGrossWeightUOM" =(tempJson ->> 'TotalGrossWeightUOM'), "TotalNetWeightUOM" =(tempJson ->> 'TotalNetWeightUOM'), "NetWeightOfEachPackage" =(tempJson ->> 'NetWeightOfEachPackage')::float, "NumberOfPackage" =(tempJson ->> 'NumberOfPackage')::float, "TareWeightOfEachPackage" =(tempJson ->> 'TareWeightOfEachPackage')::float, "TareWeightOfEachPallet" =(tempJson ->> 'TareWeightOfEachPallet')::float, "TotalGrossWeight" =(tempJson ->> 'TotalGrossWeight')::float, "TotalNetWeight" =(tempJson ->> 'TotalNetWeight')::float, "TotalNumberOfPallets" =(tempJson ->> 'TotalNumberOfPallets')::float where "SalesPackingListId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesPackingList" ( "SaleId", "NumberOfPackageUOM", "NetWeightOfEachPackageUOM", "TareWeightOfEachPackageUOM", "TareWeightOfEachPalletUOM", "TotalNumberOfPalletsUOM", "TotalGrossWeightUOM", "TotalNetWeightUOM", "NetWeightOfEachPackage", "NumberOfPackage", "TareWeightOfEachPackage", "TareWeightOfEachPallet", "TotalGrossWeight", "TotalNetWeight", "TotalNumberOfPallets" ) values( sale_id, (tempJson ->> 'NumberOfPackageUOM'), (tempJson ->> 'NetWeightOfEachPackageUOM'), (tempJson ->> 'TareWeightOfEachPackageUOM'), (tempJson ->> 'TareWeightOfEachPalletUOM'), (tempJson ->> 'TotalNumberOfPalletsUOM'), (tempJson ->> 'TotalGrossWeightUOM'), (tempJson ->> 'TotalNetWeightUOM'), (tempJson ->> 'NetWeightOfEachPackage')::float, (tempJson ->> 'NumberOfPackage')::float, (tempJson ->> 'TareWeightOfEachPackage')::float, (tempJson ->> 'TareWeightOfEachPallet')::float, (tempJson ->> 'TotalGrossWeight')::float, (tempJson ->> 'TotalNetWeight')::float, (tempJson ->> 'TotalNumberOfPallets')::float ); end if; end if; end loop; end if; updateAutoNumber := (sales_data->>'UpdateAutoNumber') ::boolean ; if (updateAutoNumber = true ) then update "10083_10833"."AutoNumbering" set "StartingNumber" = "StartingNumber" + 1 where "TemplateId" = (sales_data->>'TemplateId')::integer; end if; if exists ( select "Date" from "10083_10833"."LastDocumentDate") then update "10083_10833"."LastDocumentDate" set "Date" = (sales_data->>'Date')::date, "UpdatedOn" = (CURRENT_TIMESTAMP)::date where "Date" < (sales_data->>'Date')::date; else insert into "10083_10833"."LastDocumentDate" ( "Date", "UpdatedOn") values( (sales_data ->> 'Date')::date , (CURRENT_TIMESTAMP)::date ); end if; end; $$;


ALTER PROCEDURE "10083_10833".sales_update_add(IN sales_data jsonb, OUT sale_id integer) OWNER TO "10083";

--
-- TOC entry 2350 (class 1255 OID 186201)
-- Name: salesdebitnote_update_add(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".salesdebitnote_update_add(IN salesdebitnote_data jsonb, OUT saledebitnote_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; flag char(1); temp_id integer; item_count integer; saleDebitNote_item_id integer; other_charges_count integer; updateAutoNumber boolean; sales_debitnote_item_wareHouse_count integer; customer_data record; stock_group_id integer; temp_WareHouse_Id integer; tempWarehouseJson jsonb; tempBatchJson jsonb; container_list_count integer; packing_list_count integer; begin saleDebitNote_Id := (salesDebitNote_data->>'SaleDebitNoteId')::integer; flag := (salesDebitNote_data->>'Flag'); if flag = 'U' then update "10083_10833"."SalesDebitNote" set "Number" = (salesDebitNote_data ->>'Number'), "Date" = (salesDebitNote_data->>'Date')::date, "FinancialYear" = (salesDebitNote_data->>'FinancialYear')::integer, "TemplateId" = (salesDebitNote_data->>'TemplateId')::integer, "DocumentName" = salesDebitNote_data->>'DocumentName', "CustomerId" = (salesDebitNote_data->>'CustomerId')::integer, "ReverseCharge" = salesDebitNote_data->>'ReverseCharge', "TermAndConditionId" = (salesDebitNote_data->>'TermAndConditionId')::integer, "TermAndConditionText" = salesDebitNote_data->>'TermAndConditionText', "Title" = salesDebitNote_data->>'Title', "InvoiceRemark" = salesDebitNote_data->>'InvoiceRemark', "OriginalInvoiceNo" = (salesDebitNote_data->>'OriginalInvoiceNo'), "OriginalInvoiceDate" = (salesDebitNote_data->>'OriginalInvoiceDate')::date, "CurrencyId" = (salesDebitNote_data->>'CurrencyId')::integer, "SalesPersonId" = (salesDebitNote_data->>'SalesPersonId')::integer, "ExchangeRate" = (salesDebitNote_data->>'ExchangeRate')::float, "EcomGSTIN" = (salesDebitNote_data->> 'EcomGSTIN'), "InvoiceType" = (salesDebitNote_data->>'InvoiceType') where "SalesDebitNote"."SaleDebitNoteId" = saleDebitNote_id; elseif flag = 'A' then insert into "10083_10833"."SalesDebitNote" ( "Number", "Date", "FinancialYear", "TemplateId", "DocumentName", "CustomerId", "ReverseCharge", "TermAndConditionId", "TermAndConditionText", "Title", "InvoiceRemark", "OriginalInvoiceNo", "OriginalInvoiceDate", "EcomGSTIN", "CurrencyId", "SalesPersonId", "ExchangeRate", "DocumentStatus", "InvoiceType") values( (salesDebitNote_data ->>'Number'), (salesDebitNote_data->>'Date')::date, (salesDebitNote_data->>'FinancialYear')::integer, (salesDebitNote_data->>'TemplateId')::integer, salesDebitNote_data->>'DocumentName', (salesDebitNote_data->>'CustomerId')::integer, salesDebitNote_data->>'ReverseCharge', (salesDebitNote_data->>'TermAndConditionId')::integer, salesDebitNote_data->>'TermAndConditionText', salesDebitNote_data->>'Title', salesDebitNote_data->>'InvoiceRemark', (salesDebitNote_data->>'OriginalInvoiceNo'), (salesDebitNote_data->>'OriginalInvoiceDate')::date, (salesDebitNote_data->> 'EcomGSTIN'), (salesDebitNote_data->>'CurrencyId')::integer, (salesDebitNote_data->>'SalesPersonId')::integer, (salesDebitNote_data->>'ExchangeRate')::float, (coalesce((salesDebitNote_data->>'DocumentStatus')::integer, 1)::integer), (salesDebitNote_data->>'InvoiceType') ) returning "SaleDebitNoteId" into saleDebitNote_Id; end if; flag := ''; tempJson := (salesDebitNote_data ->> 'SalesDebitNoteBillTo'); if tempJson is not null then if flag <> 'D' and (tempJson ->> 'MapFromMaster')::boolean is true and tempJson ->> 'CustomerBillingAddressId' is not null then select "Address" , "City" , "StateCode" , "StateName" , "Pincode" , "CountryCode" , "CountryName" from "10083_10833"."CustomerBillingAddress" where "CustomerBillingAddressId" = (tempJson ->> 'CustomerBillingAddressId')::integer into customer_data; tempJson := jsonb_set(tempJson, '{Address}', to_jsonb(coalesce(customer_data."Address", ''))); tempJson := jsonb_set(tempJson, '{City}', to_jsonb(coalesce(customer_data."City", ''))); tempJson := jsonb_set(tempJson, '{StateCode}', to_jsonb(coalesce(customer_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{StateName}', to_jsonb(coalesce(customer_data."StateName", ''))); tempJson := jsonb_set(tempJson, '{PinZipCode}', to_jsonb(coalesce(customer_data."Pincode", ''))); tempJson := jsonb_set(tempJson, '{CountryCode}', to_jsonb(coalesce(customer_data."CountryCode", ''))); tempJson := jsonb_set(tempJson, '{CountryName}', to_jsonb(coalesce(customer_data."CountryName", ''))); tempJson := jsonb_set(tempJson, '{POSCode}', to_jsonb(coalesce(customer_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{POSName}', to_jsonb(coalesce(customer_data."StateName", ''))); end if; flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesDebitNoteBillToId'); if flag = 'D' then delete from "10083_10833"."SalesDebitNoteBillTo" sbt where sbt."SalesDebitNoteBillToId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesDebitNoteBillTo" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName', "POSCode" = (tempJson->> 'POSCode'), "POSName" = tempJson->> 'POSName', "GSTIN" = tempJson->> 'GSTIN' where "SalesDebitNoteBillToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesDebitNoteBillTo" ( "SaleDebitNoteId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "POSCode", "POSName", "GSTIN" ) values ( (saleDebitNote_Id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'POSCode'), (tempJson->> 'POSName'), (tempJson->> 'GSTIN') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesDebitNote_data ->> 'SalesDebitNoteShipTo'); if tempJson is not null then if flag <> 'D' and (tempJson ->> 'MapFromMaster')::boolean is true and tempJson ->> 'CustomerShippingAddressId' is not null then select "Address", "City", "StateName", "StateCode", "Pincode", "CountryCode", "CountryName" from "10083_10833"."CustomerShippingAddress" where "CustomerShippingAddressId" = (tempJson ->> 'CustomerShippingAddressId')::integer into customer_data; tempJson := jsonb_set(tempJson, '{Address}', to_jsonb(coalesce(customer_data."Address", ''))); tempJson := jsonb_set(tempJson, '{City}', to_jsonb(coalesce(customer_data."City", ''))); tempJson := jsonb_set(tempJson, '{StateCode}', to_jsonb(coalesce(customer_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{StateName}', to_jsonb(coalesce(customer_data."StateName", ''))); tempJson := jsonb_set(tempJson, '{PinZipCode}', to_jsonb(coalesce(customer_data."Pincode", ''))); tempJson := jsonb_set(tempJson, '{CountryCode}', to_jsonb(coalesce(customer_data."CountryCode", ''))); tempJson := jsonb_set(tempJson, '{CountryName}', to_jsonb(coalesce(customer_data."CountryName", ''))); end if; flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'SalesDebitNoteShipToId'); if flag = 'D' then delete from "10083_10833"."SalesDebitNoteShipTo" sst where sst."SalesDebitNoteShipToId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesDebitNoteShipTo" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName', "GSTIN" = tempJson->> 'GSTIN' where "SalesDebitNoteShipToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesDebitNoteShipTo" ( "SaleDebitNoteId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "GSTIN" ) values ( (saleDebitNote_Id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'GSTIN')); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesDebitNote_data ->> 'SalesDebitNoteReceiptDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesDebitNoteReceiptDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesDebitNoteReceiptDetails" sdd where sdd."SalesDebitNoteReceiptDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesDebitNoteReceiptDetails" set "ReceiptDocNo" = (tempJson ->> 'ReceiptDocNo'), "ReceiptThrough" = (tempJson ->> 'ReceiptThrough'), "Destination" = (tempJson ->> 'Destination'), "CarrierNameAgent" = (tempJson ->> 'CarrierNameAgent'), "BillOfLandingLrRrNo" = (tempJson ->> 'BillOfLandingLrRrNo'), "Date" = (tempJson ->> 'Date')::date, "MotorVehicleNo" = (tempJson ->> 'MotorVehicleNo'), "MailingName" = (tempJson ->> 'MailingName'), "Address" = (tempJson ->> 'Address'), "City" = (tempJson ->> 'City'), "StateCode" = (tempJson ->> 'StateCode'), "StateName" = (tempJson ->> 'StateName'), "PinZipCode" = (tempJson ->> 'PinZipCode'), "CountryCode" = (tempJson ->> 'CountryCode'), "CountryName" = (tempJson ->> 'CountryName') where "SalesDebitNoteReceiptDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesDebitNoteReceiptDetails" ( "SaleDebitNoteId", "ReceiptDocNo", "ReceiptThrough", "Destination", "CarrierNameAgent", "BillOfLandingLrRrNo", "Date", "MotorVehicleNo", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName" ) values ( saleDebitNote_Id, (tempJson ->> 'ReceiptDocNo'), (tempJson ->> 'ReceiptThrough'), (tempJson ->> 'Destination'), (tempJson ->> 'CarrierNameAgent'), (tempJson ->> 'BillOfLandingLrRrNo'), (tempJson ->> 'Date')::date, (tempJson ->> 'MotorVehicleNo'), (tempJson ->> 'MailingName'), (tempJson ->> 'Address'), (tempJson ->> 'City'), (tempJson ->> 'StateCode'), (tempJson ->> 'StateName'), (tempJson ->> 'PinZipCode'), (tempJson ->> 'CountryCode'), (tempJson ->> 'CountryName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesDebitNote_data ->> 'SalesDebitNoteImportDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesDebitNoteImportDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesDebitNoteImportDetails" sed where sed."SalesDebitNoteImportDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesDebitNoteImportDetails" set "ShippingBillNumber" = tempJson ->> 'ShippingBillNumber', "ShippingBillDate" = (tempJson ->> 'ShippingBillDate')::date, "PortCode" = tempJson ->> 'PortCode', "PortName" = tempJson ->> 'PortName', "CountryCode" = tempJson ->> 'CountryCode', "CountryName" = tempJson ->> 'CountryName', "RefundClaim" = (tempJson ->> 'RefundClaim')::boolean, "ImportDuty" = (tempJson ->> 'ImportDuty')::float, "DispatchThrough" = tempJson ->> 'DispatchThrough', "VesselFlightNo" = tempJson ->> 'VesselFlightNo', "DestinationPortCode" = tempJson ->> 'DestinationPortCode', "DestinationPortName" = tempJson ->> 'DestinationPortName', "Destination" = tempJson ->> 'Destination', "LUTMasterId" = (tempJson ->> 'LUTMasterId')::integer, "LUTNumber" = tempJson ->> 'LUTNumber', "PlaceOfReceiptByShipper" = tempJson ->> 'PlaceOfReceiptByShipper', "PortOfLoadingCode" = tempJson ->> 'PortOfLoadingCode', "PortOfLoadingName" = tempJson ->> 'PortOfLoadingName', "PortOfDischargeCode" = tempJson ->> 'PortOfDischargeCode', "PortOfDischargeName" = tempJson ->> 'PortOfDischargeName' where "SalesDebitNoteImportDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesDebitNoteImportDetails" ( "SaleDebitNoteId", "ShippingBillNumber", "ShippingBillDate", "PortCode", "PortName", "CountryCode", "CountryName", "RefundClaim", "ImportDuty", "DispatchThrough", "VesselFlightNo", "DestinationPortCode", "DestinationPortName", "Destination", "LUTMasterId", "LUTNumber", "PlaceOfReceiptByShipper", "PortOfLoadingCode", "PortOfLoadingName", "PortOfDischargeCode", "PortOfDischargeName" ) values ( saleDebitNote_Id, tempJson ->> 'ShippingBillNumber', (tempJson ->> 'ShippingBillDate')::date, tempJson ->> 'PortCode', tempJson ->> 'PortName', tempJson ->> 'CountryCode', tempJson ->> 'CountryName', (tempJson ->> 'RefundClaim')::boolean, (tempJson ->> 'ImportDuty')::float, tempJson ->> 'DispatchThrough', tempJson ->> 'VesselFlightNo', tempJson ->> 'DestinationPortCode', tempJson ->> 'DestinationPortName', tempJson ->> 'Destination', (tempJson ->> 'LUTMasterId')::integer, tempJson ->> 'LUTNumber', tempJson ->> 'PlaceOfReceiptByShipper', (tempJson ->> 'PortOfLoadingCode'), (tempJson ->> 'PortOfLoadingName'), (tempJson ->> 'PortOfDischargeCode'), (tempJson ->> 'PortOfDischargeName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesDebitNote_data ->> 'SalesDebitNoteValueDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesDebitNoteValueDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesDebitNoteValueDetails" svd where svd."SalesDebitNoteValueDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesDebitNoteValueDetails" set "AssessableValue" =(tempJson ->> 'AssessableValue')::float, "IGSTValue" =(tempJson ->> 'IGSTValue')::float, "CGSTValue" =(tempJson ->> 'CGSTValue')::float, "SGSTValue" =(tempJson ->> 'SGSTValue')::float, "CessValue" =(tempJson ->> 'CessValue')::float, "StateCessValue" =(tempJson ->> 'StateCessValue')::float, "TotalInvoiceValue" =(tempJson ->> 'TotalInvoiceValue')::float, "RoundOffAmount" =(tempJson ->> 'RoundOffAmount')::float, "TotalInvValForeignCurrency" =(tempJson ->> 'TotalInvValForeignCurrency')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharge" =(tempJson ->> 'OtherCharge')::float, "OtherChargeTaxable" =(tempJson ->> 'OtherChargeTaxable')::float, "TCSRate" =(tempJson ->> 'TCSRate')::float, "InvoiceValueWithoutTCS" =(tempJson ->> 'InvoiceValueWithoutTCS')::float, "TCSAmount" =(tempJson ->> 'TCSAmount')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float where "SalesDebitNoteValueDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesDebitNoteValueDetails" ( "SaleDebitNoteId", "AssessableValue", "IGSTValue", "CGSTValue", "SGSTValue", "CessValue", "StateCessValue", "TotalInvoiceValue", "RoundOffAmount", "TotalInvValForeignCurrency", "Discount", "OtherCharge", "OtherChargeTaxable", "TCSRate", "InvoiceValueWithoutTCS", "TCSAmount", "SubTotal") values ( saleDebitNote_Id, (tempJson ->> 'AssessableValue')::float, (tempJson ->> 'IGSTValue')::float, (tempJson ->> 'CGSTValue')::float, (tempJson ->> 'SGSTValue')::float, (tempJson ->> 'CessValue')::float, (tempJson ->> 'StateCessValue')::float, (tempJson ->> 'TotalInvoiceValue')::float, (tempJson ->> 'RoundOffAmount')::float, (tempJson ->> 'TotalInvValForeignCurrency')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharge')::float, (tempJson ->> 'OtherChargeTaxable')::float, (tempJson ->> 'TCSRate')::float, (tempJson ->> 'InvoiceValueWithoutTCS')::float, (tempJson ->> 'TCSAmount')::float, (tempJson ->> 'SubTotal')::float ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesDebitNote_data ->> 'SalesDebitNoteEwayBillsDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesDebitNoteEwayBillsDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesDebitNoteEwayBillsDetails" sod where sod."SalesDebitNoteEwayBillsDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesDebitNoteEwayBillsDetails" set "GSTIN" = (tempJson->> 'GSTIN'), "TransportersId" = (tempJson->> 'TransportersId')::integer, "TransporterName" = (tempJson->> 'TransporterName'), "TransportModeCode" = (tempJson->> 'TransportModeCode')::integer, "TransportModeName" = (tempJson->> 'TransportModeName'), "Distance" = (tempJson->> 'Distance'), "TransportDocumentNumber" = (tempJson->> 'TransportDocumentNumber'), "TransportDocumentDate" = (tempJson->> 'TransportDocumentDate')::date, "VehicleNumber" = (tempJson->> 'VehicleNumber'), "VehicleTypeCode" = (tempJson->> 'VehicleTypeCode'), "VehicleTypeName" = (tempJson->> 'VehicleTypeName'), "EwayBillNumber" = (tempJson->> 'EwayBillNumber'), "EwayBillDate" = (tempJson->> 'EwayBillDate')::date, "DispatchFrom" = (tempJson->> 'DispatchFrom'), "ShipTo" = (tempJson->> 'ShipTo') where "SalesDebitNoteEwayBillsDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesDebitNoteEwayBillsDetails" ( "SaleDebitNoteId", "GSTIN", "TransportersId", "TransporterName", "TransportModeCode", "TransportModeName", "Distance", "TransportDocumentNumber", "TransportDocumentDate", "VehicleNumber", "VehicleTypeCode", "VehicleTypeName", "EwayBillNumber", "EwayBillDate", "DispatchFrom", "ShipTo" ) values ( saleDebitNote_Id, (tempJson->> 'GSTIN'), (tempJson->> 'TransportersId')::integer, (tempJson->> 'TransporterName'), (tempJson->> 'TransportModeCode')::integer, (tempJson->> 'TransportModeName'), (tempJson->> 'Distance'), (tempJson->> 'TransportDocumentNumber'), (tempJson->> 'TransportDocumentDate')::date, (tempJson->> 'VehicleNumber'), (tempJson->> 'VehicleTypeCode'), (tempJson->> 'VehicleTypeName'), (tempJson->> 'EwayBillNumber'), (tempJson->> 'EwayBillDate')::date, (tempJson->> 'DispatchFrom'), (tempJson->> 'ShipTo') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesDebitNote_data ->> 'SalesDebitNoteOtherDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesDebitNoteOtherDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesDebitNoteOtherDetails" sod where sod."SalesDebitNoteOtherDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesDebitNoteOtherDetails" set "ModeTermsOfPayment" =(tempJson ->> 'ModeTermsOfPayment'), "TermsOfDelivery" =(tempJson ->> 'TermsOfDelivery'), "TermAndCondition" =(tempJson ->> 'TermAndCondition') where "SalesDebitNoteOtherDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesDebitNoteOtherDetails" ( "SaleDebitNoteId", "ModeTermsOfPayment", "TermsOfDelivery", "TermAndCondition" ) values ( saleDebitNote_Id, (tempJson ->> 'ModeTermsOfPayment'), (tempJson ->> 'TermsOfDelivery'), (tempJson ->> 'TermAndCondition') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; other_charges_count := jsonb_array_length((salesDebitNote_data ->> 'SalesDebitNoteOtherCharges')::jsonb); if other_charges_count > 0 then for i in 0.. other_charges_count-1 loop tempJson = (salesDebitNote_data ->> 'SalesDebitNoteOtherCharges')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesDebitNoteOtherChargeId')::integer; if flag = 'D' then delete from "10083_10833"."SalesDebitNoteOtherCharges" sroc where sroc."SalesDebitNoteOtherChargeId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesDebitNoteOtherCharges" set "OtherChargeId" =(tempJson ->> 'OtherChargeId')::integer, "GSTRateCode" =(tempJson ->> 'GSTRateCode')::float, "GSTRateName" =(tempJson ->> 'GSTRateName')::float, "Amount" =(tempJson ->> 'Amount')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "IGST" =(tempJson ->> 'IGST')::float, "HSN" =(tempJson ->> 'HSN')::integer, "TaxableCode" =(tempJson ->> 'TaxableCode')::integer, "TaxableName" =(tempJson ->> 'TaxableName'), "AppropriateCode" =(tempJson ->>'AppropriateCode')::integer, "AppropriateName" =(tempJson ->>'AppropriateName'), "ForeignCurrencyPrice" = (tempJson ->> 'ForeignCurrencyPrice')::float, "Name" =(tempJson ->>'Name') where "SalesDebitNoteOtherChargeId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesDebitNoteOtherCharges" ( "SaleDebitNoteId", "OtherChargeId", "GSTRateCode", "GSTRateName", "Amount", "CGST", "SGST", "IGST", "HSN", "TaxableCode", "TaxableName", "AppropriateCode", "AppropriateName", "ForeignCurrencyPrice", "Name") values( saleDebitNote_Id, (tempJson ->> 'OtherChargeId')::integer, (tempJson ->> 'GSTRateCode')::float, (tempJson ->> 'GSTRateName')::float, (tempJson ->> 'Amount')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'HSN')::integer, (tempJson ->> 'TaxableCode')::integer, (tempJson ->> 'TaxableName'), (tempJson ->> 'AppropriateCode')::integer, (tempJson ->> 'AppropriateName'), (tempJson ->> 'ForeignCurrencyPrice')::float, (tempJson ->>'Name')); end if; end if; end loop; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((salesDebitNote_data ->> 'SalesDebitNoteItems')::jsonb); if item_count > 0 then for i in 0.. item_count-1 loop tempJson = (salesDebitNote_data ->> 'SalesDebitNoteItems')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesDebitNoteItemsId'); if flag = 'D' then delete from "10083_10833"."SalesDebitNoteItems" si where si."SalesDebitNoteItemsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesDebitNoteItems" set "StockItemId" =(tempJson ->> 'StockItemId')::integer, "ItemName" =(tempJson ->> 'ItemName'), "ItemSerialNumber" =(tempJson ->> 'ItemSerialNumber')::integer, "ItemCode" =(tempJson ->> 'ItemCode')::integer, "ItemDescription" =(tempJson ->> 'ItemDescription'), "HSNSAC" =(tempJson ->> 'HSNSAC')::integer, "BarCode" =(tempJson ->> 'BarCode'), "Quantity" =(tempJson ->> 'Quantity')::float, "FreeQuantity" =(tempJson ->> 'FreeQuantity')::float, "UnitPrice" =(tempJson ->> 'UnitPrice')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharges" =(tempJson ->> 'OtherCharges')::float, "TaxableValue" =(tempJson ->> 'TaxableValue')::float, "GstRate" =(tempJson ->> 'GstRate')::float, "CessRate" =(tempJson ->> 'CessRate')::float, "StateCessRateCode" =(tempJson ->> 'StateCessRateCode')::float, "StateCessRateName" =(tempJson ->> 'StateCessRateName')::integer, "IGST" =(tempJson ->> 'IGST')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "Cess" =(tempJson ->> 'Cess')::float, "StateCess" =(tempJson ->> 'StateCess')::float, "CessNonAdvolRateCode" =(tempJson ->> 'CessNonAdvolRateCode')::float, "CessNonAdvolRateName" =(tempJson ->> 'CessNonAdvolRateName')::float, "CessNonAdvolUnit" =(tempJson ->> 'CessNonAdvolUnit')::float, "StateCessNonAdvolRateCode" =(tempJson ->> 'StateCessNonAdvolRateCode')::float, "StateCessNonAdvolRateName" =(tempJson ->> 'StateCessNonAdvolRateName')::float, "StateCessNonAdvolUnit" =(tempJson ->> 'StateCessNonAdvolUnit')::float, "CessNonAdvol" =(tempJson ->> 'CessNonAdvol')::float, "StateCessNonAdvol" =(tempJson ->> 'StateCessNonAdvol')::float, "TotalItemValue" =(tempJson ->> 'TotalItemValue')::float, "MarksContainerNo" =(tempJson ->> 'MarksContainerNo'), "NumberOfPackages" =(tempJson ->> 'NumberOfPackages')::float, "TaxabilityCode" = (tempJson ->> 'TaxabilityCode'):: integer, "TaxabilityName" = (tempJson ->> 'TaxabilityName'), "ForeignCurrencyPrice" = (tempJson ->> 'ForeignCurrencyPrice')::float, "UOMCode" = (tempJson ->> 'UOMCode'), "DiscountRate" =(tempJson ->> 'DiscountRate')::float where "SalesDebitNoteItemsId" = temp_id; saleDebitNote_item_id := temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesDebitNoteItems" ( "SaleDebitNoteId", "StockItemId", "ItemName", "ItemSerialNumber", "ItemCode", "ItemDescription", "HSNSAC", "BarCode", "Quantity", "FreeQuantity", "UnitPrice", "SubTotal", "Discount", "OtherCharges", "TaxableValue", "GstRate", "CessRate", "StateCessRateCode", "StateCessRateName", "IGST", "CGST", "SGST", "Cess", "StateCess", "CessNonAdvolRateCode", "CessNonAdvolRateName", "CessNonAdvolUnit", "StateCessNonAdvolRateCode", "StateCessNonAdvolRateName", "StateCessNonAdvolUnit", "CessNonAdvol", "StateCessNonAdvol", "TotalItemValue", "MarksContainerNo", "NumberOfPackages", "TaxabilityCode", "TaxabilityName", "ForeignCurrencyPrice", "UOMCode", "DiscountRate" ) values ( saleDebitNote_Id, (tempJson ->> 'StockItemId')::integer, (tempJson ->> 'ItemName'), (tempJson ->> 'ItemSerialNumber')::integer, (tempJson ->> 'ItemCode')::integer, (tempJson ->> 'ItemDescription'), (tempJson ->> 'HSNSAC')::integer, (tempJson ->> 'BarCode'), (tempJson ->> 'Quantity')::float, (tempJson ->> 'FreeQuantity')::float, (tempJson ->> 'UnitPrice')::float, (tempJson ->> 'SubTotal')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharges')::float, (tempJson ->> 'TaxableValue')::float, (tempJson ->> 'GstRate')::float, (tempJson ->> 'CessRate')::float, (tempJson ->> 'StateCessRateCode')::float, (tempJson ->> 'StateCessRateName')::integer, (tempJson ->> 'IGST')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'Cess')::float, (tempJson ->> 'StateCess')::float, (tempJson ->> 'CessNonAdvolRateCode')::float, (tempJson ->> 'CessNonAdvolRateName')::float, (tempJson ->> 'CessNonAdvolUnit')::float, (tempJson ->> 'StateCessNonAdvolRateCode')::float, (tempJson ->> 'StateCessNonAdvolRateName')::float, (tempJson ->> 'StateCessNonAdvolUnit')::float, (tempJson ->> 'CessNonAdvol')::float, (tempJson ->> 'StateCessNonAdvol')::float, (tempJson ->> 'TotalItemValue')::float, (tempJson ->> 'MarksContainerNo'), (tempJson ->> 'NumberOfPackages')::float, (tempJson ->> 'TaxabilityCode'):: integer, (tempJson ->> 'TaxabilityName'), (tempJson ->> 'ForeignCurrencyPrice')::float, (tempJson ->> 'UOMCode'), (tempJson ->> 'DiscountRate')::float ) returning "SalesDebitNoteItemsId" into saleDebitNote_item_id; end if; end if; if flag <> 'D' then flag := ''; temp_id := 0; tempBatchJson := (tempJson ->> 'SalesDebitNoteBatchDetails')::jsonb; flag := (tempBatchJson->> 'Flag'); temp_id := (tempBatchJson ->> 'SDNBatchId'); if flag = 'D' then delete from "10083_10833"."SalesDebitNoteBatchDetails" srbd where srbd."SDNBatchId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesDebitNoteBatchDetails" ( "SDNItemsId", "Name", "SerialNumber", "ExpiryDate", "ManufacturingDate" ) values ( saleDebitNote_item_id, (tempBatchJson ->> 'Name'), (tempBatchJson ->> 'SerialNumber')::integer, (tempBatchJson ->> 'ExpiryDate')::date, (tempBatchJson ->> 'ManufacturingDate')::date ); elseif flag = 'U' then update "10083_10833"."SalesDebitNoteBatchDetails" set "SDNItemsId" =(tempBatchJson ->> 'SDNItemsId')::integer, "Name" =(tempBatchJson ->> 'Name'), "SerialNumber" =(tempBatchJson ->> 'SerialNumber')::integer, "ExpiryDate" =(tempBatchJson ->> 'ExpiryDate')::date, "ManufacturingDate" =(tempBatchJson ->> 'ManufacturingDate')::date where "SDNBatchId" = temp_id; end if; end if; flag := ''; flag :=(tempJson ->> 'Flag'); if flag <> 'D' then flag := ''; temp_id := 0; sales_debitnote_item_wareHouse_count := jsonb_array_length((tempJson ->> 'SalesDebitNoteItemWareHouse')::jsonb); if sales_debitnote_item_wareHouse_count > 0 then for j in 0.. sales_debitnote_item_wareHouse_count-1 loop tempWarehouseJson := (tempJson ->> 'SalesDebitNoteItemWareHouse')::jsonb->j; if tempWarehouseJson is not null then flag := (tempWarehouseJson ->> 'Flag'); temp_id = (tempWarehouseJson ->> 'SDNItemWHId'); select "StockGroupId" from "10083_10833"."StockItem" where "StockItemId" = ( tempJson->>'StockItemId' )::INTEGER into stock_group_id; if flag = 'D' then delete from "10083_10833"."SalesDebitNoteItemWareHouse" sriwh where sriwh."SDNItemWHId" = temp_id; insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out" ) values ( ( tempJson->>'StockItemId' ) ::INTEGER, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, 0, (tempWarehouseJson ->> 'TempQuantity')::FLOAT ) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = ( tempJson->>'StockItemId' ) ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "Out" = (coalesce("10083_10833"."StockItemBalance"."Out" , 0) + coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT; elseif flag = 'A' then insert into "10083_10833"."SalesDebitNoteItemWareHouse" ( "SDNItemsId", "WareHouseId", "Quantity", "Rate", "Total" ) values (saleDebitNote_item_id, (tempWarehouseJson ->> 'WareHouseId')::integer, coalesce((tempWarehouseJson ->> 'Quantity')::float, 0), (tempWarehouseJson ->> 'Rate')::float, (tempWarehouseJson ->> 'Total')::float ); insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out" ) values ( ( tempJson->>'StockItemId' ) ::INTEGER, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, 0, (tempWarehouseJson ->> 'TempQuantity')::FLOAT ) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = ( tempjson->>'StockItemId' ) ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "Out" = (coalesce("10083_10833"."StockItemBalance"."Out" , 0) - coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT; elseif flag = 'U' then update "10083_10833"."SalesDebitNoteItemWareHouse" set "SDNItemsId" =(tempWarehouseJson ->> 'SDNItemsId')::integer, "WareHouseId" =(tempWarehouseJson ->> 'WareHouseId')::integer, "Quantity" = coalesce((tempWarehouseJson ->> 'Quantity')::float, 0), "Rate" =(tempWarehouseJson ->> 'Rate')::float, "Total" =(tempWarehouseJson ->> 'Total')::float where "SDNItemWHId" = temp_id; temp_WareHouse_Id := (tempWarehouseJson->>'TempWareHouseId') ::integer; if (tempWarehouseJson ->> 'WareHouseId')::integer <> temp_WareHouse_Id then insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out" ) values ( ( tempJson->>'StockItemId' ) ::INTEGER, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, 0, (tempWarehouseJson ->> 'TempQuantity')::FLOAT ) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId') ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "Out" = (coalesce("10083_10833"."StockItemBalance"."Out" , 0) - coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT; update "10083_10833"."StockItemBalance" set "Out" =(coalesce("10083_10833"."StockItemBalance"."Out" , 0) + coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT where "StockItemId" = ( tempJson->>'StockItemId' ) ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'TempWareHouseId')::integer; else insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out" ) values ( ( tempJson->>'StockItemId' ) ::INTEGER, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, 0, (tempWarehouseJson ->> 'TempQuantity')::FLOAT ) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId') ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "Out" = (coalesce("10083_10833"."StockItemBalance"."Out" , 0) - coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT; end if; end if; end if; end loop; end if; end if; end loop; end if; flag := ''; tempJson := null; temp_id := 0; container_list_count := jsonb_array_length((salesDebitNote_data ->> 'SalesDebitNoteContainerList')::jsonb); if container_list_count > 0 then for i in 0.. container_list_count-1 loop tempJson = (salesDebitNote_data ->> 'SalesDebitNoteContainerList')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesDebitNoteContainerListId')::integer; if flag = 'D' then delete from "10083_10833"."SalesDebitNoteContainerList" scl where scl."SalesDebitNoteContainerListId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesDebitNoteContainerList" set "ContainerNumber" =(tempJson ->> 'ContainerNumber'), "LinerSealNumber" =(tempJson ->> 'LinerSealNumber'), "OTSNumber" =(tempJson ->> 'OTSNumber'), "Quantity" =(tempJson ->> 'Quantity') where "SalesDebitNoteContainerListId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesDebitNoteContainerList" ( "SaleDebitNoteId", "ContainerNumber", "LinerSealNumber", "OTSNumber", "Quantity") values( saleDebitNote_id, (tempJson ->> 'ContainerNumber'), (tempJson ->> 'LinerSealNumber'), (tempJson ->> 'OTSNumber'), (tempJson ->> 'Quantity') ); end if; end if; end loop; end if; flag := ''; tempJson := null; temp_id := 0; packing_list_count := jsonb_array_length((salesDebitNote_data ->> 'SalesDebitNotePackingList')::jsonb); if packing_list_count > 0 then for i in 0.. packing_list_count-1 loop tempJson = (salesDebitNote_data ->> 'SalesDebitNotePackingList')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesDebitNotePackingListId')::integer; if flag = 'D' then delete from "10083_10833"."SalesDebitNotePackingList" sdnpl where sdnpl."SalesDebitNotePackingListId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesDebitNotePackingList" set "NumberOfPackageUOM" =(tempJson ->> 'NumberOfPackageUOM'), "NetWeightOfEachPackageUOM" =(tempJson ->> 'NetWeightOfEachPackageUOM'), "TareWeightOfEachPackageUOM" =(tempJson ->> 'TareWeightOfEachPackageUOM'), "TareWeightOfEachPalletUOM" =(tempJson ->> 'TareWeightOfEachPalletUOM'), "TotalNumberOfPalletsUOM" =(tempJson ->> 'TotalNumberOfPalletsUOM'), "TotalGrossWeightUOM" =(tempJson ->> 'TotalGrossWeightUOM'), "TotalNetWeightUOM" =(tempJson ->> 'TotalNetWeightUOM'), "NetWeightOfEachPackage" =(tempJson ->> 'NetWeightOfEachPackage')::float, "NumberOfPackage" =(tempJson ->> 'NumberOfPackage')::float, "TareWeightOfEachPackage" =(tempJson ->> 'TareWeightOfEachPackage')::float, "TareWeightOfEachPallet" =(tempJson ->> 'TareWeightOfEachPallet')::float, "TotalGrossWeight" =(tempJson ->> 'TotalGrossWeight')::float, "TotalNetWeight" =(tempJson ->> 'TotalNetWeight')::float, "TotalNumberOfPallets" =(tempJson ->> 'TotalNumberOfPallets')::float where "SalesDebitNotePackingListId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesDebitNotePackingList" ( "SaleDebitNoteId", "NumberOfPackageUOM", "NetWeightOfEachPackageUOM", "TareWeightOfEachPackageUOM", "TareWeightOfEachPalletUOM", "TotalNumberOfPalletsUOM", "TotalGrossWeightUOM", "TotalNetWeightUOM", "NetWeightOfEachPackage", "NumberOfPackage", "TareWeightOfEachPackage", "TareWeightOfEachPallet", "TotalGrossWeight", "TotalNetWeight", "TotalNumberOfPallets" ) values( saleDebitNote_id, (tempJson ->> 'NumberOfPackageUOM'), (tempJson ->> 'NetWeightOfEachPackageUOM'), (tempJson ->> 'TareWeightOfEachPackageUOM'), (tempJson ->> 'TareWeightOfEachPalletUOM'), (tempJson ->> 'TotalNumberOfPalletsUOM'), (tempJson ->> 'TotalGrossWeightUOM'), (tempJson ->> 'TotalNetWeightUOM'), (tempJson ->> 'NetWeightOfEachPackage')::float, (tempJson ->> 'NumberOfPackage')::float, (tempJson ->> 'TareWeightOfEachPackage')::float, (tempJson ->> 'TareWeightOfEachPallet')::float, (tempJson ->> 'TotalGrossWeight')::float, (tempJson ->> 'TotalNetWeight')::float, (tempJson ->> 'TotalNumberOfPallets')::float ); end if; end if; end loop; end if; updateAutoNumber := (salesDebitNote_data->>'UpdateAutoNumber') ::boolean ; if (updateAutoNumber = true ) then update "10083_10833"."AutoNumbering" set "StartingNumber" = "StartingNumber" + 1 where "TemplateId" = (salesDebitNote_data->>'TemplateId')::integer; end if; if exists ( select "Date" from "10083_10833"."LastDocumentDate") then update "10083_10833"."LastDocumentDate" set "Date" = (salesDebitNote_data->>'Date')::date, "UpdatedOn" = (CURRENT_TIMESTAMP)::date where "Date" < (salesDebitNote_data->>'Date')::date; else insert into "10083_10833"."LastDocumentDate" ( "Date", "UpdatedOn") values( (salesDebitNote_data ->> 'Date')::date , (CURRENT_TIMESTAMP)::date ); end if; end; $$;


ALTER PROCEDURE "10083_10833".salesdebitnote_update_add(IN salesdebitnote_data jsonb, OUT saledebitnote_id integer) OWNER TO "10083";

--
-- TOC entry 2351 (class 1255 OID 186197)
-- Name: salesorder_update_add(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".salesorder_update_add(IN salesorder_data jsonb, OUT salesorder_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; flag char(1); temp_id integer; item_count integer; salesOrder_item_id integer; customer_data record; begin salesOrder_id := (salesOrder_data->>'SaleOrderId') ::integer; flag := (salesOrder_data->>'Flag'); if flag = 'U' then update "10083_10833"."SalesOrder" set "Number" = (salesOrder_data ->>'Number'), "Date" = (salesOrder_data->>'Date')::date, "DueDate" = (salesOrder_data->>'DueDate')::date, "FinancialYear" = (salesOrder_data->>'FinancialYear')::integer, "TemplateId" = (salesOrder_data->>'TemplateId')::integer, "DocumentName" = (salesOrder_data->>'DocumentName'), "CustomerId" = (salesOrder_data->>'CustomerId')::integer, "CustomerPurchaseOrderNumber" = (salesOrder_data->>'CustomerPurchaseOrderNumber'), "CustomerPurchaseOrderDate" = (salesOrder_data->>'CustomerPurchaseOrderDate')::date where "SalesOrder"."SaleOrderId" = salesOrder_id; elseif flag = 'A' then insert into "10083_10833"."SalesOrder" ( "Number", "Date", "DueDate", "FinancialYear", "TemplateId", "DocumentName", "CustomerId", "CustomerPurchaseOrderNumber", "CustomerPurchaseOrderDate" ) values( (salesOrder_data ->>'Number'), (salesOrder_data->>'Date')::date, (salesOrder_data->>'DueDate')::date, (salesOrder_data->>'FinancialYear')::integer, (salesOrder_data->>'TemplateId')::integer, (salesOrder_data->>'DocumentName'), (salesOrder_data->>'CustomerId')::integer, (salesOrder_data->>'CustomerPurchaseOrderNumber'), (salesOrder_data->>'CustomerPurchaseOrderDate')::date ) returning "SaleOrderId" into salesOrder_id; end if; flag := ''; tempJson := (salesOrder_data ->> 'SalesOrderBillTo'); if tempJson is not null then if flag <> 'D' and tempJson ->> 'Address' is null and tempJson ->> 'CustomerBillingAddressId' is not null then select "Address", "City", "StateCode", "StateName", "Pincode", "CountryCode", "CountryName" from "10083_10833"."CustomerBillingAddress" where "CustomerBillingAddressId" = (tempJson ->> 'CustomerBillingAddressId')::integer into customer_data; tempJson := jsonb_set(tempJson, '{Address}', to_jsonb(customer_data."Address")); tempJson := jsonb_set(tempJson, '{City}', to_jsonb(customer_data."City")); tempJson := jsonb_set(tempJson, '{StateCode}', to_jsonb(customer_data."StateCode")); tempJson := jsonb_set(tempJson, '{StateName}', to_jsonb(customer_data."StateName")); tempJson := jsonb_set(tempJson, '{PinZipCode}', to_jsonb(customer_data."Pincode")); tempJson := jsonb_set(tempJson, '{CountryCode}', to_jsonb(customer_data."CountryCode")); tempJson := jsonb_set(tempJson, '{CountryName}', to_jsonb(customer_data."CountryName")); tempJson := jsonb_set(tempJson, '{POSCode}', to_jsonb(customer_data."StateCode")); tempJson := jsonb_set(tempJson, '{POSName}', to_jsonb(customer_data."StateName")); end if; flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesOrderBillToId'); if flag = 'D' then delete from "10083_10833"."SalesOrderBillTo" sbt where sbt."SalesOrderBillToId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesOrderBillTo" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName', "POSCode" = (tempJson->> 'POSCode'), "POSName" = tempJson->> 'POSName' where "SalesOrderBillToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesOrderBillTo" ( "SaleOrderId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "POSCode", "POSName" ) values ( salesOrder_id, (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'POSCode'), (tempJson->> 'POSName')); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesOrder_data ->> 'SalesOrderShipTo'); if tempJson is not null then if flag <> 'D' and tempJson ->> 'Address' is null and tempJson ->> 'CustomerShippingAddressId' is not null then select "Address", "City", "StateCode", "StateName", "Pincode", "CountryCode", "CountryName" from "10083_10833"."CustomerShippingAddress" where "CustomerShippingAddressId" = (tempJson ->> 'CustomerShippingAddressId')::integer into customer_data; tempJson := jsonb_set(tempJson, '{Address}', to_jsonb(customer_data."Address")); tempJson := jsonb_set(tempJson, '{City}', to_jsonb(customer_data."City")); tempJson := jsonb_set(tempJson, '{StateCode}', to_jsonb(customer_data."StateCode")); tempJson := jsonb_set(tempJson, '{StateName}', to_jsonb(customer_data."StateName")); tempJson := jsonb_set(tempJson, '{PinZipCode}', to_jsonb(customer_data."Pincode")); tempJson := jsonb_set(tempJson, '{CountryCode}', to_jsonb(customer_data."CountryCode")); tempJson := jsonb_set(tempJson, '{CountryName}', to_jsonb(customer_data."CountryName")); end if; flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'SalesOrderShipToId'); if flag = 'D' then delete from "10083_10833"."SalesOrderShipTo" sst where sst."SalesOrderShipToId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesOrderShipTo" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName' where "SalesOrderShipToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesOrderShipTo" ( "SaleOrderId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName" ) values ( salesOrder_id, (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName')); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesOrder_data ->> 'SalesOrderDispatchFrom'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesOrderDispatchFromId'); if flag = 'D' then delete from "10083_10833"."SalesOrderDispatchFrom" sdd where sdd."SalesOrderDispatchFromId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesOrderDispatchFrom" set "MailingName" = tempJson ->> 'MailingName', "Address1" = tempJson ->> 'Address1', "Address2" = tempJson ->> 'Address2', "City" = tempJson ->> 'City', "StateCode" = (tempJson ->> 'StateCode'), "StateName" = tempJson ->> 'StateName', "PinZipCode" = tempJson ->> 'PinZipCode', "CountryCode" = tempJson ->> 'CountryCode', "CountryName" = tempJson ->> 'CountryName' where "SalesOrderDispatchFromId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesOrderDispatchFrom" ( "SaleOrderId", "MailingName", "Address1", "Address2", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName" ) values ( salesOrder_id, tempJson ->> 'MailingName', tempJson ->> 'Address1', tempJson ->> 'Address2', tempJson ->> 'City', (tempJson ->> 'StateCode'), tempJson ->> 'StateName', tempJson ->> 'PinZipCode', tempJson ->> 'CountryCode', tempJson ->> 'CountryName' ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesOrder_data ->> 'SalesOrderExportDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesOrderExportDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesOrderExportDetails" sed where sed."SalesOrderExportDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesOrderExportDetails" set "ShippingBillNumber" = tempJson ->> 'ShippingBillNumber', "ShippingBillDate" = (tempJson ->> 'ShippingBillDate')::date, "PortCode" = tempJson ->> 'PortCode', "PortName" = tempJson ->> 'PortName', "ForeignCurrency" = tempJson ->> 'ForeignCurrency', "CountryCode" = tempJson ->> 'CountryCode', "CountryName" = tempJson ->> 'CountryName', "RefundClaim" = (tempJson ->> 'RefundClaim')::boolean, "ExportDuty" = (tempJson ->> 'ExportDuty')::float, "DispatchThrough" = tempJson ->> 'DispatchThrough', "VehicleNumber" = tempJson ->> 'VehicleNumber', "ExchangeRate" =(tempJson ->> 'ExchangeRate')::float, "DestinationPortCode" = tempJson ->> 'DestinationPortCode', "DestinationPortName" = tempJson ->> 'DestinationPortName', "Destination" = tempJson ->> 'Destination', "LUTNumber" = tempJson ->> 'LUTNumber', "PlaceOfReceipt" = tempJson ->> 'PlaceOfReceipt' where "SalesOrderExportDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesOrderExportDetails" ( "SaleOrderId", "ShippingBillNumber", "ShippingBillDate", "PortCode", "PortName", "ForeignCurrency", "CountryCode", "CountryName", "RefundClaim", "ExportDuty", "DispatchThrough", "VehicleNumber", "ExchangeRate", "DestinationPortCode", "DestinationPortName", "Destination", "LUTNumber", "PlaceOfReceipt" ) values ( salesOrder_id, tempJson ->> 'ShippingBillNumber', (tempJson ->> 'ShippingBillDate')::date, tempJson ->> 'PortCode', tempJson ->> 'PortName', tempJson ->> 'ForeignCurrency', tempJson ->> 'CountryCode', tempJson ->> 'CountryName', (tempJson ->> 'RefundClaim')::boolean, (tempJson ->> 'ExportDuty')::float, tempJson ->> 'DispatchThrough', tempJson ->> 'VehicleNumber', (tempJson ->> 'ExchangeRate')::float, tempJson ->> 'DestinationPortCode', tempJson ->> 'DestinationPortName', tempJson ->> 'Destination', tempJson ->> 'LUTNumber', tempJson ->> 'PlaceOfReceipt' ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesOrder_data ->> 'SalesOrderValueDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesOrderValueDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesOrderValueDetails" svd where svd."SalesOrderValueDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesOrderValueDetails" set "AssessableValue" =(tempJson ->> 'AssessableValue')::float, "IGST" =(tempJson ->> 'IGST')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "Cess" =(tempJson ->> 'Cess')::float, "StateCess" =(tempJson ->> 'StateCess')::float, "InvoiceValue" =(tempJson ->> 'InvoiceValue')::float, "RoundOffAmount" =(tempJson ->> 'RoundOffAmount')::float, "InvoiceValueForeignCurrency" =(tempJson ->> 'InvoiceValueForeignCurrency')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharge" =(tempJson ->> 'OtherCharge')::float, "OtherChargeTaxable" =(tempJson ->> 'OtherChargeTaxable')::float, "TCSRate" =(tempJson ->> 'TCSRate')::float, "TCSAmount" =(tempJson ->> 'TCSAmount')::float where "SalesOrderValueDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesOrderValueDetails" ( "SaleOrderId", "AssessableValue", "IGST", "CGST", "SGST", "Cess", "StateCess", "InvoiceValue", "RoundOffAmount", "InvoiceValueForeignCurrency", "Discount", "OtherCharge", "OtherChargeTaxable", "TCSRate", "TCSAmount" ) values ( salesOrder_id, (tempJson ->> 'AssessableValue')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'Cess')::float, (tempJson ->> 'StateCess')::float, (tempJson ->> 'InvoiceValue')::float, (tempJson ->> 'RoundOffAmount')::float, (tempJson ->> 'InvoiceValueForeignCurrency')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharge')::float, (tempJson ->> 'OtherChargeTaxable')::float, (tempJson ->> 'TCSRate')::float, (tempJson ->> 'TCSAmount')::float ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesOrder_data ->> 'SalesOrderDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesOrderDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesOrderDetails" sod where sod."SalesOrderDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesOrderDetails" set "ModeTermsOfPayment" =(tempJson ->> 'ModeTermsOfPayment'), "TermsOfDelivery" =(tempJson ->> 'TermsOfDelivery'), "TermAndCondition" =(tempJson ->> 'TermAndCondition') where "SalesOrderDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesOrderDetails" ( "SaleOrderId", "ModeTermsOfPayment", "TermsOfDelivery", "TermAndCondition" ) values ( salesOrder_id, (tempJson ->> 'ModeTermsOfPayment'), (tempJson ->> 'TermsOfDelivery'), (tempJson ->> 'TermAndCondition') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((salesOrder_data ->> 'SalesOrderItems')::jsonb); for i in 0.. item_count-1 loop tempJson = (salesOrder_data ->> 'SalesOrderItems')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesOrderItemsId'); if flag = 'D' then delete from "10083_10833"."SalesOrderItems" si where si."SalesOrderItemsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesOrderItems" set "StockItemId" =(tempJson ->> 'StockItemId')::integer, "ItemName" =(tempJson ->> 'ItemName'), "ItemSerialNumber" =(tempJson ->> 'ItemSerialNumber')::integer, "ItemCode" =(tempJson ->> 'ItemCode')::integer, "ItemDescription" =(tempJson ->> 'ItemDescription'), "HSNSAC" =(tempJson ->> 'HSNSAC'), "BarCode" =(tempJson ->> 'BarCode'), "OrderQuantity" =(tempJson ->> 'OrderQuantity')::float, "BalanceQuantity" =(tempJson ->> 'BalanceQuantity')::float, "FreeQuantity" =(tempJson ->> 'FreeQuantity')::float, "UnitPrice" =(tempJson ->> 'UnitPrice')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharges" =(tempJson ->> 'OtherCharges')::float, "TaxableValue" =(tempJson ->> 'TaxableValue')::float, "GstRate" =(tempJson ->> 'GstRate')::float, "CessRate" =(tempJson ->> 'CessRate')::float, "StateCessRateCode" =(tempJson ->> 'StateCessRateCode')::float, "StateCessRateName" =(tempJson ->> 'StateCessRateName')::integer, "IGST" =(tempJson ->> 'IGST')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "Cess" =(tempJson ->> 'Cess')::float, "StateCess" =(tempJson ->> 'StateCess')::float, "CessNonAdvolRateCode" =(tempJson ->> 'CessNonAdvolRateCode')::float, "CessNonAdvolRateName" =(tempJson ->> 'CessNonAdvolRateName')::float, "CessNonAdvolUnit" =(tempJson ->> 'CessNonAdvolUnit')::float, "StateCessNonAdvolRateCode" =(tempJson ->> 'StateCessNonAdvolRateCode')::float, "StateCessNonAdvolRateName" =(tempJson ->> 'StateCessNonAdvolRateName')::float, "StateCessNonAdvolUnit" =(tempJson ->> 'StateCessNonAdvolUnit')::float, "CessNonAdvol" =(tempJson ->> 'CessNonAdvol')::float, "StateCessNonAdvol" =(tempJson ->> 'StateCessNonAdvol')::float, "TotalItemValue" =(tempJson ->> 'TotalItemValue')::float, "DueDate" =(tempJson ->> 'DueDate')::date where "SalesOrderItemsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesOrderItems" ( "SaleOrderId", "StockItemId", "ItemName", "ItemSerialNumber", "ItemCode", "ItemDescription", "HSNSAC", "BarCode", "OrderQuantity", "BalanceQuantity", "FreeQuantity", "UnitPrice", "SubTotal", "Discount", "OtherCharges", "TaxableValue", "GstRate", "CessRate", "StateCessRateCode", "StateCessRateName", "IGST", "CGST", "SGST", "Cess", "StateCess", "CessNonAdvolRateCode", "CessNonAdvolRateName", "CessNonAdvolUnit", "StateCessNonAdvolRateCode", "StateCessNonAdvolRateName", "StateCessNonAdvolUnit", "CessNonAdvol", "StateCessNonAdvol", "TotalItemValue", "DueDate" ) values ( salesOrder_id, (tempJson ->> 'StockItemId')::integer, (tempJson ->> 'ItemName'), (tempJson ->> 'ItemSerialNumber')::integer, (tempJson ->> 'ItemCode')::integer, (tempJson ->> 'ItemDescription'), (tempJson ->> 'HSNSAC'), (tempJson ->> 'BarCode'), (tempJson ->> 'OrderQuantity')::float, (tempJson ->> 'BalanceQuantity')::float, (tempJson ->> 'FreeQuantity')::float, (tempJson ->> 'UnitPrice')::float, (tempJson ->> 'SubTotal')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharges')::float, (tempJson ->> 'TaxableValue')::float, (tempJson ->> 'GstRate')::float, (tempJson ->> 'CessRate')::float, (tempJson ->> 'StateCessRateCode')::float, (tempJson ->> 'StateCessRateName')::integer, (tempJson ->> 'IGST')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'Cess')::float, (tempJson ->> 'StateCess')::float, (tempJson ->> 'CessNonAdvolRateCode')::float, (tempJson ->> 'CessNonAdvolRateName')::float, (tempJson ->> 'CessNonAdvolUnit')::float, (tempJson ->> 'StateCessNonAdvolRateCode')::float, (tempJson ->> 'StateCessNonAdvolRateName')::float, (tempJson ->> 'StateCessNonAdvolUnit')::float, (tempJson ->> 'CessNonAdvol')::float, (tempJson ->> 'StateCessNonAdvol')::float, (tempJson ->> 'TotalItemValue')::float, (tempJson ->> 'DueDate')::date ) returning "SalesOrderItemsId" into salesOrder_item_id; end if; end if; if flag <> 'D' then flag := ''; temp_id := 0; tempJson := (tempJson ->> 'SalesOrderBatchDetails')::jsonb; flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesOrderBatchDetailsId'); if flag = 'A' then insert into "10083_10833"."SalesOrderBatchDetails" ( "SalesOrderItemsId", "Name", "SerialNumber", "ExpiryDate", "ManufacturingDate" ) values ( salesOrder_item_id, (tempJson ->> 'Name'), (tempJson ->> 'SerialNumber')::integer, (tempJson ->> 'ExpiryDate')::date, (tempJson ->> 'ManufacturingDate')::date ); elseif flag = 'U' then update "10083_10833"."SalesOrderBatchDetails" set "SalesOrderItemsId" =(tempJson ->> 'SalesOrderItemsId')::integer, "Name" =(tempJson ->> 'Name'), "SerialNumber" =(tempJson ->> 'SerialNumber')::integer, "ExpiryDate" =(tempJson ->> 'ExpiryDate')::date, "ManufacturingDate" =(tempJson ->> 'ManufacturingDate')::date where "SalesOrderBatchDetailsId" = temp_id; end if; end if; end loop; end; $$;


ALTER PROCEDURE "10083_10833".salesorder_update_add(IN salesorder_data jsonb, OUT salesorder_id integer) OWNER TO "10083";

--
-- TOC entry 2358 (class 1255 OID 186199)
-- Name: salesreturn_update_add(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".salesreturn_update_add(IN salesreturn_data jsonb, OUT salereturn_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; flag char(1); temp_id integer; item_count integer; saleReturn_item_id integer; other_charges_count integer; sales_return_item_wareHouse_count integer; customer_data record; stock_group_id integer; temp_WareHouse_Id integer; tempWarehouseJson jsonb; tempBatchJson jsonb; updateAutoNumber boolean; temp_customer_id integer; begin saleReturn_Id := (salesReturn_data->>'SaleReturnId')::integer; flag := (salesReturn_data->>'Flag'); if flag = 'U' then update "10083_10833"."SalesReturn" set "Number" = (salesReturn_data ->>'Number'), "Date" = (salesReturn_data->>'Date')::date, "FinancialYear" = (salesReturn_data->>'FinancialYear')::integer, "TemplateId" = (salesReturn_data->>'TemplateId')::integer, "DocumentName" = salesReturn_data->>'DocumentName', "CustomerId" = (salesReturn_data->>'CustomerId')::integer, "ReverseCharge" = salesReturn_data->>'ReverseCharge', "TermAndConditionId" = (salesReturn_data->>'TermAndConditionId')::integer, "TermAndConditionText" = salesReturn_data->>'TermAndConditionText', "Title" = salesReturn_data->>'Title', "InvoiceRemark" = salesReturn_data->>'InvoiceRemark', "OriginalInvoiceNo" = (salesReturn_data->>'OriginalInvoiceNo'), "OriginalInvoiceDate" = (salesReturn_data->>'OriginalInvoiceDate')::date, "CurrencyId" = (salesReturn_data ->> 'CurrencyId')::integer, "SalesPersonId" = (salesReturn_data ->> 'SalesPersonId')::integer, "ExchangeRate" =(salesReturn_data ->> 'ExchangeRate')::float, "EcomGSTIN" = (salesReturn_data->> 'EcomGSTIN'), "InvoiceType" = (salesReturn_data->>'InvoiceType') where "SalesReturn"."SaleReturnId" = saleReturn_id; elseif flag = 'A' then insert into "10083_10833"."SalesReturn" ( "Number", "Date", "FinancialYear", "TemplateId", "DocumentName", "CustomerId", "ReverseCharge", "TermAndConditionId", "TermAndConditionText", "Title", "InvoiceRemark", "OriginalInvoiceNo", "OriginalInvoiceDate", "EcomGSTIN", "CurrencyId", "SalesPersonId", "ExchangeRate", "DocumentStatus", "InvoiceType" ) values( (salesReturn_data ->>'Number'), (salesReturn_data->>'Date')::date, (salesReturn_data->>'FinancialYear')::integer, (salesReturn_data->>'TemplateId')::integer, salesReturn_data->>'DocumentName', (salesReturn_data->>'CustomerId')::integer, salesReturn_data->>'ReverseCharge', (salesReturn_data->>'TermAndConditionId')::integer, salesReturn_data->>'TermAndConditionText', salesReturn_data->>'Title', salesReturn_data->>'InvoiceRemark', (salesReturn_data->>'OriginalInvoiceNo'), (salesReturn_data->>'OriginalInvoiceDate')::date, (salesReturn_data->> 'EcomGSTIN'), (salesReturn_data ->> 'CurrencyId')::integer, (salesReturn_data ->> 'SalesPersonId')::integer, (salesReturn_data ->> 'ExchangeRate')::float, (coalesce((salesReturn_data->>'DocumentStatus')::integer, 1)::integer), (salesReturn_data->>'InvoiceType') ) returning "SaleReturnId" into saleReturn_Id; end if; flag := ''; tempJson := (salesReturn_data ->> 'SalesReturnBillTo'); if tempJson is not null then if flag <> 'D' and (tempJson ->> 'MapFromMaster')::boolean is true and tempJson ->> 'CustomerBillingAddressId' is not null then select "Address" , "City" , "StateCode" , "StateName" , "Pincode" , "CountryCode" , "CountryName" from "10083_10833"."CustomerBillingAddress" where "CustomerBillingAddressId" = (tempJson ->> 'CustomerBillingAddressId')::integer into customer_data; tempJson := jsonb_set(tempJson, '{Address}', to_jsonb(coalesce(customer_data."Address", ''))); tempJson := jsonb_set(tempJson, '{City}', to_jsonb(coalesce(customer_data."City", ''))); tempJson := jsonb_set(tempJson, '{StateCode}', to_jsonb(coalesce(customer_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{StateName}', to_jsonb(coalesce(customer_data."StateName", ''))); tempJson := jsonb_set(tempJson, '{PinZipCode}', to_jsonb(coalesce(customer_data."Pincode", ''))); tempJson := jsonb_set(tempJson, '{CountryCode}', to_jsonb(coalesce(customer_data."CountryCode", ''))); tempJson := jsonb_set(tempJson, '{CountryName}', to_jsonb(coalesce(customer_data."CountryName", ''))); tempJson := jsonb_set(tempJson, '{POSCode}', to_jsonb(coalesce(customer_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{POSName}', to_jsonb(coalesce(customer_data."StateName", ''))); end if; flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesReturnBillToId'); if flag = 'D' then delete from "10083_10833"."SalesReturnBillTo" sbt where sbt."SalesReturnBillToId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesReturnBillTo" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName', "POSCode" = (tempJson->> 'POSCode'), "POSName" = tempJson->> 'POSName', "GSTIN" = tempJson->> 'GSTIN' where "SalesReturnBillToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesReturnBillTo" ( "SaleReturnId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "POSCode", "POSName", "GSTIN" ) values ( (saleReturn_Id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'POSCode'), (tempJson->> 'POSName'), (tempJson->> 'GSTIN') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesReturn_data ->> 'SalesReturnShipTo'); if tempJson is not null then if flag <> 'D' and (tempJson ->> 'MapFromMaster')::boolean is true and tempJson ->> 'CustomerShippingAddressId' is not null then select "Address", "City", "StateName", "StateCode", "Pincode", "CountryCode", "CountryName" from "10083_10833"."CustomerShippingAddress" where "CustomerShippingAddressId" = (tempJson ->> 'CustomerShippingAddressId')::integer into customer_data; tempJson := jsonb_set(tempJson, '{Address}', to_jsonb(coalesce(customer_data."Address", ''))); tempJson := jsonb_set(tempJson, '{City}', to_jsonb(coalesce(customer_data."City", ''))); tempJson := jsonb_set(tempJson, '{StateCode}', to_jsonb(coalesce(customer_data."StateCode", ''))); tempJson := jsonb_set(tempJson, '{StateName}', to_jsonb(coalesce(customer_data."StateName", ''))); tempJson := jsonb_set(tempJson, '{PinZipCode}', to_jsonb(coalesce(customer_data."Pincode", ''))); tempJson := jsonb_set(tempJson, '{CountryCode}', to_jsonb(coalesce(customer_data."CountryCode", ''))); tempJson := jsonb_set(tempJson, '{CountryName}', to_jsonb(coalesce(customer_data."CountryName", ''))); end if; flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'SalesReturnShipToId'); if flag = 'D' then delete from "10083_10833"."SalesReturnShipTo" sst where sst."SalesReturnShipToId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesReturnShipTo" set "MailingName" = tempJson->> 'MailingName', "Address" = tempJson->> 'Address', "City" = tempJson->> 'City', "StateCode" = (tempJson->> 'StateCode'), "StateName" = tempJson->> 'StateName', "PinZipCode" = tempJson->> 'PinZipCode', "CountryCode" = (tempJson->> 'CountryCode'), "CountryName" = tempJson->> 'CountryName', "GSTIN" = tempJson->> 'GSTIN' where "SalesReturnShipToId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesReturnShipTo" ( "SaleReturnId", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName", "GSTIN" ) values ( (saleReturn_Id), (tempJson->> 'MailingName'), (tempJson->> 'Address'), (tempJson->> 'City'), (tempJson->> 'StateCode'), (tempJson->> 'StateName'), (tempJson->> 'PinZipCode'), (tempJson->> 'CountryCode'), (tempJson->> 'CountryName'), (tempJson->> 'GSTIN') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesReturn_data ->> 'SalesReturnReceiptDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesReturnReceiptDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesReturnReceiptDetails" sdd where sdd."SalesReturnReceiptDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesReturnReceiptDetails" set "ReceiptDocNo" = (tempJson ->> 'ReceiptDocNo'), "ReceiptThrough" = (tempJson ->> 'ReceiptThrough'), "Destination" = (tempJson ->> 'Destination'), "CarrierNameAgent" = (tempJson ->> 'CarrierNameAgent'), "BillOfLandingLrRrNo" = (tempJson ->> 'BillOfLandingLrRrNo'), "Date" = (tempJson ->> 'Date')::date, "MotorVehicleNo" = (tempJson ->> 'MotorVehicleNo'), "MailingName" = (tempJson ->> 'MailingName'), "Address" = (tempJson ->> 'Address'), "City" = (tempJson ->> 'City'), "StateCode" = (tempJson ->> 'StateCode'), "StateName" = (tempJson ->> 'StateName'), "PinZipCode" = (tempJson ->> 'PinZipCode'), "CountryCode" = (tempJson ->> 'CountryCode'), "CountryName" = (tempJson ->> 'CountryName') where "SalesReturnReceiptDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesReturnReceiptDetails" ( "SaleReturnId", "ReceiptDocNo", "ReceiptThrough", "Destination", "CarrierNameAgent", "BillOfLandingLrRrNo", "Date", "MotorVehicleNo", "MailingName", "Address", "City", "StateCode", "StateName", "PinZipCode", "CountryCode", "CountryName" ) values ( saleReturn_Id, (tempJson ->> 'ReceiptDocNo'), (tempJson ->> 'ReceiptThrough'), (tempJson ->> 'Destination'), (tempJson ->> 'CarrierNameAgent'), (tempJson ->> 'BillOfLandingLrRrNo'), (tempJson ->> 'Date')::date, (tempJson ->> 'MotorVehicleNo'), (tempJson ->> 'MailingName'), (tempJson ->> 'Address'), (tempJson ->> 'City'), (tempJson ->> 'StateCode'), (tempJson ->> 'StateName'), (tempJson ->> 'PinZipCode'), (tempJson ->> 'CountryCode'), (tempJson ->> 'CountryName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesReturn_data ->> 'SalesReturnImportDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesReturnImportDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesReturnImportDetails" sed where sed."SalesReturnImportDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesReturnImportDetails" set "ShippingBillNumber" = tempJson ->> 'ShippingBillNumber', "ShippingBillDate" = (tempJson ->> 'ShippingBillDate')::date, "PortCode" = tempJson ->> 'PortCode', "PortName" = tempJson ->> 'PortName', "CountryCode" = tempJson ->> 'CountryCode', "CountryName" = tempJson ->> 'CountryName', "RefundClaim" = (tempJson ->> 'RefundClaim')::boolean, "ImportDuty" = (tempJson ->> 'ImportDuty')::float, "DispatchThrough" = tempJson ->> 'DispatchThrough', "VesselFlightNo" = tempJson ->> 'VesselFlightNo', "DestinationPortCode" = tempJson ->> 'DestinationPortCode', "DestinationPortName" = tempJson ->> 'DestinationPortName', "Destination" = tempJson ->> 'Destination', "LUTMasterId" = (tempJson ->> 'LUTMasterId')::integer, "LUTNumber" = tempJson ->> 'LUTNumber', "PlaceOfReceiptByShipper" = tempJson ->> 'PlaceOfReceiptByShipper', "PortOfLoadingCode" = tempJson ->> 'PortOfLoadingCode', "PortOfLoadingName" = tempJson ->> 'PortOfLoadingName', "PortOfDischargeCode" = tempJson ->> 'PortOfDischargeCode', "PortOfDischargeName" = tempJson ->> 'PortOfDischargeName' where "SalesReturnImportDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesReturnImportDetails" ( "SaleReturnId", "ShippingBillNumber", "ShippingBillDate", "PortCode", "PortName", "CountryCode", "CountryName", "RefundClaim", "ImportDuty", "DispatchThrough", "VesselFlightNo", "DestinationPortCode", "DestinationPortName", "Destination", "LUTMasterId", "LUTNumber", "PlaceOfReceiptByShipper", "PortOfLoadingCode", "PortOfLoadingName", "PortOfDischargeCode", "PortOfDischargeName" ) values ( saleReturn_Id, tempJson ->> 'ShippingBillNumber', (tempJson ->> 'ShippingBillDate')::date, tempJson ->> 'PortCode', tempJson ->> 'PortName', tempJson ->> 'CountryCode', tempJson ->> 'CountryName', (tempJson ->> 'RefundClaim')::boolean, (tempJson ->> 'ImportDuty')::float, tempJson ->> 'DispatchThrough', tempJson ->> 'VesselFlightNo', tempJson ->> 'DestinationPortCode', tempJson ->> 'DestinationPortName', tempJson ->> 'Destination', (tempJson ->> 'LUTMasterId')::integer, tempJson ->> 'LUTNumber', tempJson ->> 'PlaceOfReceiptByShipper', (tempJson ->> 'PortOfLoadingCode'), (tempJson ->> 'PortOfLoadingName'), (tempJson ->> 'PortOfDischargeCode'), (tempJson ->> 'PortOfDischargeName') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesReturn_data ->> 'SalesReturnValueDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesReturnValueDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesReturnValueDetails" svd where svd."SalesReturnValueDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesReturnValueDetails" set "AssessableValue" =(tempJson ->> 'AssessableValue')::float, "IGSTValue" =(tempJson ->> 'IGSTValue')::float, "CGSTValue" =(tempJson ->> 'CGSTValue')::float, "SGSTValue" =(tempJson ->> 'SGSTValue')::float, "CessValue" =(tempJson ->> 'CessValue')::float, "StateCessValue" =(tempJson ->> 'StateCessValue')::float, "TotalInvoiceValue" =(tempJson ->> 'TotalInvoiceValue')::float, "RoundOffAmount" =(tempJson ->> 'RoundOffAmount')::float, "TotalInvValForeignCurrency" =(tempJson ->> 'TotalInvValForeignCurrency')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharge" =(tempJson ->> 'OtherCharge')::float, "OtherChargeTaxable" =(tempJson ->> 'OtherChargeTaxable')::float, "TCSRate" =(tempJson ->> 'TCSRate')::float, "InvoiceValueWithoutTCS" =(tempJson ->> 'InvoiceValueWithoutTCS')::float, "TCSAmount" =(tempJson ->> 'TCSAmount')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float, "DiscountBeforeTax" = (tempJson ->> 'DiscountBeforeTax')::float where "SalesReturnValueDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesReturnValueDetails" ( "SaleReturnId", "AssessableValue", "IGSTValue", "CGSTValue", "SGSTValue", "CessValue", "StateCessValue", "TotalInvoiceValue", "RoundOffAmount", "TotalInvValForeignCurrency", "Discount", "OtherCharge", "OtherChargeTaxable", "TCSRate", "InvoiceValueWithoutTCS", "TCSAmount", "SubTotal" , "DiscountBeforeTax") values ( saleReturn_Id, (tempJson ->> 'AssessableValue')::float, (tempJson ->> 'IGSTValue')::float, (tempJson ->> 'CGSTValue')::float, (tempJson ->> 'SGSTValue')::float, (tempJson ->> 'CessValue')::float, (tempJson ->> 'StateCessValue')::float, (tempJson ->> 'TotalInvoiceValue')::float, (tempJson ->> 'RoundOffAmount')::float, (tempJson ->> 'TotalInvValForeignCurrency')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharge')::float, (tempJson ->> 'OtherChargeTaxable')::float, (tempJson ->> 'TCSRate')::float, (tempJson ->> 'InvoiceValueWithoutTCS')::float, (tempJson ->> 'TCSAmount')::float, (tempJson ->> 'SubTotal')::float, (tempJson ->> 'DiscountBeforeTax')::float ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesReturn_data ->> 'SalesReturnEwayBillsDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesReturnEwayBillsDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesReturnEwayBillsDetails" sod where sod."SalesReturnEwayBillsDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesReturnEwayBillsDetails" set "GSTIN" = (tempJson->> 'GSTIN'), "TransportersId" = (tempJson->> 'TransportersId')::integer, "TransporterName" = (tempJson->> 'TransporterName'), "TransportModeCode" = (tempJson->> 'TransportModeCode')::integer, "TransportModeName" = (tempJson->> 'TransportModeName'), "Distance" = (tempJson->> 'Distance'), "TransportDocumentNumber" = (tempJson->> 'TransportDocumentNumber'), "TransportDocumentDate" = (tempJson->> 'TransportDocumentDate')::date, "VehicleNumber" = (tempJson->> 'VehicleNumber'), "VehicleTypeCode" = (tempJson->> 'VehicleTypeCode'), "VehicleTypeName" = (tempJson->> 'VehicleTypeName'), "EwayBillNumber" = (tempJson->> 'EwayBillNumber'), "EwayBillDate" = (tempJson->> 'EwayBillDate')::date, "DispatchFrom" = (tempJson->> 'DispatchFrom'), "ShipTo" = (tempJson->> 'ShipTo') where "SalesReturnEwayBillsDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesReturnEwayBillsDetails" ( "SaleReturnId", "GSTIN", "TransportersId", "TransporterName", "TransportModeCode", "TransportModeName", "Distance", "TransportDocumentNumber", "TransportDocumentDate", "VehicleNumber", "VehicleTypeCode", "VehicleTypeName", "EwayBillNumber", "EwayBillDate", "DispatchFrom", "ShipTo" ) values ( saleReturn_Id, (tempJson->> 'GSTIN'), (tempJson->> 'TransportersId')::integer, (tempJson->> 'TransporterName'), (tempJson->> 'TransportModeCode')::integer, (tempJson->> 'TransportModeName'), (tempJson->> 'Distance'), (tempJson->> 'TransportDocumentNumber'), (tempJson->> 'TransportDocumentDate')::date, (tempJson->> 'VehicleNumber'), (tempJson->> 'VehicleTypeCode'), (tempJson->> 'VehicleTypeName'), (tempJson->> 'EwayBillNumber'), (tempJson->> 'EwayBillDate')::date, (tempJson->> 'DispatchFrom'), (tempJson->> 'ShipTo') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; tempJson := (salesReturn_data ->> 'SalesReturnOtherDetails'); if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesReturnOtherDetailsId'); if flag = 'D' then delete from "10083_10833"."SalesReturnOtherDetails" sod where sod."SalesReturnOtherDetailsId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesReturnOtherDetails" set "ModeTermsOfPayment" =(tempJson ->> 'ModeTermsOfPayment'), "TermsOfDelivery" =(tempJson ->> 'TermsOfDelivery'), "TermAndCondition" =(tempJson ->> 'TermAndCondition') where "SalesReturnOtherDetailsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesReturnOtherDetails" ( "SaleReturnId", "ModeTermsOfPayment", "TermsOfDelivery", "TermAndCondition" ) values ( saleReturn_Id, (tempJson ->> 'ModeTermsOfPayment'), (tempJson ->> 'TermsOfDelivery'), (tempJson ->> 'TermAndCondition') ); end if; end if; flag := ''; tempJson := null; temp_id := 0; other_charges_count := jsonb_array_length((salesReturn_data ->> 'SalesReturnOtherCharges')::jsonb); if other_charges_count > 0 then for i in 0.. other_charges_count-1 loop tempJson = (salesReturn_data ->> 'SalesReturnOtherCharges')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesReturnOtherChargeId')::integer; if flag = 'D' then delete from "10083_10833"."SalesReturnOtherCharges" sroc where sroc."SalesReturnOtherChargeId" = temp_id; elseif flag = 'U' then update "10083_10833"."SalesReturnOtherCharges" set "OtherChargeId" =(tempJson ->> 'OtherChargeId')::integer, "GSTRateCode" =(tempJson ->> 'GSTRateCode')::float, "GSTRateName" =(tempJson ->> 'GSTRateName')::float, "Amount" =(tempJson ->> 'Amount')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "IGST" =(tempJson ->> 'IGST')::float, "HSN" =(tempJson ->> 'HSN'), "TaxableCode" =(tempJson ->> 'TaxableCode')::integer, "TaxableName" =(tempJson ->> 'TaxableName'), "AppropriateCode" =(tempJson ->>'AppropriateCode')::integer, "AppropriateName" =(tempJson ->>'AppropriateName'), "ForeignCurrencyPrice" =(tempJson ->> 'ForeignCurrencyPrice')::float, "Name" =(tempJson ->>'Name') where "SalesReturnOtherChargeId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesReturnOtherCharges" ( "SaleReturnId", "OtherChargeId", "GSTRateCode", "GSTRateName", "Amount", "CGST", "SGST", "IGST", "HSN", "TaxableCode", "TaxableName", "AppropriateCode", "AppropriateName", "ForeignCurrencyPrice", "Name") values( saleReturn_Id, (tempJson ->> 'OtherChargeId')::integer, (tempJson ->> 'GSTRateCode')::float, (tempJson ->> 'GSTRateName')::float, (tempJson ->> 'Amount')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'IGST')::float, (tempJson ->> 'HSN'), (tempJson ->> 'TaxableCode')::integer, (tempJson ->> 'TaxableName'), (tempJson ->> 'AppropriateCode')::integer, (tempJson ->> 'AppropriateName'), (tempJson ->> 'ForeignCurrencyPrice')::float, (tempJson ->>'Name')); end if; end if; end loop; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((salesReturn_data ->> 'SalesReturnItems')::jsonb); if item_count > 0 then for i in 0.. item_count-1 loop tempJson = (salesReturn_data ->> 'SalesReturnItems')::jsonb->i; if tempJson is not null then flag := (tempJson->> 'Flag'); temp_id := (tempJson ->> 'SalesReturnItemsId'); if flag = 'D' then delete from "10083_10833"."SalesReturnItems" si where si."SalesReturnItemsId" = temp_id; insert into "10083_10833"."CustomerTurnOver" ( "CustomerId", "In", "Out" ) values ( ( salesReturn_data->>'CustomerId' ) ::INTEGER, 0, (tempJson ->> 'TempTaxableValue')::FLOAT ) on conflict ("CustomerId") where "CustomerId" = ( salesReturn_data->>'CustomerId' ) ::INTEGER do update set "Out" = (coalesce("10083_10833"."CustomerTurnOver"."Out" , 0) - coalesce((tempJson ->> 'TempTaxableValue')::FLOAT, 0))::FLOAT; elseif flag = 'U' then update "10083_10833"."SalesReturnItems" set "StockItemId" =(tempJson ->> 'StockItemId')::integer, "ItemName" =(tempJson ->> 'ItemName'), "ItemSerialNumber" =(tempJson ->> 'ItemSerialNumber')::integer, "ItemCode" =(tempJson ->> 'ItemCode')::integer, "ItemDescription" =(tempJson ->> 'ItemDescription'), "HSNSAC" =(tempJson ->> 'HSNSAC'), "BarCode" =(tempJson ->> 'BarCode'), "Quantity" =(tempJson ->> 'Quantity')::float, "FreeQuantity" =(tempJson ->> 'FreeQuantity')::float, "UnitPrice" =(tempJson ->> 'UnitPrice')::float, "SubTotal" =(tempJson ->> 'SubTotal')::float, "Discount" =(tempJson ->> 'Discount')::float, "OtherCharges" =(tempJson ->> 'OtherCharges')::float, "TaxableValue" =(tempJson ->> 'TaxableValue')::float, "GstRate" =(tempJson ->> 'GstRate')::float, "CessRate" =(tempJson ->> 'CessRate')::float, "StateCessRateCode" =(tempJson ->> 'StateCessRateCode')::float, "StateCessRateName" =(tempJson ->> 'StateCessRateName')::integer, "IGST" =(tempJson ->> 'IGST')::float, "CGST" =(tempJson ->> 'CGST')::float, "SGST" =(tempJson ->> 'SGST')::float, "Cess" =(tempJson ->> 'Cess')::float, "StateCess" =(tempJson ->> 'StateCess')::float, "CessNonAdvolRateCode" =(tempJson ->> 'CessNonAdvolRateCode')::float, "CessNonAdvolRateName" =(tempJson ->> 'CessNonAdvolRateName')::float, "CessNonAdvolUnit" =(tempJson ->> 'CessNonAdvolUnit')::float, "StateCessNonAdvolRateCode" =(tempJson ->> 'StateCessNonAdvolRateCode')::float, "StateCessNonAdvolRateName" =(tempJson ->> 'StateCessNonAdvolRateName')::float, "StateCessNonAdvolUnit" =(tempJson ->> 'StateCessNonAdvolUnit')::float, "CessNonAdvol" =(tempJson ->> 'CessNonAdvol')::float, "StateCessNonAdvol" =(tempJson ->> 'StateCessNonAdvol')::float, "TotalItemValue" =(tempJson ->> 'TotalItemValue')::float, "MarksContainerNo" =(tempJson ->> 'MarksContainerNo'), "NumberOfPackages" =(tempJson ->> 'NumberOfPackages')::float, "TaxabilityCode" = (tempJson ->> 'TaxabilityCode'):: integer, "TaxabilityName" = (tempJson ->> 'TaxabilityName'), "ForeignCurrencyPrice" =(tempJson ->> 'ForeignCurrencyPrice')::float, "UOMCode" = (tempJson ->> 'UOMCode'), "DiscountRate" =(tempJson ->> 'DiscountRate')::float, "PreTaxValue" =(tempJson ->> 'PreTaxValue')::float where "SalesReturnItemsId" = temp_id; temp_Customer_Id := (salesReturn_data->>'TempCustomerId') ::integer; if (salesReturn_data ->> 'CustomerId')::integer <> temp_Customer_Id then insert into "10083_10833"."CustomerTurnOver" ( "CustomerId", "In", "Out" ) values ( ( salesReturn_data->>'CustomerId' ) ::INTEGER, 0, (tempJson ->> 'TempTaxableValue')::FLOAT ) on conflict ("CustomerId") where "CustomerId" = (salesReturn_data->>'CustomerId') ::INTEGER do update set "Out" = (coalesce("10083_10833"."CustomerTurnOver"."Out" , 0) + coalesce((tempJson ->> 'TempTaxableValue')::FLOAT, 0))::FLOAT; update "10083_10833"."CustomerTurnOver" set "Out" =(coalesce("10083_10833"."CustomerTurnOver"."Out" , 0) - coalesce((tempJson ->> 'TempTaxableValue')::FLOAT, 0))::FLOAT where "CustomerId" = ( salesReturn_data->>'TempCustomerId' ) ::INTEGER; else insert into "10083_10833"."CustomerTurnOver" ( "CustomerId", "In", "Out" ) values ( ( salesReturn_data->>'CustomerId' ) ::INTEGER, 0, (tempJson ->> 'TempTaxableValue')::FLOAT ) on conflict ("CustomerId") where "CustomerId" = (salesReturn_data->>'CustomerId') ::INTEGER do update set "Out" = (coalesce("10083_10833"."CustomerTurnOver"."Out" , 0) + coalesce((tempJson ->> 'TempTaxableValue')::FLOAT, 0))::FLOAT; end if; saleReturn_item_id := temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesReturnItems" ( "SaleReturnId", "StockItemId", "ItemName", "ItemSerialNumber", "ItemCode", "ItemDescription", "HSNSAC", "BarCode", "Quantity", "FreeQuantity", "UnitPrice", "SubTotal", "Discount", "OtherCharges", "TaxableValue", "GstRate", "CessRate", "StateCessRateCode", "StateCessRateName", "IGST", "CGST", "SGST", "Cess", "StateCess", "CessNonAdvolRateCode", "CessNonAdvolRateName", "CessNonAdvolUnit", "StateCessNonAdvolRateCode", "StateCessNonAdvolRateName", "StateCessNonAdvolUnit", "CessNonAdvol", "StateCessNonAdvol", "TotalItemValue", "MarksContainerNo", "NumberOfPackages", "TaxabilityCode", "TaxabilityName", "ForeignCurrencyPrice", "UOMCode", "DiscountRate","PreTaxValue" ) values ( saleReturn_Id, (tempJson ->> 'StockItemId')::integer, (tempJson ->> 'ItemName'), (tempJson ->> 'ItemSerialNumber')::integer, (tempJson ->> 'ItemCode')::integer, (tempJson ->> 'ItemDescription'), (tempJson ->> 'HSNSAC'), (tempJson ->> 'BarCode'), (tempJson ->> 'Quantity')::float, (tempJson ->> 'FreeQuantity')::float, (tempJson ->> 'UnitPrice')::float, (tempJson ->> 'SubTotal')::float, (tempJson ->> 'Discount')::float, (tempJson ->> 'OtherCharges')::float, (tempJson ->> 'TaxableValue')::float, (tempJson ->> 'GstRate')::float, (tempJson ->> 'CessRate')::float, (tempJson ->> 'StateCessRateCode')::float, (tempJson ->> 'StateCessRateName')::integer, (tempJson ->> 'IGST')::float, (tempJson ->> 'CGST')::float, (tempJson ->> 'SGST')::float, (tempJson ->> 'Cess')::float, (tempJson ->> 'StateCess')::float, (tempJson ->> 'CessNonAdvolRateCode')::float, (tempJson ->> 'CessNonAdvolRateName')::float, (tempJson ->> 'CessNonAdvolUnit')::float, (tempJson ->> 'StateCessNonAdvolRateCode')::float, (tempJson ->> 'StateCessNonAdvolRateName')::float, (tempJson ->> 'StateCessNonAdvolUnit')::float, (tempJson ->> 'CessNonAdvol')::float, (tempJson ->> 'StateCessNonAdvol')::float, (tempJson ->> 'TotalItemValue')::float, (tempJson ->> 'MarksContainerNo'), (tempJson ->> 'NumberOfPackages')::float, (tempJson ->> 'TaxabilityCode'):: integer, (tempJson ->> 'TaxabilityName'), (tempJson ->> 'ForeignCurrencyPrice')::float, (tempJson ->> 'UOMCode'), (tempJson ->> 'DiscountRate')::float,(tempJson ->> 'PreTaxValue')::float ) returning "SalesReturnItemsId" into saleReturn_item_id; insert into "10083_10833"."CustomerTurnOver" ( "CustomerId", "In", "Out" ) values ( ( salesReturn_data->>'CustomerId' ) ::INTEGER, 0, (tempJson ->> 'TempTaxableValue')::FLOAT ) on conflict ("CustomerId") where "CustomerId" = ( salesReturn_data->>'CustomerId' ) ::INTEGER do update set "Out" = (coalesce("10083_10833"."CustomerTurnOver"."Out" , 0) + coalesce((tempJson ->> 'TempTaxableValue')::FLOAT, 0))::FLOAT; end if; end if; if flag <> 'D' then flag := ''; temp_id := 0; tempBatchJson := (tempJson ->> 'SalesReturnBatchDetails')::jsonb; flag := (tempBatchJson->> 'Flag'); temp_id := (tempBatchJson ->> 'SalesReturnBtchDtlsId'); if flag = 'D' then delete from "10083_10833"."SalesReturnBatchDetails" srbd where srbd."SalesReturnBtchDtlsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."SalesReturnBatchDetails" ( "SalesReturnItemsId", "Name", "SerialNumber", "ExpiryDate", "ManufacturingDate" ) values ( saleReturn_item_id, (tempBatchJson ->> 'Name'), (tempBatchJson ->> 'SerialNumber')::integer, (tempBatchJson ->> 'ExpiryDate')::date, (tempBatchJson ->> 'ManufacturingDate')::date ); elseif flag = 'U' then update "10083_10833"."SalesReturnBatchDetails" set "SalesReturnItemsId" =(tempBatchJson ->> 'SalesReturnItemsId')::integer, "Name" =(tempBatchJson ->> 'Name'), "SerialNumber" =(tempBatchJson ->> 'SerialNumber')::integer, "ExpiryDate" =(tempBatchJson ->> 'ExpiryDate')::date, "ManufacturingDate" =(tempBatchJson ->> 'ManufacturingDate')::date where "SalesReturnBtchDtlsId" = temp_id; end if; end if; flag := ''; flag :=(tempJson ->> 'Flag'); if flag <> 'D' then flag := ''; temp_id := 0; sales_return_item_wareHouse_count := jsonb_array_length((tempJson ->> 'SalesReturnItemWareHouse')::jsonb); if sales_return_item_wareHouse_count > 0 then for j in 0.. sales_return_item_wareHouse_count-1 loop tempWarehouseJson := (tempJson ->> 'SalesReturnItemWareHouse')::jsonb->j; if tempWarehouseJson is not null then flag := (tempWarehouseJson ->> 'Flag'); temp_id = (tempWarehouseJson ->> 'SRItemWHId'); select "StockGroupId" from "10083_10833"."StockItem" where "StockItemId" = ( tempJson->>'StockItemId' )::INTEGER into stock_group_id; if flag = 'D' then delete from "10083_10833"."SalesReturnItemWareHouse" sriwh where sriwh."SRItemWHId" = temp_id; insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out" ) values ( ( tempJson->>'StockItemId' ) ::INTEGER, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, 0, (tempWarehouseJson ->> 'TempQuantity')::FLOAT ) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = ( tempJson->>'StockItemId' ) ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "Out" = (coalesce("10083_10833"."StockItemBalance"."Out" , 0) + coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT; elseif flag = 'A' then insert into "10083_10833"."SalesReturnItemWareHouse" ( "SalesReturnItemsId", "WareHouseId", "Quantity", "Rate", "Total" ) values (saleReturn_item_id, (tempWarehouseJson ->> 'WareHouseId')::integer, coalesce((tempWarehouseJson ->> 'Quantity')::float, 0), (tempWarehouseJson ->> 'Rate')::float, (tempWarehouseJson ->> 'Total')::float ); insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out" ) values ( ( tempJson->>'StockItemId' ) ::INTEGER, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, 0, (tempWarehouseJson ->> 'TempQuantity')::FLOAT ) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = ( tempjson->>'StockItemId' ) ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "Out" = (coalesce("10083_10833"."StockItemBalance"."Out" , 0) - coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT; elseif flag = 'U' then update "10083_10833"."SalesReturnItemWareHouse" set "SalesReturnItemsId" =(tempWarehouseJson ->> 'SalesReturnItemsId')::integer, "WareHouseId" =(tempWarehouseJson ->> 'WareHouseId')::integer, "Quantity" = coalesce((tempWarehouseJson ->> 'Quantity')::float, 0), "Rate" =(tempWarehouseJson ->> 'Rate')::float, "Total" =(tempWarehouseJson ->> 'Total')::float where "SRItemWHId" = temp_id; temp_WareHouse_Id := (tempWarehouseJson->>'TempWareHouseId') ::integer; if (tempWarehouseJson ->> 'WareHouseId')::integer <> temp_WareHouse_Id then insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out" ) values ( ( tempJson->>'StockItemId' ) ::INTEGER, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, 0, (tempWarehouseJson ->> 'TempQuantity')::FLOAT ) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId') ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "Out" = (coalesce("10083_10833"."StockItemBalance"."Out" , 0) - coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT; update "10083_10833"."StockItemBalance" set "Out" =(coalesce("10083_10833"."StockItemBalance"."Out" , 0) + coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT where "StockItemId" = ( tempJson->>'StockItemId' ) ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'TempWareHouseId')::integer; else insert into "10083_10833"."StockItemBalance" ( "StockItemId", "StockGroupId", "WareHouseId", "In", "Out" ) values ( ( tempJson->>'StockItemId' ) ::INTEGER, stock_group_id, (tempWarehouseJson ->> 'WareHouseId')::integer, 0, (tempWarehouseJson ->> 'TempQuantity')::FLOAT ) on conflict ("StockItemId", "WareHouseId") where "StockItemId" = (tempJson->>'StockItemId') ::INTEGER and "WareHouseId" = (tempWarehouseJson ->> 'WareHouseId')::integer do update set "Out" = (coalesce("10083_10833"."StockItemBalance"."Out" , 0) - coalesce((tempWarehouseJson ->> 'TempQuantity')::FLOAT, 0))::FLOAT; end if; end if; end if; end loop; end if; end if; end loop; end if; updateAutoNumber := (salesReturn_data->>'UpdateAutoNumber') ::boolean ; if (updateAutoNumber = true ) then update "10083_10833"."AutoNumbering" set "StartingNumber" = "StartingNumber" + 1 where "TemplateId" = (salesReturn_data->>'TemplateId')::integer; end if; if exists ( select "Date" from "10083_10833"."LastDocumentDate") then update "10083_10833"."LastDocumentDate" set "Date" = (salesReturn_data->>'Date')::date, "UpdatedOn" = (CURRENT_TIMESTAMP)::date where "Date" < (salesReturn_data->>'Date')::date; else insert into "10083_10833"."LastDocumentDate" ( "Date", "UpdatedOn") values( (salesReturn_data ->> 'Date')::date , (CURRENT_TIMESTAMP)::date ); end if; end; $$;


ALTER PROCEDURE "10083_10833".salesreturn_update_add(IN salesreturn_data jsonb, OUT salereturn_id integer) OWNER TO "10083";

--
-- TOC entry 2337 (class 1255 OID 186209)
-- Name: stockgroup_update_add(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".stockgroup_update_add(IN stockgroup_data jsonb, OUT stockgroup_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; flag char(1); temp_id integer; item_count integer; begin stockGroup_Id :=(stockGroup_data ->> 'StockGroupId')::integer; flag := (stockGroup_data ->> 'Flag'); if flag = 'U' then update "10083_10833"."StockGroup" set "StockGroupId" = (stockGroup_data ->> 'StockGroupId'):: integer, "ParentGroupId" = (stockGroup_data ->> 'ParentGroupId'):: integer, "Name" = (stockGroup_data ->> 'Name'), "ActiveStatus" = (stockGroup_data ->> 'ActiveStatus')::boolean, "Code" = (stockGroup_data ->> 'Code'), "OverrideGroupGSTInfo" = (stockGroup_data ->> 'OverrideGroupGSTInfo')::boolean where "StockGroup"."StockGroupId" = stockGroup_Id; elseif flag = 'A' then insert into "10083_10833"."StockGroup" ("ParentGroupId", "Name", "Code", "OverrideGroupGSTInfo" ) values ( ( stockGroup_data ->> 'ParentGroupId' ):: integer, (stockGroup_data ->> 'Name'), (stockGroup_data ->> 'Code'), (stockGroup_data ->> 'OverrideGroupGSTInfo')::boolean ) returning "StockGroupId" into stockGroup_Id; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((stockGroup_data ->> 'StockGroupGSTInfo'):: jsonb); if item_count > 0 then for i in 0.. item_count - 1 loop temp_id := 0; tempJson := (stockGroup_data ->> 'StockGroupGSTInfo')::jsonb->i; if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := ( tempJson ->> 'StockGroupGSTInfoId' ); if flag = 'D' then delete from "10083_10833"."StockGroupGSTInfo" sigi where sigi."StockGroupGSTInfoId" = temp_id; elseif flag = 'U' then update "10083_10833"."StockGroupGSTInfo" set "ApplicableFrom" = (tempJson ->> 'ApplicableFrom'):: date, "HSN" = (tempJson ->> 'HSN'), "IsNonGST" = (tempJson ->> 'IsNonGST'):: boolean, "TaxabilityCode" = (tempJson ->> 'TaxabilityCode'):: integer, "TaxabilityName" = (tempJson ->> 'TaxabilityName'), "IsReverseChargeApplicableCode" = (tempJson ->> 'IsReverseChargeApplicableCode'):: integer, "IsReverseChargeApplicableName" = (tempJson ->> 'IsReverseChargeApplicableName'), "IsIneligibleForInputCreditCode" = (tempJson ->> 'IsIneligibleForInputCreditCode'):: integer, "IsIneligibleForInputCreditName" = (tempJson ->> 'IsIneligibleForInputCreditName'), "IGSTRateCode" = (tempJson ->> 'IGSTRateCode'):: float, "IGSTRateName" = (tempJson ->> 'IGSTRateName'):: float, "CGSTRate" = (tempJson ->> 'CGSTRate'):: float, "SGSTRate" = (tempJson ->> 'SGSTRate'):: float, "CessRate" = (tempJson ->> 'CessRate'):: float, "StateCessRate" = (tempJson ->> 'StateCessRate'):: float, "CessNonAdvolRate" = (tempJson ->> 'CessNonAdvolRate'):: float, "CessNonAdvolUnit" = (tempJson ->> 'CessNonAdvolUnit'):: float, "StateCessNonAdvolRate" = (tempJson ->> 'StateCessNonAdvolRate'):: float, "StateCessNonAdvolUnit" = (tempJson ->> 'StateCessNonAdvolUnit'):: float where "StockGroupGSTInfoId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."StockGroupGSTInfo" ( "StockGroupId", "ApplicableFrom", "HSN", "IsNonGST", "TaxabilityCode", "TaxabilityName", "IsReverseChargeApplicableCode", "IsReverseChargeApplicableName", "IsIneligibleForInputCreditCode", "IsIneligibleForInputCreditName", "IGSTRateCode", "IGSTRateName", "CGSTRate", "SGSTRate", "CessRate", "StateCessRate", "CessNonAdvolRate", "CessNonAdvolUnit", "StateCessNonAdvolRate", "StateCessNonAdvolUnit" ) values ( (stockGroup_Id), (tempJson ->> 'ApplicableFrom'):: date, (tempJson ->> 'HSN'), (tempJson ->> 'IsNonGST'):: boolean, (tempJson ->> 'TaxabilityCode'):: integer, (tempJson ->> 'TaxabilityName'), (tempJson ->> 'IsReverseChargeApplicableCode'):: integer, (tempJson ->> 'IsReverseChargeApplicableName'), (tempJson ->> 'IsIneligibleForInputCreditCode'):: integer, (tempJson ->> 'IsIneligibleForInputCreditName'), (tempJson ->> 'IGSTRateCode'):: float, (tempJson ->> 'IGSTRateName'):: float, (tempJson ->> 'CGSTRate'):: float, (tempJson ->> 'SGSTRate'):: float, (tempJson ->> 'CessRate'):: float, (tempJson ->> 'StateCessRate'):: float, (tempJson ->> 'CessNonAdvolRate'):: float, (tempJson ->> 'CessNonAdvolUnit'):: float, (tempJson ->> 'StateCessNonAdvolRate'):: float, (tempJson ->> 'StateCessNonAdvolUnit'):: float ); end if; end if; end loop; end if; end; $$;


ALTER PROCEDURE "10083_10833".stockgroup_update_add(IN stockgroup_data jsonb, OUT stockgroup_id integer) OWNER TO "10083";

--
-- TOC entry 2336 (class 1255 OID 186208)
-- Name: stockitem_update_add(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".stockitem_update_add(IN stockitem_data jsonb, OUT stockitem_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; flag char(1); temp_id integer; item_count integer; stockItem_item_id integer; begin stockItem_Id := (stockItem_data ->> 'StockItemId') :: integer; flag := (stockItem_data ->> 'Flag'); if flag = 'U' then update "10083_10833"."StockItem" set "StockGroupId" = ( stockItem_data ->> 'StockGroupId' ):: integer, "StockCategoryId" = ( stockItem_data ->> 'StockCategoryId' ):: integer, "TypeCode" = (stockItem_data ->> 'TypeCode'):: integer, "TypeName" = (stockItem_data ->> 'TypeName'), "Name" = (stockItem_data ->> 'Name'), "Code" = (stockItem_data ->> 'Code'), "UOMId" = (stockItem_data ->> 'UOMId'):: integer, "AlternateUOMId" = ( stockItem_data ->> 'AlternateUOMId' ):: integer, "ConversionFactor" = ( stockItem_data ->> 'ConversionFactor' ):: integer, "ActiveStatus" = ( stockItem_data ->> 'ActiveStatus' ):: boolean, "Logo" = (stockItem_data ->> 'Logo'), "MaintainStock" = ( stockItem_data ->> 'MaintainStock' ):: boolean, "ReorderLevel" = ( stockItem_data ->> 'ReorderLevel' ):: integer, "BatchNumber" = (stockItem_data ->> 'BatchNumber'), "SerialNumber" = ( stockItem_data ->> 'SerialNumber' ), "PartNumber" = (stockItem_data ->> 'PartNumber'), "Notes" = (stockItem_data ->> 'Notes') where "StockItem"."StockItemId" = stockItem_Id; elseif flag = 'A' then insert into "10083_10833"."StockItem" ( "StockGroupId", "StockCategoryId", "TypeCode", "TypeName", "Name", "Code", "UOMId", "AlternateUOMId", "ConversionFactor", "Logo", "MaintainStock", "ReorderLevel", "BatchNumber", "SerialNumber", "PartNumber", "Notes" ) values ( ( stockItem_data ->> 'StockGroupId' ):: integer, ( stockItem_data ->> 'StockCategoryId' ):: integer, (stockItem_data ->> 'TypeCode'):: integer, (stockItem_data ->> 'TypeName'), (stockItem_data ->> 'Name'), (stockItem_data ->> 'Code'), (stockItem_data ->> 'UOMId'):: integer, ( stockItem_data ->> 'AlternateUOMId' ):: integer, ( stockItem_data ->> 'ConversionFactor' ):: integer, (stockItem_data ->> 'Logo'), ( stockItem_data ->> 'MaintainStock' ):: boolean, ( stockItem_data ->> 'ReorderLevel' ):: integer, (stockItem_data ->> 'BatchNumber'), ( stockItem_data ->> 'SerialNumber' ), (stockItem_data ->> 'PartNumber'), (stockItem_data ->> 'Notes') ) returning "StockItemId" into stockItem_Id; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((stockItem_data ->> 'StockItemDescription'):: jsonb); if item_count > 0 then for i in 0.. item_count-1 loop tempJson := (stockItem_data ->> 'StockItemDescription')::jsonb->i; if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := ( tempJson ->> 'StockItemDescriptionId' ); if flag = 'D' then delete from "10083_10833"."StockItemDescription" sid where sid."StockItemDescriptionId" = temp_id; elseif flag = 'U' then update "10083_10833"."StockItemDescription" set "DescriptionCode" = (tempJson ->> 'DescriptionCode'), "Description" = (tempJson ->> 'Description'), "IsDefault" = (tempJson ->> 'IsDefault'):: boolean where "StockItemDescriptionId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."StockItemDescription" ( "StockItemId", "DescriptionCode", "Description", "IsDefault" ) values ( (stockItem_Id), (tempJson ->> 'DescriptionCode'), (tempJson ->> 'Description'), (tempJson ->> 'IsDefault'):: boolean ); end if; end if; end loop; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((stockItem_data ->> 'StockItemGSTInfo'):: jsonb); if item_count > 0 then for i in 0.. item_count - 1 loop temp_id := 0; tempJson := (stockItem_data ->> 'StockItemGSTInfo')::jsonb->i; if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := ( tempJson ->> 'StockItemGSTInfoId' ); if flag = 'D' then delete from "10083_10833"."StockItemGSTInfo" sigi where sigi."StockItemGSTInfoId" = temp_id; elseif flag = 'U' then update "10083_10833"."StockItemGSTInfo" set "ApplicableFrom" = (tempJson ->> 'ApplicableFrom'):: date, "HSN" = (tempJson ->> 'HSN'), "IsNonGST" = (tempJson ->> 'IsNonGST'):: boolean, "TaxabilityCode" = (tempJson ->> 'TaxabilityCode'):: integer, "TaxabilityName" = (tempJson ->> 'TaxabilityName'), "ReverseChargeApplicableCode" = ( tempJson ->> 'ReverseChargeApplicableCode' ):: integer, "ReverseChargeApplicableName" = ( tempJson ->> 'ReverseChargeApplicableName' ), "EligibleForInputCreditCode" = ( tempJson ->> 'EligibleForInputCreditCode' ):: integer, "EligibleForInputCreditName" = ( tempJson ->> 'EligibleForInputCreditName' ), "IGSTRateCode" = (tempJson ->> 'IGSTRateCode'):: float, "IGSTRateName" = (tempJson ->> 'IGSTRateName'):: float, "CGSTRate" = (tempJson ->> 'CGSTRate'):: float, "SGSTRate" = (tempJson ->> 'SGSTRate'):: float, "CessRate" = (tempJson ->> 'CessRate'):: float, "StateCessRate" = (tempJson ->> 'StateCessRate'):: float, "CessNonAdvolRate" = (tempJson ->> 'CessNonAdvolRate'):: float, "CessNonAdvolUnit" = (tempJson ->> 'CessNonAdvolUnit'):: float, "StateCessNonAdvolRate" = ( tempJson ->> 'StateCessNonAdvolRate' ):: float, "StateCessNonAdvolUnit" = ( tempJson ->> 'StateCessNonAdvolUnit' ):: float where "StockItemGSTInfoId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."StockItemGSTInfo" ( "StockItemId", "ApplicableFrom", "HSN", "IsNonGST", "TaxabilityCode", "TaxabilityName", "ReverseChargeApplicableCode", "ReverseChargeApplicableName", "EligibleForInputCreditCode", "EligibleForInputCreditName", "IGSTRateCode", "IGSTRateName", "CGSTRate", "SGSTRate", "CessRate", "StateCessRate", "CessNonAdvolRate", "CessNonAdvolUnit", "StateCessNonAdvolRate", "StateCessNonAdvolUnit" ) values ( (stockItem_Id), (tempJson ->> 'ApplicableFrom'):: date, (tempJson ->> 'HSN'), (tempJson ->> 'IsNonGST'):: boolean, (tempJson ->> 'TaxabilityCode'):: integer, (tempJson ->> 'TaxabilityName'), ( tempJson ->> 'ReverseChargeApplicableCode' ):: integer, ( tempJson ->> 'ReverseChargeApplicableName' ), ( tempJson ->> 'EligibleForInputCreditCode' ):: integer, ( tempJson ->> 'EligibleForInputCreditName' ), (tempJson ->> 'IGSTRateCode'):: float, (tempJson ->> 'IGSTRateName'):: float, (tempJson ->> 'CGSTRate'):: float, (tempJson ->> 'SGSTRate'):: float, (tempJson ->> 'CessRate'):: float, (tempJson ->> 'StateCessRate'):: float, (tempJson ->> 'CessNonAdvolRate'):: float, (tempJson ->> 'CessNonAdvolUnit'):: float, ( tempJson ->> 'StateCessNonAdvolRate' ):: float, ( tempJson ->> 'StateCessNonAdvolUnit' ):: float ); end if; end if; end loop; end if; flag := ''; tempJson := null; temp_id := 0; item_count := jsonb_array_length((stockItem_data ->> 'StockItemOpeningBalance'):: jsonb); if item_count > 0 then for i in 0.. item_count - 1 loop temp_id := 0; tempJson := (stockItem_data ->> 'StockItemOpeningBalance')::jsonb->i; if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := ( tempJson ->> 'StockItemOpeningBalanceId' ); if flag = 'D' then delete from "10083_10833"."StockItemOpeningBalance" siob where siob."StockItemOpeningBalanceId" = temp_id; elseif flag = 'U' then update "10083_10833"."StockItemOpeningBalance" set "WareHouseId" = (tempJson ->> 'WareHouseId'):: integer, "OpeningQuantity" = (tempJson ->> 'OpeningQuantity'):: float, "Rate" = (tempJson ->> 'Rate'):: float, "Total" = (tempJson ->> 'Total'):: float where "StockItemOpeningBalanceId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."StockItemOpeningBalance" ( "StockItemId", "WareHouseId", "OpeningQuantity", "Rate", "Total" ) values ( stockItem_Id, (tempJson ->> 'WareHouseId'):: integer, (tempJson ->> 'OpeningQuantity'):: float, (tempJson ->> 'Rate'):: float, (tempJson ->> 'Total'):: float ); end if; end if; end loop; end if; end; $$;


ALTER PROCEDURE "10083_10833".stockitem_update_add(IN stockitem_data jsonb, OUT stockitem_id integer) OWNER TO "10083";

--
-- TOC entry 2345 (class 1255 OID 187617)
-- Name: template_add_update(jsonb); Type: PROCEDURE; Schema: 10083_10833; Owner: 10083
--

CREATE PROCEDURE "10083_10833".template_add_update(IN template_data jsonb, OUT template_id integer)
    LANGUAGE plpgsql
    AS $$ declare tempJson jsonb; documentName text; flag char(1); temp_id integer; item_count integer; sequence_name text; begin template_id := (template_data->>'TemplateId') ::integer; flag := (template_data->> 'Flag'); if flag = 'U' then update "10083_10833"."Template" set "Name" =(template_data->> 'Name'), "ShortName" =(template_data->> 'ShortName'), "DocumentNumberingCode" =(template_data->> 'DocumentNumberingCode')::integer, "DocumentNumberingName" =(template_data->> 'DocumentNumberingName'), "ActiveStatus" =(template_data->> 'ActiveStatus')::boolean, "DocumentType" = (template_data->> 'DocumentType')::integer, "Code" = (template_data->> 'Code') where "Template"."TemplateId" = (template_id); elseif flag = 'A' then insert into "10083_10833"."Template" ("Name", "ShortName", "DocumentNumberingCode", "DocumentNumberingName", "DocumentType" , "Code") values( (template_data->> 'Name'), (template_data->> 'ShortName'), (template_data->> 'DocumentNumberingCode')::integer, (template_data->> 'DocumentNumberingName'), (template_data->> 'DocumentType')::integer , (template_data->> 'Code') ) returning "TemplateId" into template_id; end if; tempJson := template_data ->> 'TemplateSettings'; flag := ''; temp_id := 0; if tempJson is not null then flag := (tempJson ->> 'Flag'); temp_id := (tempJson ->> 'TemplateSettingsId'); if flag = 'U' then update "10083_10833"."TemplateSettings" set "Settings" = (tempJson ->>'Settings')::jsonb where "TemplateSettingsId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."TemplateSettings"( "TemplateId", "Settings" ) values( (template_id), (tempJson ->>'Settings')::jsonb); end if; end if; item_count := jsonb_array_length((template_data ->> 'AutoNumbering')::jsonb); if item_count > 0 then for i in 0.. item_count-1 loop tempJson = (template_data ->> 'AutoNumbering')::jsonb->i; if tempJson is not null then flag := tempJson ->> 'Flag'; temp_id := tempJson ->> 'AutoNumberingId'; if flag = 'D' then delete from "10083_10833"."AutoNumbering" sst where sst."AutoNumberingId" = temp_id; elseif flag = 'U' then update "10083_10833"."AutoNumbering" set "ApplicableFrom" =(tempJson ->>'ApplicableFrom')::date, "Prefix" =(tempJson ->>'Prefix'), "StartingNumber" =(tempJson ->>'StartingNumber')::integer, "NoOfDigits" =(tempJson ->>'NoOfDigits')::integer, "FillWithZero" =(tempJson ->>'FillWithZero')::boolean, "Suffix" =(tempJson ->>'Suffix'), "ResetNumberingCode" =(tempJson ->>'ResetNumberingCode')::integer, "ResetNumberingName" =(tempJson ->>'ResetNumberingName') where "AutoNumberingId" = temp_id; elseif flag = 'A' then insert into "10083_10833"."AutoNumbering" ( "TemplateId", "ApplicableFrom", "Prefix", "StartingNumber", "NoOfDigits", "FillWithZero", "Suffix", "ResetNumberingCode", "ResetNumberingName" ) values( (template_id), (tempJson ->>'ApplicableFrom')::date, (tempJson ->>'Prefix'), (tempJson ->>'StartingNumber')::integer, (tempJson ->>'NoOfDigits')::integer, (tempJson ->>'FillWithZero')::boolean, (tempJson ->>'Suffix'), (tempJson ->>'ResetNumberingCode')::integer, (tempJson ->>'ResetNumberingName') ); end if; end if; end loop; end if; flag := (template_data->> 'Flag'); if(flag = 'A') then documentName :=(template_data->> 'Name'); documentName := replace(documentName, ' ', '_'); sequence_name := '"10083_10833"."Template_' || documentName || '_Seq"'; execute 'CREATE SEQUENCE ' || sequence_name || ' START WITH 1 INCREMENT BY 1'; end if; end; $$;


ALTER PROCEDURE "10083_10833".template_add_update(IN template_data jsonb, OUT template_id integer) OWNER TO "10083";

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- TOC entry 2112 (class 1259 OID 187200)
-- Name: AuditDocuments; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."AuditDocuments" (
    "AuditDocumentId" smallint NOT NULL,
    "DocumentName" character varying(100),
    "ParentDocumentId" smallint,
    "CreatedOn" timestamp without time zone,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."AuditDocuments" OWNER TO "10083";

--
-- TOC entry 2111 (class 1259 OID 187199)
-- Name: AuditDocuments_AuditDocumentId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."AuditDocuments_AuditDocumentId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."AuditDocuments_AuditDocumentId_seq" OWNER TO "10083";

--
-- TOC entry 11124 (class 0 OID 0)
-- Dependencies: 2111
-- Name: AuditDocuments_AuditDocumentId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."AuditDocuments_AuditDocumentId_seq" OWNED BY "10083_10833"."AuditDocuments"."AuditDocumentId";


--
-- TOC entry 2110 (class 1259 OID 187191)
-- Name: AuditLogs; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."AuditLogs" (
    "LogId" bigint NOT NULL,
    "DocumentId" smallint NOT NULL,
    "UserId" smallint,
    "RecordId" smallint,
    "Timestamp" timestamp without time zone,
    "Action" character varying(1000) NOT NULL,
    "AuditDescription" text,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."AuditLogs" OWNER TO "10083";

--
-- TOC entry 2109 (class 1259 OID 187190)
-- Name: AuditLogs_LogId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."AuditLogs_LogId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."AuditLogs_LogId_seq" OWNER TO "10083";

--
-- TOC entry 11125 (class 0 OID 0)
-- Dependencies: 2109
-- Name: AuditLogs_LogId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."AuditLogs_LogId_seq" OWNED BY "10083_10833"."AuditLogs"."LogId";


--
-- TOC entry 1848 (class 1259 OID 184979)
-- Name: AutoNumbering; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."AutoNumbering" (
    "AutoNumberingId" smallint NOT NULL,
    "TemplateId" smallint NOT NULL,
    "ApplicableFrom" date,
    "Prefix" character varying(20),
    "StartingNumber" integer,
    "NoOfDigits" bigint,
    "FillWithZero" boolean NOT NULL,
    "Suffix" character varying(20),
    "ResetNumberingCode" integer NOT NULL,
    "ResetNumberingName" character varying(10) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "Variable" character varying(10)
);


ALTER TABLE "10083_10833"."AutoNumbering" OWNER TO "10083";

--
-- TOC entry 1847 (class 1259 OID 184978)
-- Name: AutoNumbering_AutoNumberingId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."AutoNumbering_AutoNumberingId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."AutoNumbering_AutoNumberingId_seq" OWNER TO "10083";

--
-- TOC entry 11126 (class 0 OID 0)
-- Dependencies: 1847
-- Name: AutoNumbering_AutoNumberingId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."AutoNumbering_AutoNumberingId_seq" OWNED BY "10083_10833"."AutoNumbering"."AutoNumberingId";


--
-- TOC entry 1800 (class 1259 OID 184730)
-- Name: Bank; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."Bank" (
    "BankId" smallint NOT NULL,
    "Name" character varying(1000) NOT NULL,
    "AccountNumber" character varying(50) NOT NULL,
    "IFSCBranch" character varying(20),
    "PayeeName" character varying(1000),
    "UpiId" character varying(50),
    "SwiftCode" character varying(20),
    "NostroAccountNumber" character varying(50),
    "ActiveStatus" boolean DEFAULT true,
    "Code" public.citext,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "IsDefault" boolean DEFAULT false
);


ALTER TABLE "10083_10833"."Bank" OWNER TO "10083";

--
-- TOC entry 1802 (class 1259 OID 184740)
-- Name: BankAddress; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."BankAddress" (
    "BankAddressId" smallint NOT NULL,
    "BankId" smallint NOT NULL,
    "Address" character varying(1000) NOT NULL,
    "City" character varying(100),
    "StateCode" character varying(2),
    "StateName" character varying(100),
    "Pincode" character varying(10),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."BankAddress" OWNER TO "10083";

--
-- TOC entry 1801 (class 1259 OID 184739)
-- Name: BankAddress_BankAddressId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."BankAddress_BankAddressId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."BankAddress_BankAddressId_seq" OWNER TO "10083";

--
-- TOC entry 11127 (class 0 OID 0)
-- Dependencies: 1801
-- Name: BankAddress_BankAddressId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."BankAddress_BankAddressId_seq" OWNED BY "10083_10833"."BankAddress"."BankAddressId";


--
-- TOC entry 1799 (class 1259 OID 184729)
-- Name: Bank_BankId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Bank_BankId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Bank_BankId_seq" OWNER TO "10083";

--
-- TOC entry 11128 (class 0 OID 0)
-- Dependencies: 1799
-- Name: Bank_BankId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."Bank_BankId_seq" OWNED BY "10083_10833"."Bank"."BankId";


--
-- TOC entry 1789 (class 1259 OID 184660)
-- Name: Company; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."Company" (
    "Id" integer NOT NULL,
    "UniqueId" character varying(80),
    "CompanyId" integer,
    "CompanyName" character varying(1000) NOT NULL,
    "ParentCompanyId" integer,
    "SchemaName" character varying(20),
    "ShortName" character varying(50),
    "CIN" character varying(100),
    "IEC" character varying(10),
    "FinancialYearStartFrom" date NOT NULL,
    "StartBooksDate" date NOT NULL,
    "CurrencySymbolCode" character varying(3) NOT NULL,
    "CurrencySymbolName" character varying(150) NOT NULL,
    "CurrencySymbolPosition" character varying(1),
    "CurrencyFormat" character varying(1),
    "DigitAfterDecimal" bigint,
    "DecimalSymbolCode" integer,
    "DecimalSymbolName" character varying(10),
    "Logo" text,
    "ActiveStatus" boolean DEFAULT true,
    "GSTIN" character varying(15),
    "GSTCategoryName" character varying(30),
    "GSTCategoryCode" smallint,
    "PAN" character varying(10),
    "CreatedAt" timestamp with time zone,
    "UpdatedAt" timestamp with time zone,
    "IsCustomized" boolean DEFAULT false
);


ALTER TABLE "10083_10833"."Company" OWNER TO "10083";

--
-- TOC entry 1791 (class 1259 OID 184676)
-- Name: CompanyContactDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."CompanyContactDetails" (
    "CompanyContactId" integer NOT NULL,
    "CompanyId" integer NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "StateCode" character varying(2),
    "StateName" character varying(100),
    "Pincode" character varying(10),
    "ContactPersonName" character varying(500),
    "PhoneNumber" character varying(20),
    "MobileNumber" character varying(20),
    "Email" character varying(320),
    "Website" character varying(500),
    "City" character varying(100),
    "CreatedAt" timestamp with time zone,
    "UpdatedAt" timestamp with time zone
);


ALTER TABLE "10083_10833"."CompanyContactDetails" OWNER TO "10083";

--
-- TOC entry 1790 (class 1259 OID 184675)
-- Name: CompanyContactDetails_CompanyContactId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."CompanyContactDetails_CompanyContactId_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."CompanyContactDetails_CompanyContactId_seq" OWNER TO "10083";

--
-- TOC entry 11129 (class 0 OID 0)
-- Dependencies: 1790
-- Name: CompanyContactDetails_CompanyContactId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."CompanyContactDetails_CompanyContactId_seq" OWNED BY "10083_10833"."CompanyContactDetails"."CompanyContactId";


--
-- TOC entry 1788 (class 1259 OID 184659)
-- Name: Company_Id_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Company_Id_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Company_Id_seq" OWNER TO "10083";

--
-- TOC entry 11130 (class 0 OID 0)
-- Dependencies: 1788
-- Name: Company_Id_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."Company_Id_seq" OWNED BY "10083_10833"."Company"."Id";


--
-- TOC entry 1806 (class 1259 OID 184759)
-- Name: CompoundUnit; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."CompoundUnit" (
    "CompoundUnitId" smallint NOT NULL,
    "FirstUnitCode" character varying(3) NOT NULL,
    "FirstUnitName" character varying(100),
    "Conversion" integer NOT NULL,
    "SecondUnitCode" character varying(3),
    "SecondUnitName" character varying(100) NOT NULL,
    "ActiveStatus" boolean DEFAULT true,
    "Code" character varying(6),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."CompoundUnit" OWNER TO "10083";

--
-- TOC entry 1805 (class 1259 OID 184758)
-- Name: CompoundUnit_CompoundUnitId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."CompoundUnit_CompoundUnitId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."CompoundUnit_CompoundUnitId_seq" OWNER TO "10083";

--
-- TOC entry 11131 (class 0 OID 0)
-- Dependencies: 1805
-- Name: CompoundUnit_CompoundUnitId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."CompoundUnit_CompoundUnitId_seq" OWNED BY "10083_10833"."CompoundUnit"."CompoundUnitId";


--
-- TOC entry 2080 (class 1259 OID 186060)
-- Name: ConnectionSettings; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."ConnectionSettings" (
    "ConnectionSettingId" smallint NOT NULL,
    "EmailProviderCode" character varying(3),
    "EmailProviderName" character varying(100),
    "OutgoingMailServer" character varying(500),
    "EncryptionCode" integer,
    "EncryptionName" character varying(4),
    "SendTestToEmail" text,
    "Port" integer,
    "UserName" character varying(320),
    "Password" character varying(100),
    "Email" character varying(320),
    "SenderName" character varying(100),
    "IsDefault" boolean DEFAULT false,
    "ActiveStatus" boolean DEFAULT true,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."ConnectionSettings" OWNER TO "10083";

--
-- TOC entry 2079 (class 1259 OID 186059)
-- Name: ConnectionSettings_ConnectionSettingId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."ConnectionSettings_ConnectionSettingId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."ConnectionSettings_ConnectionSettingId_seq" OWNER TO "10083";

--
-- TOC entry 11132 (class 0 OID 0)
-- Dependencies: 2079
-- Name: ConnectionSettings_ConnectionSettingId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."ConnectionSettings_ConnectionSettingId_seq" OWNED BY "10083_10833"."ConnectionSettings"."ConnectionSettingId";


--
-- TOC entry 1808 (class 1259 OID 184767)
-- Name: Currency; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."Currency" (
    "CurrencyId" smallint NOT NULL,
    "CurrencyCode" character varying(3) NOT NULL,
    "CurrencyName" character varying(1000) NOT NULL,
    "Symbol" character varying(10) NOT NULL,
    "DecimalPlace" bigint NOT NULL,
    "DecimalSymbolCode" integer,
    "DecimalSymbolName" character varying(15),
    "SymbolDecimalPart" character varying(20),
    "DigitGroupingCode" integer,
    "DigitGroupingName" character varying(15),
    "ActiveStatus" boolean DEFAULT true,
    "Code" character varying(6),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."Currency" OWNER TO "10083";

--
-- TOC entry 1807 (class 1259 OID 184766)
-- Name: Currency_CurrencyId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Currency_CurrencyId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Currency_CurrencyId_seq" OWNER TO "10083";

--
-- TOC entry 11133 (class 0 OID 0)
-- Dependencies: 1807
-- Name: Currency_CurrencyId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."Currency_CurrencyId_seq" OWNED BY "10083_10833"."Currency"."CurrencyId";


--
-- TOC entry 1812 (class 1259 OID 184788)
-- Name: Customer; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."Customer" (
    "CustomerId" smallint NOT NULL,
    "CustomerGroupId" smallint NOT NULL,
    "CurrencyId" smallint NOT NULL,
    "TradeName" character varying(1000) NOT NULL,
    "LegalName" character varying(1000),
    "PAN" character varying(10),
    "GSTIN" character varying(15),
    "GSTCategoryCode" smallint,
    "GSTCategoryName" character varying(30),
    "Email" character varying(320),
    "PhoneNumber" character varying(20),
    "MobileNumber" character varying(20),
    "ChartsOfAccountsId" integer,
    "ActiveStatus" boolean DEFAULT true,
    "Code" character varying(6),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "Version" integer DEFAULT 1 NOT NULL
);


ALTER TABLE "10083_10833"."Customer" OWNER TO "10083";

--
-- TOC entry 1814 (class 1259 OID 184798)
-- Name: CustomerBillingAddress; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."CustomerBillingAddress" (
    "CustomerBillingAddressId" smallint NOT NULL,
    "CustomerId" smallint NOT NULL,
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(3) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "Pincode" character varying(10),
    "CountryCode" character varying(3),
    "CountryName" character varying(100),
    "Location" character varying(1000),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."CustomerBillingAddress" OWNER TO "10083";

--
-- TOC entry 1813 (class 1259 OID 184797)
-- Name: CustomerBillingAddress_CustomerBillingAddressId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."CustomerBillingAddress_CustomerBillingAddressId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."CustomerBillingAddress_CustomerBillingAddressId_seq" OWNER TO "10083";

--
-- TOC entry 11134 (class 0 OID 0)
-- Dependencies: 1813
-- Name: CustomerBillingAddress_CustomerBillingAddressId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."CustomerBillingAddress_CustomerBillingAddressId_seq" OWNED BY "10083_10833"."CustomerBillingAddress"."CustomerBillingAddressId";


--
-- TOC entry 1818 (class 1259 OID 184818)
-- Name: CustomerContactPerson; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."CustomerContactPerson" (
    "CustomerContactPersonId" smallint NOT NULL,
    "CustomerId" smallint NOT NULL,
    "Name" character varying(1000),
    "PhoneNumber" character varying(20),
    "MobileNumber" character varying(20),
    "Email" character varying(320),
    "Designation" character varying(200),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."CustomerContactPerson" OWNER TO "10083";

--
-- TOC entry 1817 (class 1259 OID 184817)
-- Name: CustomerContactPerson_CustomerContactPersonId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."CustomerContactPerson_CustomerContactPersonId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."CustomerContactPerson_CustomerContactPersonId_seq" OWNER TO "10083";

--
-- TOC entry 11135 (class 0 OID 0)
-- Dependencies: 1817
-- Name: CustomerContactPerson_CustomerContactPersonId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."CustomerContactPerson_CustomerContactPersonId_seq" OWNED BY "10083_10833"."CustomerContactPerson"."CustomerContactPersonId";


--
-- TOC entry 1810 (class 1259 OID 184777)
-- Name: CustomerGroup; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."CustomerGroup" (
    "CustomerGroupId" smallint NOT NULL,
    "ParentGroupId" smallint,
    "Name" character varying(1000) NOT NULL,
    "ActiveStatus" boolean DEFAULT true,
    "IsPrimary" boolean DEFAULT false,
    "Code" character varying(6),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."CustomerGroup" OWNER TO "10083";

--
-- TOC entry 1809 (class 1259 OID 184776)
-- Name: CustomerGroup_CustomerGroupId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."CustomerGroup_CustomerGroupId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."CustomerGroup_CustomerGroupId_seq" OWNER TO "10083";

--
-- TOC entry 11136 (class 0 OID 0)
-- Dependencies: 1809
-- Name: CustomerGroup_CustomerGroupId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."CustomerGroup_CustomerGroupId_seq" OWNED BY "10083_10833"."CustomerGroup"."CustomerGroupId";


--
-- TOC entry 1862 (class 1259 OID 185038)
-- Name: CustomerSettings; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."CustomerSettings" (
    "CustomerSettingsId" smallint NOT NULL,
    "EnableContactPersonDetails" boolean DEFAULT false,
    "EnableShippingAddressDetails" boolean DEFAULT false,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."CustomerSettings" OWNER TO "10083";

--
-- TOC entry 1861 (class 1259 OID 185037)
-- Name: CustomerSettings_CustomerSettingsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."CustomerSettings_CustomerSettingsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."CustomerSettings_CustomerSettingsId_seq" OWNER TO "10083";

--
-- TOC entry 11137 (class 0 OID 0)
-- Dependencies: 1861
-- Name: CustomerSettings_CustomerSettingsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."CustomerSettings_CustomerSettingsId_seq" OWNED BY "10083_10833"."CustomerSettings"."CustomerSettingsId";


--
-- TOC entry 1816 (class 1259 OID 184807)
-- Name: CustomerShippingAddress; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."CustomerShippingAddress" (
    "CustomerShippingAddressId" smallint NOT NULL,
    "CustomerId" smallint NOT NULL,
    "TradeName" character varying(1000) NOT NULL,
    "LegalName" character varying(1000),
    "GSTIN" character varying(15),
    "ContactPersonEmail" character varying(320),
    "ContactPersonName" character varying(500),
    "ContactPersonMobile" character varying(20),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(3),
    "StateName" character varying(100),
    "Pincode" character varying(10),
    "CountryCode" character varying(3),
    "CountryName" character varying(100),
    "Inactive" boolean DEFAULT true,
    "IsDefault" boolean DEFAULT true,
    "SearchCode" character varying(100),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."CustomerShippingAddress" OWNER TO "10083";

--
-- TOC entry 1815 (class 1259 OID 184806)
-- Name: CustomerShippingAddress_CustomerShippingAddressId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."CustomerShippingAddress_CustomerShippingAddressId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."CustomerShippingAddress_CustomerShippingAddressId_seq" OWNER TO "10083";

--
-- TOC entry 11138 (class 0 OID 0)
-- Dependencies: 1815
-- Name: CustomerShippingAddress_CustomerShippingAddressId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."CustomerShippingAddress_CustomerShippingAddressId_seq" OWNED BY "10083_10833"."CustomerShippingAddress"."CustomerShippingAddressId";


--
-- TOC entry 2108 (class 1259 OID 187172)
-- Name: CustomerTurnOver; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."CustomerTurnOver" (
    "CustomerTurnOverId" smallint NOT NULL,
    "CustomerId" smallint,
    "In" numeric NOT NULL,
    "Out" numeric NOT NULL,
    "TurnOver" numeric GENERATED ALWAYS AS (("In" - "Out")) STORED,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."CustomerTurnOver" OWNER TO "10083";

--
-- TOC entry 2107 (class 1259 OID 187171)
-- Name: CustomerTurnOver_CustomerTurnOverId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."CustomerTurnOver_CustomerTurnOverId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."CustomerTurnOver_CustomerTurnOverId_seq" OWNER TO "10083";

--
-- TOC entry 11139 (class 0 OID 0)
-- Dependencies: 2107
-- Name: CustomerTurnOver_CustomerTurnOverId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."CustomerTurnOver_CustomerTurnOverId_seq" OWNED BY "10083_10833"."CustomerTurnOver"."CustomerTurnOverId";


--
-- TOC entry 1811 (class 1259 OID 184787)
-- Name: Customer_CustomerId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Customer_CustomerId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Customer_CustomerId_seq" OWNER TO "10083";

--
-- TOC entry 11140 (class 0 OID 0)
-- Dependencies: 1811
-- Name: Customer_CustomerId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."Customer_CustomerId_seq" OWNED BY "10083_10833"."Customer"."CustomerId";


--
-- TOC entry 2048 (class 1259 OID 185900)
-- Name: DeliveryNote; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."DeliveryNote" (
    "DeliveryNoteId" smallint NOT NULL,
    "Number" character varying(20),
    "Date" date,
    "FinancialYear" integer,
    "TemplateId" smallint NOT NULL,
    "DocumentName" character varying(20),
    "CustomerId" smallint NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."DeliveryNote" OWNER TO "10083";

--
-- TOC entry 2064 (class 1259 OID 185970)
-- Name: DeliveryNoteBatchDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."DeliveryNoteBatchDetails" (
    "DeliveryNoteBatchDetailsId" smallint NOT NULL,
    "DeliveryNoteItemsId" smallint NOT NULL,
    "Name" character varying(1000),
    "SerialNumber" integer,
    "ExpiryDate" date,
    "ManufacturingDate" date,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."DeliveryNoteBatchDetails" OWNER TO "10083";

--
-- TOC entry 2063 (class 1259 OID 185969)
-- Name: DeliveryNoteBatchDetails_DeliveryNoteBatchDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."DeliveryNoteBatchDetails_DeliveryNoteBatchDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."DeliveryNoteBatchDetails_DeliveryNoteBatchDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11141 (class 0 OID 0)
-- Dependencies: 2063
-- Name: DeliveryNoteBatchDetails_DeliveryNoteBatchDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."DeliveryNoteBatchDetails_DeliveryNoteBatchDetailsId_seq" OWNED BY "10083_10833"."DeliveryNoteBatchDetails"."DeliveryNoteBatchDetailsId";


--
-- TOC entry 2050 (class 1259 OID 185907)
-- Name: DeliveryNoteBillTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."DeliveryNoteBillTo" (
    "DeliveryNoteBillToId" smallint NOT NULL,
    "DeliveryNoteId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "POSCode" character varying(2) NOT NULL,
    "POSName" character varying(100) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."DeliveryNoteBillTo" OWNER TO "10083";

--
-- TOC entry 2049 (class 1259 OID 185906)
-- Name: DeliveryNoteBillTo_DeliveryNoteBillToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."DeliveryNoteBillTo_DeliveryNoteBillToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."DeliveryNoteBillTo_DeliveryNoteBillToId_seq" OWNER TO "10083";

--
-- TOC entry 11142 (class 0 OID 0)
-- Dependencies: 2049
-- Name: DeliveryNoteBillTo_DeliveryNoteBillToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."DeliveryNoteBillTo_DeliveryNoteBillToId_seq" OWNED BY "10083_10833"."DeliveryNoteBillTo"."DeliveryNoteBillToId";


--
-- TOC entry 2054 (class 1259 OID 185925)
-- Name: DeliveryNoteDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."DeliveryNoteDetails" (
    "DeliveryNoteDetailsId" smallint NOT NULL,
    "DeliveryNoteId" smallint NOT NULL,
    "ModeTermsOfPayment" character varying(1000),
    "TermsOfDelivery" character varying(1000),
    "TermAndCondition" character varying(1000),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."DeliveryNoteDetails" OWNER TO "10083";

--
-- TOC entry 2053 (class 1259 OID 185924)
-- Name: DeliveryNoteDetails_DeliveryNoteDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."DeliveryNoteDetails_DeliveryNoteDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."DeliveryNoteDetails_DeliveryNoteDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11143 (class 0 OID 0)
-- Dependencies: 2053
-- Name: DeliveryNoteDetails_DeliveryNoteDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."DeliveryNoteDetails_DeliveryNoteDetailsId_seq" OWNED BY "10083_10833"."DeliveryNoteDetails"."DeliveryNoteDetailsId";


--
-- TOC entry 2056 (class 1259 OID 185934)
-- Name: DeliveryNoteDispatchFrom; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."DeliveryNoteDispatchFrom" (
    "DeliveryNoteDispatchFromId" smallint NOT NULL,
    "DeliveryNoteId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address1" character varying(1000),
    "Address2" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."DeliveryNoteDispatchFrom" OWNER TO "10083";

--
-- TOC entry 2055 (class 1259 OID 185933)
-- Name: DeliveryNoteDispatchFrom_DeliveryNoteDispatchFromId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."DeliveryNoteDispatchFrom_DeliveryNoteDispatchFromId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."DeliveryNoteDispatchFrom_DeliveryNoteDispatchFromId_seq" OWNER TO "10083";

--
-- TOC entry 11144 (class 0 OID 0)
-- Dependencies: 2055
-- Name: DeliveryNoteDispatchFrom_DeliveryNoteDispatchFromId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."DeliveryNoteDispatchFrom_DeliveryNoteDispatchFromId_seq" OWNED BY "10083_10833"."DeliveryNoteDispatchFrom"."DeliveryNoteDispatchFromId";


--
-- TOC entry 2060 (class 1259 OID 185952)
-- Name: DeliveryNoteExportDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."DeliveryNoteExportDetails" (
    "DeliveryNoteExportDetailsId" smallint NOT NULL,
    "DeliveryNoteId" smallint NOT NULL,
    "ShippingBillNumber" character varying(20),
    "ShippingBillDate" date,
    "PortCode" character varying(6),
    "PortName" character varying(25),
    "ForeignCurrency" character varying(16),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "RefundClaim" boolean,
    "ExportDuty" numeric,
    "DispatchThrough" character varying(15),
    "VehicleNumber" character varying(20),
    "ExchangeRate" numeric,
    "DestinationPortCode" character varying(6),
    "DestinationPortName" character varying(25),
    "Destination" character varying(100),
    "LUTNumber" character varying(100),
    "PlaceOfReceipt" character varying(100),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."DeliveryNoteExportDetails" OWNER TO "10083";

--
-- TOC entry 2059 (class 1259 OID 185951)
-- Name: DeliveryNoteExportDetails_DeliveryNoteExportDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."DeliveryNoteExportDetails_DeliveryNoteExportDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."DeliveryNoteExportDetails_DeliveryNoteExportDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11145 (class 0 OID 0)
-- Dependencies: 2059
-- Name: DeliveryNoteExportDetails_DeliveryNoteExportDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."DeliveryNoteExportDetails_DeliveryNoteExportDetailsId_seq" OWNED BY "10083_10833"."DeliveryNoteExportDetails"."DeliveryNoteExportDetailsId";


--
-- TOC entry 2058 (class 1259 OID 185943)
-- Name: DeliveryNoteItems; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."DeliveryNoteItems" (
    "DeliveryNoteItemsId" bigint NOT NULL,
    "DeliveryNoteId" smallint NOT NULL,
    "StockItemId" bigint NOT NULL,
    "ItemName" character varying(500) NOT NULL,
    "ItemSerialNumber" smallint,
    "ItemCode" integer,
    "ItemDescription" character varying(500),
    "HSNSAC" integer,
    "BarCode" character varying(500),
    "OrderQuantity" numeric NOT NULL,
    "BalanceQuantity" numeric NOT NULL,
    "FreeQuantity" numeric NOT NULL,
    "UnitPrice" numeric NOT NULL,
    "SubTotal" numeric NOT NULL,
    "Discount" numeric NOT NULL,
    "OtherCharges" numeric NOT NULL,
    "TaxableValue" numeric NOT NULL,
    "GstRate" numeric,
    "CessRate" numeric,
    "StateCessRate" numeric,
    "IGST" numeric NOT NULL,
    "CGST" numeric NOT NULL,
    "SGST" numeric NOT NULL,
    "Cess" numeric NOT NULL,
    "StateCess" numeric NOT NULL,
    "CessNonAdvolRate" numeric,
    "CessNonAdvolUnit" numeric,
    "StateCessNonAdvolRate" numeric,
    "StateCessNonAdvolUnit" numeric,
    "CessNonAdvol" numeric NOT NULL,
    "StateCessNonAdvol" numeric NOT NULL,
    "TotalItemValue" numeric NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."DeliveryNoteItems" OWNER TO "10083";

--
-- TOC entry 2057 (class 1259 OID 185942)
-- Name: DeliveryNoteItems_DeliveryNoteItemsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."DeliveryNoteItems_DeliveryNoteItemsId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."DeliveryNoteItems_DeliveryNoteItemsId_seq" OWNER TO "10083";

--
-- TOC entry 11146 (class 0 OID 0)
-- Dependencies: 2057
-- Name: DeliveryNoteItems_DeliveryNoteItemsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."DeliveryNoteItems_DeliveryNoteItemsId_seq" OWNED BY "10083_10833"."DeliveryNoteItems"."DeliveryNoteItemsId";


--
-- TOC entry 2052 (class 1259 OID 185916)
-- Name: DeliveryNoteShipTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."DeliveryNoteShipTo" (
    "DeliveryNoteShipToId" smallint NOT NULL,
    "DeliveryNoteId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address1" character varying(1000),
    "Address2" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."DeliveryNoteShipTo" OWNER TO "10083";

--
-- TOC entry 2051 (class 1259 OID 185915)
-- Name: DeliveryNoteShipTo_DeliveryNoteShipToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."DeliveryNoteShipTo_DeliveryNoteShipToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."DeliveryNoteShipTo_DeliveryNoteShipToId_seq" OWNER TO "10083";

--
-- TOC entry 11147 (class 0 OID 0)
-- Dependencies: 2051
-- Name: DeliveryNoteShipTo_DeliveryNoteShipToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."DeliveryNoteShipTo_DeliveryNoteShipToId_seq" OWNED BY "10083_10833"."DeliveryNoteShipTo"."DeliveryNoteShipToId";


--
-- TOC entry 2062 (class 1259 OID 185961)
-- Name: DeliveryNoteValueDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."DeliveryNoteValueDetails" (
    "DeliveryNoteValueDetailsId" smallint NOT NULL,
    "DeliveryNoteId" smallint NOT NULL,
    "AssessableValue" numeric,
    "IGST" numeric,
    "CGST" numeric,
    "SGST" numeric,
    "Cess" numeric,
    "StateCess" numeric,
    "InvoiceValue" numeric,
    "RoundOffAmount" numeric,
    "InvoiceValueForeignCurrency" numeric,
    "Discount" numeric,
    "OtherCharge" numeric,
    "OtherChargeTaxable" numeric,
    "TCSRate" numeric,
    "TCSAmount" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."DeliveryNoteValueDetails" OWNER TO "10083";

--
-- TOC entry 2061 (class 1259 OID 185960)
-- Name: DeliveryNoteValueDetails_DeliveryNoteValueDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."DeliveryNoteValueDetails_DeliveryNoteValueDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."DeliveryNoteValueDetails_DeliveryNoteValueDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11148 (class 0 OID 0)
-- Dependencies: 2061
-- Name: DeliveryNoteValueDetails_DeliveryNoteValueDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."DeliveryNoteValueDetails_DeliveryNoteValueDetailsId_seq" OWNED BY "10083_10833"."DeliveryNoteValueDetails"."DeliveryNoteValueDetailsId";


--
-- TOC entry 2047 (class 1259 OID 185899)
-- Name: DeliveryNote_DeliveryNoteId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."DeliveryNote_DeliveryNoteId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."DeliveryNote_DeliveryNoteId_seq" OWNER TO "10083";

--
-- TOC entry 11149 (class 0 OID 0)
-- Dependencies: 2047
-- Name: DeliveryNote_DeliveryNoteId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."DeliveryNote_DeliveryNoteId_seq" OWNED BY "10083_10833"."DeliveryNote"."DeliveryNoteId";


--
-- TOC entry 1846 (class 1259 OID 184968)
-- Name: Document; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."Document" (
    "DocumentId" smallint NOT NULL,
    "Name" character varying(1000) NOT NULL,
    "ShortName" character varying(50),
    "DocumentNumberingCode" integer NOT NULL,
    "DocumentNumberingName" character varying(30) NOT NULL,
    "ActiveStatus" boolean DEFAULT true,
    "DocumentType" integer,
    "OriginalDocument" boolean DEFAULT false,
    "Code" character varying(6),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."Document" OWNER TO "10083";

--
-- TOC entry 1858 (class 1259 OID 185024)
-- Name: DocumentLastEntry; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."DocumentLastEntry" (
    "DocumentLastEntryId" smallint NOT NULL,
    "TemplateId" smallint NOT NULL,
    "LastEntryDate" date NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."DocumentLastEntry" OWNER TO "10083";

--
-- TOC entry 1857 (class 1259 OID 185023)
-- Name: DocumentLastEntry_DocumentLastEntryId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."DocumentLastEntry_DocumentLastEntryId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."DocumentLastEntry_DocumentLastEntryId_seq" OWNER TO "10083";

--
-- TOC entry 11150 (class 0 OID 0)
-- Dependencies: 1857
-- Name: DocumentLastEntry_DocumentLastEntryId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."DocumentLastEntry_DocumentLastEntryId_seq" OWNED BY "10083_10833"."DocumentLastEntry"."DocumentLastEntryId";


--
-- TOC entry 1850 (class 1259 OID 184986)
-- Name: DocumentSettings; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."DocumentSettings" (
    "DocumentSettingsId" smallint NOT NULL,
    "DocumentId" smallint NOT NULL,
    "Settings" jsonb DEFAULT 'false'::jsonb,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."DocumentSettings" OWNER TO "10083";

--
-- TOC entry 1849 (class 1259 OID 184985)
-- Name: DocumentSettings_DocumentSettingsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."DocumentSettings_DocumentSettingsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."DocumentSettings_DocumentSettingsId_seq" OWNER TO "10083";

--
-- TOC entry 11151 (class 0 OID 0)
-- Dependencies: 1849
-- Name: DocumentSettings_DocumentSettingsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."DocumentSettings_DocumentSettingsId_seq" OWNED BY "10083_10833"."DocumentSettings"."DocumentSettingsId";


--
-- TOC entry 1845 (class 1259 OID 184967)
-- Name: Document_DocumentId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Document_DocumentId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Document_DocumentId_seq" OWNER TO "10083";

--
-- TOC entry 11152 (class 0 OID 0)
-- Dependencies: 1845
-- Name: Document_DocumentId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."Document_DocumentId_seq" OWNED BY "10083_10833"."Document"."DocumentId";


--
-- TOC entry 2174 (class 1259 OID 189278)
-- Name: Document_Purchase_Credit_Note_Seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Document_Purchase_Credit_Note_Seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Document_Purchase_Credit_Note_Seq" OWNER TO "10083";

--
-- TOC entry 2172 (class 1259 OID 189276)
-- Name: Document_Purchase_Return_Seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Document_Purchase_Return_Seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Document_Purchase_Return_Seq" OWNER TO "10083";

--
-- TOC entry 2171 (class 1259 OID 189275)
-- Name: Document_Purchase_Seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Document_Purchase_Seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Document_Purchase_Seq" OWNER TO "10083";

--
-- TOC entry 2175 (class 1259 OID 189279)
-- Name: Document_Quotation_Seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Document_Quotation_Seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Document_Quotation_Seq" OWNER TO "10083";

--
-- TOC entry 2173 (class 1259 OID 189277)
-- Name: Document_Sales_Debit_Note_Seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Document_Sales_Debit_Note_Seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Document_Sales_Debit_Note_Seq" OWNER TO "10083";

--
-- TOC entry 2170 (class 1259 OID 189274)
-- Name: Document_Sales_Return_Seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Document_Sales_Return_Seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Document_Sales_Return_Seq" OWNER TO "10083";

--
-- TOC entry 2169 (class 1259 OID 189273)
-- Name: Document_Sales_Seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Document_Sales_Seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Document_Sales_Seq" OWNER TO "10083";

--
-- TOC entry 2068 (class 1259 OID 186003)
-- Name: EinvoiceAndEwaylogs; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."EinvoiceAndEwaylogs" (
    "LogId" bigint NOT NULL,
    "InvoiceId" bigint,
    "InvoiceType" character varying(1),
    "Error" text,
    "RequestTime" timestamp without time zone,
    "RequestType" smallint,
    "RequestFor" smallint,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."EinvoiceAndEwaylogs" OWNER TO "10083";

--
-- TOC entry 2067 (class 1259 OID 186002)
-- Name: EinvoiceAndEwaylogs_LogId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."EinvoiceAndEwaylogs_LogId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."EinvoiceAndEwaylogs_LogId_seq" OWNER TO "10083";

--
-- TOC entry 11153 (class 0 OID 0)
-- Dependencies: 2067
-- Name: EinvoiceAndEwaylogs_LogId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."EinvoiceAndEwaylogs_LogId_seq" OWNED BY "10083_10833"."EinvoiceAndEwaylogs"."LogId";


--
-- TOC entry 2022 (class 1259 OID 185783)
-- Name: EinvoiceDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."EinvoiceDetails" (
    "EinvoiceDetailsId" smallint NOT NULL,
    "InvoiceId" integer,
    "InvoiceType" character varying(1),
    "Host" integer,
    "AckNo" character varying(50),
    "AckDt" timestamp without time zone,
    "Irn" character varying(500),
    "JwtIssuer" character varying(500),
    "Remark" character varying(1000),
    "SignedInvoice" text,
    "SignedQrCode" text,
    "CancelIrnDate" timestamp without time zone,
    "CancelIrnRemark" character varying(1000),
    "CancelIrnReason" character varying(1000),
    "ErrorMessage" text,
    "IrnStatus" character varying(10),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."EinvoiceDetails" OWNER TO "10083";

--
-- TOC entry 2021 (class 1259 OID 185782)
-- Name: EinvoiceDetails_EinvoiceDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."EinvoiceDetails_EinvoiceDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."EinvoiceDetails_EinvoiceDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11154 (class 0 OID 0)
-- Dependencies: 2021
-- Name: EinvoiceDetails_EinvoiceDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."EinvoiceDetails_EinvoiceDetailsId_seq" OWNED BY "10083_10833"."EinvoiceDetails"."EinvoiceDetailsId";


--
-- TOC entry 2124 (class 1259 OID 187397)
-- Name: EinvoiceEwayDispatchDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."EinvoiceEwayDispatchDetails" (
    "EinvoiceEwayDispatchDetailsId" smallint NOT NULL,
    "InvoiceId" integer,
    "InvoiceType" character varying(1),
    "Name" character varying(1000) NOT NULL,
    "Address" character varying(1000) NOT NULL,
    "City" character varying(1000) NOT NULL,
    "Pincode" character varying(10) NOT NULL,
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."EinvoiceEwayDispatchDetails" OWNER TO "10083";

--
-- TOC entry 2123 (class 1259 OID 187396)
-- Name: EinvoiceEwayDispatchDetails_EinvoiceEwayDispatchDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."EinvoiceEwayDispatchDetails_EinvoiceEwayDispatchDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."EinvoiceEwayDispatchDetails_EinvoiceEwayDispatchDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11155 (class 0 OID 0)
-- Dependencies: 2123
-- Name: EinvoiceEwayDispatchDetails_EinvoiceEwayDispatchDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."EinvoiceEwayDispatchDetails_EinvoiceEwayDispatchDetailsId_seq" OWNED BY "10083_10833"."EinvoiceEwayDispatchDetails"."EinvoiceEwayDispatchDetailsId";


--
-- TOC entry 2126 (class 1259 OID 187406)
-- Name: EinvoiceEwayExportDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."EinvoiceEwayExportDetails" (
    "EinvoiceEwayExportDetailsId" smallint NOT NULL,
    "InvoiceId" integer,
    "InvoiceType" character varying(1),
    "Address" character varying(1000) NOT NULL,
    "City" character varying(1000) NOT NULL,
    "Pincode" character varying(10) NOT NULL,
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."EinvoiceEwayExportDetails" OWNER TO "10083";

--
-- TOC entry 2125 (class 1259 OID 187405)
-- Name: EinvoiceEwayExportDetails_EinvoiceEwayExportDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."EinvoiceEwayExportDetails_EinvoiceEwayExportDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."EinvoiceEwayExportDetails_EinvoiceEwayExportDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11156 (class 0 OID 0)
-- Dependencies: 2125
-- Name: EinvoiceEwayExportDetails_EinvoiceEwayExportDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."EinvoiceEwayExportDetails_EinvoiceEwayExportDetailsId_seq" OWNED BY "10083_10833"."EinvoiceEwayExportDetails"."EinvoiceEwayExportDetailsId";


--
-- TOC entry 1796 (class 1259 OID 184710)
-- Name: EinvoiceSettings; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."EinvoiceSettings" (
    "EinvoiceSettingsId" smallint NOT NULL,
    "Setting" jsonb,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."EinvoiceSettings" OWNER TO "10083";

--
-- TOC entry 1795 (class 1259 OID 184709)
-- Name: EinvoiceSettings_EinvoiceSettingsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."EinvoiceSettings_EinvoiceSettingsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."EinvoiceSettings_EinvoiceSettingsId_seq" OWNER TO "10083";

--
-- TOC entry 11157 (class 0 OID 0)
-- Dependencies: 1795
-- Name: EinvoiceSettings_EinvoiceSettingsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."EinvoiceSettings_EinvoiceSettingsId_seq" OWNED BY "10083_10833"."EinvoiceSettings"."EinvoiceSettingsId";


--
-- TOC entry 2024 (class 1259 OID 185794)
-- Name: EwayBillDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."EwayBillDetails" (
    "EwayBillDetailsId" smallint NOT NULL,
    "InvoiceId" integer,
    "InvoiceType" character varying(1),
    "EwayNo" character varying(50),
    "EwayDt" character varying(100),
    "EwayValidTill" character varying(100),
    "CancelEwayBillRemark" character varying(1000),
    "CancelEwayBillDate" character varying(50),
    "ErrorMessage" text,
    "EwayBillStatus" character varying(10),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."EwayBillDetails" OWNER TO "10083";

--
-- TOC entry 2023 (class 1259 OID 185793)
-- Name: EwayBillDetails_EwayBillDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."EwayBillDetails_EwayBillDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."EwayBillDetails_EwayBillDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11158 (class 0 OID 0)
-- Dependencies: 2023
-- Name: EwayBillDetails_EwayBillDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."EwayBillDetails_EwayBillDetailsId_seq" OWNED BY "10083_10833"."EwayBillDetails"."EwayBillDetailsId";


--
-- TOC entry 2152 (class 1259 OID 187837)
-- Name: EwayDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."EwayDetails" (
    "EwayDetailsId" bigint NOT NULL,
    "InvoiceId" integer,
    "InvoiceType" character varying(2),
    "EwayBillNumber" bigint,
    "EwayBillDate" timestamp without time zone,
    "ValidUpTo" timestamp without time zone,
    "CancelDate" timestamp without time zone,
    "CancelReasonText" character varying(120),
    "EwayStatus" character varying(3),
    "CancelReasonCode" integer,
    "UpdatedOn" timestamp without time zone,
    "Alerts" text,
    "Errors" text,
    "Information" character varying(120),
    "CancelRemark" character varying(1000),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."EwayDetails" OWNER TO "10083";

--
-- TOC entry 2151 (class 1259 OID 187836)
-- Name: EwayDetails_EwayDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."EwayDetails_EwayDetailsId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."EwayDetails_EwayDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11159 (class 0 OID 0)
-- Dependencies: 2151
-- Name: EwayDetails_EwayDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."EwayDetails_EwayDetailsId_seq" OWNED BY "10083_10833"."EwayDetails"."EwayDetailsId";


--
-- TOC entry 2070 (class 1259 OID 186012)
-- Name: EwayLogs; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."EwayLogs" (
    "EwayLogsId" smallint NOT NULL,
    "InvoiceId" integer,
    "InvoiceType" character varying(1),
    "Date" timestamp with time zone,
    "NICStatus" boolean,
    "Error" text,
    "EwayStatus" character varying(10),
    "RequestType" character varying(30),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."EwayLogs" OWNER TO "10083";

--
-- TOC entry 2069 (class 1259 OID 186011)
-- Name: EwayLogs_EwayLogsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."EwayLogs_EwayLogsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."EwayLogs_EwayLogsId_seq" OWNER TO "10083";

--
-- TOC entry 11160 (class 0 OID 0)
-- Dependencies: 2069
-- Name: EwayLogs_EwayLogsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."EwayLogs_EwayLogsId_seq" OWNED BY "10083_10833"."EwayLogs"."EwayLogsId";


--
-- TOC entry 1798 (class 1259 OID 184720)
-- Name: EwaySettings; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."EwaySettings" (
    "EwaySettingsId" smallint NOT NULL,
    "Setting" jsonb,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."EwaySettings" OWNER TO "10083";

--
-- TOC entry 1797 (class 1259 OID 184719)
-- Name: EwaySettings_EwaySettingsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."EwaySettings_EwaySettingsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."EwaySettings_EwaySettingsId_seq" OWNER TO "10083";

--
-- TOC entry 11161 (class 0 OID 0)
-- Dependencies: 1797
-- Name: EwaySettings_EwaySettingsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."EwaySettings_EwaySettingsId_seq" OWNED BY "10083_10833"."EwaySettings"."EwaySettingsId";


--
-- TOC entry 2154 (class 1259 OID 187846)
-- Name: EwayTransportationDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."EwayTransportationDetails" (
    "EwayTransportationDetailsId" bigint NOT NULL,
    "InvoiceId" integer,
    "InvoiceType" character varying(2),
    "TransportersId" smallint,
    "GSTIN" character varying(15),
    "TransporterName" character varying(100),
    "TransportDocumentNumber" character varying(15),
    "TransportModeCode" integer,
    "TransportModeName" character varying(5),
    "Distance" integer,
    "TransportDocumentDate" timestamp without time zone,
    "VehicleNumber" character varying(15),
    "VehicleTypeCode" character varying(3),
    "VehicleTypeName" character varying(10),
    "VehicleUpdatedOn" timestamp without time zone,
    "UpdateReasonCode" integer,
    "UpdateReason" character varying(50),
    "UpdateRemark" character varying(100),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "FromState" character varying(2),
    "FromPlace" character varying(100),
    "IsActive" boolean DEFAULT true
);


ALTER TABLE "10083_10833"."EwayTransportationDetails" OWNER TO "10083";

--
-- TOC entry 2153 (class 1259 OID 187845)
-- Name: EwayTransportationDetails_EwayTransportationDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."EwayTransportationDetails_EwayTransportationDetailsId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."EwayTransportationDetails_EwayTransportationDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11162 (class 0 OID 0)
-- Dependencies: 2153
-- Name: EwayTransportationDetails_EwayTransportationDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."EwayTransportationDetails_EwayTransportationDetailsId_seq" OWNED BY "10083_10833"."EwayTransportationDetails"."EwayTransportationDetailsId";


--
-- TOC entry 1794 (class 1259 OID 184695)
-- Name: GSTSettings; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."GSTSettings" (
    "GSTSettingsId" smallint NOT NULL,
    "Setting" jsonb,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."GSTSettings" OWNER TO "10083";

--
-- TOC entry 1793 (class 1259 OID 184694)
-- Name: GSTSettings_GSTSettingsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."GSTSettings_GSTSettingsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."GSTSettings_GSTSettingsId_seq" OWNER TO "10083";

--
-- TOC entry 11163 (class 0 OID 0)
-- Dependencies: 1793
-- Name: GSTSettings_GSTSettingsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."GSTSettings_GSTSettingsId_seq" OWNED BY "10083_10833"."GSTSettings"."GSTSettingsId";


--
-- TOC entry 2026 (class 1259 OID 185803)
-- Name: GridLayout; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."GridLayout" (
    "GridLayoutId" smallint NOT NULL,
    "Type" integer NOT NULL,
    "ColumnsSchema" jsonb NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."GridLayout" OWNER TO "10083";

--
-- TOC entry 2025 (class 1259 OID 185802)
-- Name: GridLayout_GridLayoutId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."GridLayout_GridLayoutId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."GridLayout_GridLayoutId_seq" OWNER TO "10083";

--
-- TOC entry 11164 (class 0 OID 0)
-- Dependencies: 2025
-- Name: GridLayout_GridLayoutId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."GridLayout_GridLayoutId_seq" OWNED BY "10083_10833"."GridLayout"."GridLayoutId";


--
-- TOC entry 1860 (class 1259 OID 185031)
-- Name: InventorySettings; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."InventorySettings" (
    "InventorySettingsId" smallint NOT NULL,
    "EnableStockGroup" boolean NOT NULL,
    "EnableCategory" boolean NOT NULL,
    "EnableMeasurementUnits" boolean NOT NULL,
    "EnableAltMeasurementUnit" boolean NOT NULL,
    "EnableDescForItems" boolean NOT NULL,
    "EnableReorderLevel" boolean NOT NULL,
    "EnableNotificationOfReorderLevel" boolean NOT NULL,
    "EnableBatchNumberTracking" boolean NOT NULL,
    "EnableSerialNumberTracking" boolean NOT NULL,
    "EnablePartNumberForItems" boolean NOT NULL,
    "EnableNotesForItems" boolean NOT NULL,
    "TrackLandedCostOnItems" boolean NOT NULL,
    "EnableVariant" boolean NOT NULL,
    "EnablePriceList" boolean NOT NULL,
    "AllowDuplicateName" boolean NOT NULL,
    "PreventStockFromBelowZero" boolean NOT NULL,
    "StockWarningBelowZero" boolean NOT NULL,
    "EnableWareHouse" boolean NOT NULL,
    "EnableGST" boolean NOT NULL,
    "EnableItemCodeForItems" boolean NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."InventorySettings" OWNER TO "10083";

--
-- TOC entry 1859 (class 1259 OID 185030)
-- Name: InventorySettings_InventorySettingsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."InventorySettings_InventorySettingsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."InventorySettings_InventorySettingsId_seq" OWNER TO "10083";

--
-- TOC entry 11165 (class 0 OID 0)
-- Dependencies: 1859
-- Name: InventorySettings_InventorySettingsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."InventorySettings_InventorySettingsId_seq" OWNED BY "10083_10833"."InventorySettings"."InventorySettingsId";


--
-- TOC entry 2082 (class 1259 OID 186069)
-- Name: LUTMaster; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."LUTMaster" (
    "LUTMasterId" smallint NOT NULL,
    "LUTNumber" public.citext NOT NULL,
    "ValidFrom" date NOT NULL,
    "ValidTo" date NOT NULL,
    "ActiveStatus" boolean DEFAULT true,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."LUTMaster" OWNER TO "10083";

--
-- TOC entry 2081 (class 1259 OID 186068)
-- Name: LUTMaster_LUTMasterId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."LUTMaster_LUTMasterId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."LUTMaster_LUTMasterId_seq" OWNER TO "10083";

--
-- TOC entry 11166 (class 0 OID 0)
-- Dependencies: 2081
-- Name: LUTMaster_LUTMasterId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."LUTMaster_LUTMasterId_seq" OWNED BY "10083_10833"."LUTMaster"."LUTMasterId";


--
-- TOC entry 2074 (class 1259 OID 186029)
-- Name: LastDocumentDate; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."LastDocumentDate" (
    "LastDocumentDateId" smallint NOT NULL,
    "Date" date NOT NULL,
    "UpdatedOn" date NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."LastDocumentDate" OWNER TO "10083";

--
-- TOC entry 2073 (class 1259 OID 186028)
-- Name: LastDocumentDate_LastDocumentDateId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."LastDocumentDate_LastDocumentDateId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."LastDocumentDate_LastDocumentDateId_seq" OWNER TO "10083";

--
-- TOC entry 11167 (class 0 OID 0)
-- Dependencies: 2073
-- Name: LastDocumentDate_LastDocumentDateId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."LastDocumentDate_LastDocumentDateId_seq" OWNED BY "10083_10833"."LastDocumentDate"."LastDocumentDateId";


--
-- TOC entry 2144 (class 1259 OID 187711)
-- Name: MasterAuditLogs; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."MasterAuditLogs" (
    "LogId" bigint NOT NULL,
    "ModuleId" smallint NOT NULL,
    "DocumentId" smallint NOT NULL,
    "UserId" smallint NOT NULL,
    "RecordId" smallint NOT NULL,
    "Timestamp" timestamp with time zone,
    "Action" character varying(15) NOT NULL,
    "AuditDescription" text,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."MasterAuditLogs" OWNER TO "10083";

--
-- TOC entry 2143 (class 1259 OID 187710)
-- Name: MasterAuditLogs_LogId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."MasterAuditLogs_LogId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."MasterAuditLogs_LogId_seq" OWNER TO "10083";

--
-- TOC entry 11168 (class 0 OID 0)
-- Dependencies: 2143
-- Name: MasterAuditLogs_LogId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."MasterAuditLogs_LogId_seq" OWNED BY "10083_10833"."MasterAuditLogs"."LogId";


--
-- TOC entry 2155 (class 1259 OID 187875)
-- Name: NICCredentials; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."NICCredentials" (
    "UserName" character varying(100) NOT NULL,
    "Password" character varying(30) NOT NULL,
    "EnvironmentCode" integer NOT NULL,
    "EnvironmentName" character varying(50) NOT NULL,
    "Active" boolean,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."NICCredentials" OWNER TO "10083";

--
-- TOC entry 2078 (class 1259 OID 186046)
-- Name: OtherCharges; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."OtherCharges" (
    "OtherChargeId" smallint NOT NULL,
    "Description" text NOT NULL,
    "HSN" character varying(8),
    "TaxableCode" integer DEFAULT 0,
    "TaxableName" character varying(3) DEFAULT 'No'::character varying,
    "GSTRateCode" numeric,
    "GSTRateName" character varying(10),
    "AppropriateCode" integer DEFAULT 0,
    "AppropriateName" character varying(3) DEFAULT 'No'::character varying,
    "ActiveStatus" boolean DEFAULT true,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."OtherCharges" OWNER TO "10083";

--
-- TOC entry 2077 (class 1259 OID 186045)
-- Name: OtherCharges_OtherChargeId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."OtherCharges_OtherChargeId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."OtherCharges_OtherChargeId_seq" OWNER TO "10083";

--
-- TOC entry 11169 (class 0 OID 0)
-- Dependencies: 2077
-- Name: OtherCharges_OtherChargeId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."OtherCharges_OtherChargeId_seq" OWNED BY "10083_10833"."OtherCharges"."OtherChargeId";


--
-- TOC entry 2098 (class 1259 OID 186141)
-- Name: PCNBatchDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PCNBatchDetails" (
    "PCNBatchId" smallint NOT NULL,
    "PCNItemId" smallint NOT NULL,
    "Name" character varying(1000),
    "SerialNumber" integer,
    "ExpiryDate" date,
    "ManufacturingDate" date,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PCNBatchDetails" OWNER TO "10083";

--
-- TOC entry 2097 (class 1259 OID 186140)
-- Name: PCNBatchDetails_PCNBatchId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PCNBatchDetails_PCNBatchId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PCNBatchDetails_PCNBatchId_seq" OWNER TO "10083";

--
-- TOC entry 11170 (class 0 OID 0)
-- Dependencies: 2097
-- Name: PCNBatchDetails_PCNBatchId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PCNBatchDetails_PCNBatchId_seq" OWNED BY "10083_10833"."PCNBatchDetails"."PCNBatchId";


--
-- TOC entry 2106 (class 1259 OID 186181)
-- Name: PCNItemWareHouse; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PCNItemWareHouse" (
    "PCNItemWHId" smallint NOT NULL,
    "PCNItemId" smallint NOT NULL,
    "WareHouseId" smallint NOT NULL,
    "Quantity" numeric,
    "Rate" numeric,
    "Total" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PCNItemWareHouse" OWNER TO "10083";

--
-- TOC entry 2105 (class 1259 OID 186180)
-- Name: PCNItemWareHouse_PCNItemWHId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PCNItemWareHouse_PCNItemWHId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PCNItemWareHouse_PCNItemWHId_seq" OWNER TO "10083";

--
-- TOC entry 11171 (class 0 OID 0)
-- Dependencies: 2105
-- Name: PCNItemWareHouse_PCNItemWHId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PCNItemWareHouse_PCNItemWHId_seq" OWNED BY "10083_10833"."PCNItemWareHouse"."PCNItemWHId";


--
-- TOC entry 1864 (class 1259 OID 185047)
-- Name: PrintSettings; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PrintSettings" (
    "PrintSettingsId" bigint NOT NULL,
    "PrintSettings" jsonb NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PrintSettings" OWNER TO "10083";

--
-- TOC entry 1863 (class 1259 OID 185046)
-- Name: PrintSettings_PrintSettingsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PrintSettings_PrintSettingsId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PrintSettings_PrintSettingsId_seq" OWNER TO "10083";

--
-- TOC entry 11172 (class 0 OID 0)
-- Dependencies: 1863
-- Name: PrintSettings_PrintSettingsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PrintSettings_PrintSettingsId_seq" OWNED BY "10083_10833"."PrintSettings"."PrintSettingsId";


--
-- TOC entry 2028 (class 1259 OID 185812)
-- Name: PrintTemplate; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PrintTemplate" (
    "PrintTemplateId" smallint NOT NULL,
    "TemplateId" smallint NOT NULL,
    "DesignJSON" text,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PrintTemplate" OWNER TO "10083";

--
-- TOC entry 2027 (class 1259 OID 185811)
-- Name: PrintTemplate_PrintTemplateId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PrintTemplate_PrintTemplateId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PrintTemplate_PrintTemplateId_seq" OWNER TO "10083";

--
-- TOC entry 11173 (class 0 OID 0)
-- Dependencies: 2027
-- Name: PrintTemplate_PrintTemplateId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PrintTemplate_PrintTemplateId_seq" OWNED BY "10083_10833"."PrintTemplate"."PrintTemplateId";


--
-- TOC entry 1890 (class 1259 OID 185170)
-- Name: Purchase; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."Purchase" (
    "PurchaseId" smallint NOT NULL,
    "CurrencyId" smallint,
    "SalesPersonId" smallint,
    "ExchangeRate" numeric,
    "Number" character varying(20) NOT NULL,
    "Date" date NOT NULL,
    "FinancialYear" integer NOT NULL,
    "TemplateId" smallint NOT NULL,
    "SupplierId" smallint NOT NULL,
    "DocumentName" character varying(20) NOT NULL,
    "SupplierInvoiceNo" character varying(20),
    "SupplierInvoiceDate" date,
    "TermAndConditionId" smallint,
    "TermAndConditionText" text,
    "EcomGSTIN" character varying(15),
    "ReverseCharge" character varying(1) DEFAULT 'N'::character varying,
    "DocumentStatus" smallint DEFAULT 1,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."Purchase" OWNER TO "10083";

--
-- TOC entry 1908 (class 1259 OID 185253)
-- Name: PurchaseBatchDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseBatchDetails" (
    "PurchaseBatchDetailsId" smallint NOT NULL,
    "PurchaseItemsId" smallint NOT NULL,
    "Name" character varying(1000),
    "SerialNumber" integer,
    "ExpiryDate" date,
    "ManufacturingDate" date,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseBatchDetails" OWNER TO "10083";

--
-- TOC entry 1907 (class 1259 OID 185252)
-- Name: PurchaseBatchDetails_PurchaseBatchDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseBatchDetails_PurchaseBatchDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseBatchDetails_PurchaseBatchDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11174 (class 0 OID 0)
-- Dependencies: 1907
-- Name: PurchaseBatchDetails_PurchaseBatchDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseBatchDetails_PurchaseBatchDetailsId_seq" OWNED BY "10083_10833"."PurchaseBatchDetails"."PurchaseBatchDetailsId";


--
-- TOC entry 1892 (class 1259 OID 185181)
-- Name: PurchaseBillFrom; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseBillFrom" (
    "PurchaseBillFromId" smallint NOT NULL,
    "PurchaseId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "POSCode" character varying(2) NOT NULL,
    "POSName" character varying(100) NOT NULL,
    "GSTIN" character varying(15),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseBillFrom" OWNER TO "10083";

--
-- TOC entry 1891 (class 1259 OID 185180)
-- Name: PurchaseBillFrom_PurchaseBillFromId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseBillFrom_PurchaseBillFromId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseBillFrom_PurchaseBillFromId_seq" OWNER TO "10083";

--
-- TOC entry 11175 (class 0 OID 0)
-- Dependencies: 1891
-- Name: PurchaseBillFrom_PurchaseBillFromId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseBillFrom_PurchaseBillFromId_seq" OWNED BY "10083_10833"."PurchaseBillFrom"."PurchaseBillFromId";


--
-- TOC entry 2090 (class 1259 OID 186104)
-- Name: PurchaseCreditNote; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseCreditNote" (
    "PurchaseCreditNoteId" smallint NOT NULL,
    "CurrencyId" smallint,
    "SalesPersonId" smallint,
    "ExchangeRate" numeric,
    "Number" character varying(20),
    "Date" date,
    "FinancialYear" integer,
    "TemplateId" smallint NOT NULL,
    "DocumentName" character varying(20),
    "SupplierId" smallint NOT NULL,
    "OriginalInvoiceNo" character varying(20),
    "OriginalInvoiceDate" date,
    "TermAndConditionId" smallint,
    "TermAndConditionText" text,
    "EcomGSTIN" character varying(15),
    "DocumentStatus" smallint DEFAULT 1,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseCreditNote" OWNER TO "10083";

--
-- TOC entry 2094 (class 1259 OID 186123)
-- Name: PurchaseCreditNoteBillFrom; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseCreditNoteBillFrom" (
    "PurchaseCreditNoteBillFromId" smallint NOT NULL,
    "PurchaseCreditNoteId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "POSCode" character varying(2) NOT NULL,
    "POSName" character varying(100) NOT NULL,
    "GSTIN" character varying(15),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseCreditNoteBillFrom" OWNER TO "10083";

--
-- TOC entry 2093 (class 1259 OID 186122)
-- Name: PurchaseCreditNoteBillFrom_PurchaseCreditNoteBillFromId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseCreditNoteBillFrom_PurchaseCreditNoteBillFromId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteBillFrom_PurchaseCreditNoteBillFromId_seq" OWNER TO "10083";

--
-- TOC entry 11176 (class 0 OID 0)
-- Dependencies: 2093
-- Name: PurchaseCreditNoteBillFrom_PurchaseCreditNoteBillFromId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteBillFrom_PurchaseCreditNoteBillFromId_seq" OWNED BY "10083_10833"."PurchaseCreditNoteBillFrom"."PurchaseCreditNoteBillFromId";


--
-- TOC entry 2084 (class 1259 OID 186077)
-- Name: PurchaseCreditNoteDispatchFrom; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseCreditNoteDispatchFrom" (
    "PurchaseCreditNoteDispatchFromId" smallint NOT NULL,
    "PurchaseCreditNoteId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "DispatchDocNo" character varying(20) NOT NULL,
    "DispatchThrough" character varying(40) NOT NULL,
    "Destination" character varying(200) NOT NULL,
    "CarrierNameAgent" character varying(100),
    "BillOfLandingLrRrNo" character varying(20),
    "Date" date,
    "MotorVehicleNo" character varying(20),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseCreditNoteDispatchFrom" OWNER TO "10083";

--
-- TOC entry 2083 (class 1259 OID 186076)
-- Name: PurchaseCreditNoteDispatchFro_PurchaseCreditNoteDispatchFro_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseCreditNoteDispatchFro_PurchaseCreditNoteDispatchFro_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteDispatchFro_PurchaseCreditNoteDispatchFro_seq" OWNER TO "10083";

--
-- TOC entry 11177 (class 0 OID 0)
-- Dependencies: 2083
-- Name: PurchaseCreditNoteDispatchFro_PurchaseCreditNoteDispatchFro_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteDispatchFro_PurchaseCreditNoteDispatchFro_seq" OWNED BY "10083_10833"."PurchaseCreditNoteDispatchFrom"."PurchaseCreditNoteDispatchFromId";


--
-- TOC entry 2104 (class 1259 OID 186172)
-- Name: PurchaseCreditNoteEwayBillsDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseCreditNoteEwayBillsDetails" (
    "PurchaseCreditNoteEwayBillsDetailsId" smallint NOT NULL,
    "PurchaseCreditNoteId" smallint NOT NULL,
    "GSTIN" character varying(15),
    "TransporterName" character varying(100),
    "TransportModeCode" integer,
    "TransportModeName" character varying(5),
    "Distance" character varying(4),
    "TransportDocumentNumber" character varying(15),
    "TransportDocumentDate" date,
    "VehicleNumber" character varying(20),
    "VehicleTypeCode" character varying(3),
    "VehicleTypeName" character varying(50),
    "EwayBillNumber" character varying(50),
    "EwayBillDate" timestamp without time zone,
    "DispatchFrom" character varying(1000),
    "ShipTo" character varying(1000),
    "ValidUpTo" timestamp without time zone,
    "EwayStatus" character varying(10),
    "Alerts" text,
    "Information" text,
    "Errors" text,
    "CancelDate" timestamp without time zone,
    "CancelReason" character varying(1000),
    "CancelRemark" text,
    "UpdateReason" character varying(1000),
    "UpdateRemark" text,
    "ExtendReason" character varying(1000),
    "ExtendRemark" text,
    "ExtendOn" timestamp without time zone,
    "VehicleUpdatedOn" timestamp without time zone,
    "TransUpdatedOn" timestamp without time zone,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseCreditNoteEwayBillsDetails" OWNER TO "10083";

--
-- TOC entry 2103 (class 1259 OID 186171)
-- Name: PurchaseCreditNoteEwayBillsDe_PurchaseCreditNoteEwayBillsDe_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseCreditNoteEwayBillsDe_PurchaseCreditNoteEwayBillsDe_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteEwayBillsDe_PurchaseCreditNoteEwayBillsDe_seq" OWNER TO "10083";

--
-- TOC entry 11178 (class 0 OID 0)
-- Dependencies: 2103
-- Name: PurchaseCreditNoteEwayBillsDe_PurchaseCreditNoteEwayBillsDe_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteEwayBillsDe_PurchaseCreditNoteEwayBillsDe_seq" OWNED BY "10083_10833"."PurchaseCreditNoteEwayBillsDetails"."PurchaseCreditNoteEwayBillsDetailsId";


--
-- TOC entry 2092 (class 1259 OID 186114)
-- Name: PurchaseCreditNoteExportDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseCreditNoteExportDetails" (
    "PurchaseCreditNoteExportDetailsId" smallint NOT NULL,
    "PurchaseCreditNoteId" smallint NOT NULL,
    "ShippingBillNumber" character varying(20),
    "ShippingBillDate" date,
    "PortCode" character varying(6),
    "PortName" character varying(25),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "RefundClaim" boolean,
    "ExportDuty" numeric,
    "DispatchThrough" character varying(1000),
    "VesselFlightNo" character varying(1000),
    "DestinationPortCode" character varying(6),
    "DestinationPortName" character varying(25),
    "Destination" character varying(100),
    "LUTNumber" character varying(100),
    "PlaceOfReceiptByShipper" character varying(100),
    "PortOfLoadingCode" character varying(10),
    "PortOfLoadingName" character varying(100),
    "PortOfDischargeCode" character varying(10),
    "PortOfDischargeName" character varying(100),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseCreditNoteExportDetails" OWNER TO "10083";

--
-- TOC entry 2091 (class 1259 OID 186113)
-- Name: PurchaseCreditNoteExportDetai_PurchaseCreditNoteExportDetai_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseCreditNoteExportDetai_PurchaseCreditNoteExportDetai_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteExportDetai_PurchaseCreditNoteExportDetai_seq" OWNER TO "10083";

--
-- TOC entry 11179 (class 0 OID 0)
-- Dependencies: 2091
-- Name: PurchaseCreditNoteExportDetai_PurchaseCreditNoteExportDetai_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteExportDetai_PurchaseCreditNoteExportDetai_seq" OWNED BY "10083_10833"."PurchaseCreditNoteExportDetails"."PurchaseCreditNoteExportDetailsId";


--
-- TOC entry 2086 (class 1259 OID 186086)
-- Name: PurchaseCreditNoteItems; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseCreditNoteItems" (
    "PurchaseCreditNoteItemsId" bigint NOT NULL,
    "PurchaseCreditNoteId" smallint NOT NULL,
    "StockItemId" bigint NOT NULL,
    "ItemName" character varying(500) NOT NULL,
    "ItemSerialNumber" smallint,
    "ItemCode" integer,
    "ItemDescription" character varying(500),
    "HSNSAC" character varying(8),
    "BarCode" character varying(500),
    "Quantity" numeric,
    "FreeQuantity" numeric,
    "UnitPrice" numeric NOT NULL,
    "SubTotal" numeric NOT NULL,
    "Discount" numeric NOT NULL,
    "OtherCharges" numeric NOT NULL,
    "TaxableValue" numeric NOT NULL,
    "GstRate" numeric,
    "CessRate" numeric,
    "StateCessRateCode" numeric,
    "StateCessRateName" numeric,
    "IGST" numeric NOT NULL,
    "CGST" numeric NOT NULL,
    "SGST" numeric NOT NULL,
    "Cess" numeric NOT NULL,
    "StateCess" numeric,
    "CessNonAdvolRateCode" numeric,
    "CessNonAdvolRateName" numeric,
    "CessNonAdvolUnit" numeric,
    "StateCessNonAdvolRateCode" numeric,
    "StateCessNonAdvolRateName" numeric,
    "StateCessNonAdvolUnit" numeric,
    "CessNonAdvol" numeric,
    "StateCessNonAdvol" numeric,
    "TotalItemValue" numeric NOT NULL,
    "MarksContainerNo" character varying(20),
    "NumberOfPackages" integer,
    "DiscountRate" numeric,
    "UOMCode" character varying(3),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseCreditNoteItems" OWNER TO "10083";

--
-- TOC entry 2085 (class 1259 OID 186085)
-- Name: PurchaseCreditNoteItems_PurchaseCreditNoteItemsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseCreditNoteItems_PurchaseCreditNoteItemsId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteItems_PurchaseCreditNoteItemsId_seq" OWNER TO "10083";

--
-- TOC entry 11180 (class 0 OID 0)
-- Dependencies: 2085
-- Name: PurchaseCreditNoteItems_PurchaseCreditNoteItemsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteItems_PurchaseCreditNoteItemsId_seq" OWNED BY "10083_10833"."PurchaseCreditNoteItems"."PurchaseCreditNoteItemsId";


--
-- TOC entry 2102 (class 1259 OID 186159)
-- Name: PurchaseCreditNoteOtherCharges; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseCreditNoteOtherCharges" (
    "PurchaseCreditNoteOtherChargeId" smallint NOT NULL,
    "PurchaseCreditNoteId" smallint NOT NULL,
    "OtherChargeId" smallint NOT NULL,
    "GSTRateCode" numeric,
    "GSTRateName" numeric,
    "Amount" numeric,
    "CGST" numeric,
    "SGST" numeric,
    "IGST" numeric,
    "HSN" character varying(8),
    "TaxableCode" integer DEFAULT 0,
    "TaxableName" character varying(3) DEFAULT 'No'::character varying,
    "AppropriateCode" integer DEFAULT 0,
    "AppropriateName" character varying(3) DEFAULT 'No'::character varying,
    "Name" text,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseCreditNoteOtherCharges" OWNER TO "10083";

--
-- TOC entry 2101 (class 1259 OID 186158)
-- Name: PurchaseCreditNoteOtherCharge_PurchaseCreditNoteOtherCharge_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseCreditNoteOtherCharge_PurchaseCreditNoteOtherCharge_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteOtherCharge_PurchaseCreditNoteOtherCharge_seq" OWNER TO "10083";

--
-- TOC entry 11181 (class 0 OID 0)
-- Dependencies: 2101
-- Name: PurchaseCreditNoteOtherCharge_PurchaseCreditNoteOtherCharge_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteOtherCharge_PurchaseCreditNoteOtherCharge_seq" OWNED BY "10083_10833"."PurchaseCreditNoteOtherCharges"."PurchaseCreditNoteOtherChargeId";


--
-- TOC entry 2100 (class 1259 OID 186150)
-- Name: PurchaseCreditNoteOtherDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseCreditNoteOtherDetails" (
    "PurchaseCreditNoteOtherDetailsId" smallint NOT NULL,
    "PurchaseCreditNoteId" smallint NOT NULL,
    "ModeTermsOfPayment" character varying(1000),
    "TermsOfDelivery" character varying(1000),
    "TermAndCondition" character varying(1000),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseCreditNoteOtherDetails" OWNER TO "10083";

--
-- TOC entry 2099 (class 1259 OID 186149)
-- Name: PurchaseCreditNoteOtherDetail_PurchaseCreditNoteOtherDetail_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseCreditNoteOtherDetail_PurchaseCreditNoteOtherDetail_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteOtherDetail_PurchaseCreditNoteOtherDetail_seq" OWNER TO "10083";

--
-- TOC entry 11182 (class 0 OID 0)
-- Dependencies: 2099
-- Name: PurchaseCreditNoteOtherDetail_PurchaseCreditNoteOtherDetail_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteOtherDetail_PurchaseCreditNoteOtherDetail_seq" OWNED BY "10083_10833"."PurchaseCreditNoteOtherDetails"."PurchaseCreditNoteOtherDetailsId";


--
-- TOC entry 2096 (class 1259 OID 186132)
-- Name: PurchaseCreditNoteShipTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseCreditNoteShipTo" (
    "PurchaseCreditNoteShipToId" smallint NOT NULL,
    "PurchaseCreditNoteId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2),
    "StateName" character varying(100),
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseCreditNoteShipTo" OWNER TO "10083";

--
-- TOC entry 2095 (class 1259 OID 186131)
-- Name: PurchaseCreditNoteShipTo_PurchaseCreditNoteShipToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseCreditNoteShipTo_PurchaseCreditNoteShipToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteShipTo_PurchaseCreditNoteShipToId_seq" OWNER TO "10083";

--
-- TOC entry 11183 (class 0 OID 0)
-- Dependencies: 2095
-- Name: PurchaseCreditNoteShipTo_PurchaseCreditNoteShipToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteShipTo_PurchaseCreditNoteShipToId_seq" OWNED BY "10083_10833"."PurchaseCreditNoteShipTo"."PurchaseCreditNoteShipToId";


--
-- TOC entry 2088 (class 1259 OID 186095)
-- Name: PurchaseCreditNoteValueDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseCreditNoteValueDetails" (
    "PurchaseCreditNoteValueDetailsId" smallint NOT NULL,
    "PurchaseCreditNoteId" smallint NOT NULL,
    "AssessableValue" numeric,
    "IGSTValue" numeric,
    "CGSTValue" numeric,
    "SGSTValue" numeric,
    "CessValue" numeric,
    "StateCessValue" numeric,
    "TotalInvoiceValue" numeric,
    "RoundOffAmount" numeric,
    "TotalInvValForeignCurrency" numeric,
    "Discount" numeric,
    "OtherCharge" numeric,
    "OtherChargeTaxable" numeric,
    "TCSRate" numeric,
    "InvoiceValueWithoutTCS" numeric,
    "TCSAmount" numeric,
    "SubTotal" numeric NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseCreditNoteValueDetails" OWNER TO "10083";

--
-- TOC entry 2087 (class 1259 OID 186094)
-- Name: PurchaseCreditNoteValueDetail_PurchaseCreditNoteValueDetail_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseCreditNoteValueDetail_PurchaseCreditNoteValueDetail_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteValueDetail_PurchaseCreditNoteValueDetail_seq" OWNER TO "10083";

--
-- TOC entry 11184 (class 0 OID 0)
-- Dependencies: 2087
-- Name: PurchaseCreditNoteValueDetail_PurchaseCreditNoteValueDetail_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseCreditNoteValueDetail_PurchaseCreditNoteValueDetail_seq" OWNED BY "10083_10833"."PurchaseCreditNoteValueDetails"."PurchaseCreditNoteValueDetailsId";


--
-- TOC entry 2089 (class 1259 OID 186103)
-- Name: PurchaseCreditNote_PurchaseCreditNoteId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseCreditNote_PurchaseCreditNoteId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseCreditNote_PurchaseCreditNoteId_seq" OWNER TO "10083";

--
-- TOC entry 11185 (class 0 OID 0)
-- Dependencies: 2089
-- Name: PurchaseCreditNote_PurchaseCreditNoteId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseCreditNote_PurchaseCreditNoteId_seq" OWNED BY "10083_10833"."PurchaseCreditNote"."PurchaseCreditNoteId";


--
-- TOC entry 1906 (class 1259 OID 185244)
-- Name: PurchaseEwayBillsDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseEwayBillsDetails" (
    "PurchaseEwayBillsDetailsId" smallint NOT NULL,
    "PurchaseId" smallint NOT NULL,
    "GSTIN" character varying(15),
    "TransporterName" character varying(100),
    "TransportModeCode" integer,
    "TransportModeName" character varying(5),
    "Distance" character varying(4),
    "TransportDocumentNumber" character varying(15),
    "TransportDocumentDate" date,
    "VehicleNumber" character varying(20),
    "VehicleTypeCode" character varying(3),
    "VehicleTypeName" character varying(50),
    "EwayBillNumber" character varying(50),
    "EwayBillDate" timestamp without time zone,
    "DispatchFrom" character varying(1000),
    "ShipTo" character varying(1000),
    "ValidUpTo" timestamp without time zone,
    "EwayStatus" character varying(10),
    "Alerts" text,
    "Information" text,
    "Errors" text,
    "CancelDate" timestamp without time zone,
    "CancelReason" character varying(1000),
    "CancelRemark" text,
    "UpdateReason" character varying(1000),
    "UpdateRemark" text,
    "ExtendReason" character varying(1000),
    "ExtendRemark" text,
    "ExtendOn" timestamp without time zone,
    "VehicleUpdatedOn" timestamp without time zone,
    "TransUpdatedOn" timestamp without time zone,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseEwayBillsDetails" OWNER TO "10083";

--
-- TOC entry 1905 (class 1259 OID 185243)
-- Name: PurchaseEwayBillsDetails_PurchaseEwayBillsDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseEwayBillsDetails_PurchaseEwayBillsDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseEwayBillsDetails_PurchaseEwayBillsDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11186 (class 0 OID 0)
-- Dependencies: 1905
-- Name: PurchaseEwayBillsDetails_PurchaseEwayBillsDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseEwayBillsDetails_PurchaseEwayBillsDetailsId_seq" OWNED BY "10083_10833"."PurchaseEwayBillsDetails"."PurchaseEwayBillsDetailsId";


--
-- TOC entry 1902 (class 1259 OID 185226)
-- Name: PurchaseImportDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseImportDetails" (
    "PurchaseImportDetailsId" smallint NOT NULL,
    "PurchaseId" smallint NOT NULL,
    "ShippingBillNumber" character varying(20),
    "ShippingBillDate" date,
    "PortCode" character varying(6),
    "PortName" character varying(25),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "RefundClaim" boolean,
    "ImportDuty" numeric,
    "DispatchThrough" character varying(1000),
    "VesselFlightNo" character varying(1000),
    "ExchangeRate" numeric,
    "DestinationPortCode" character varying(6),
    "DestinationPortName" character varying(25),
    "Destination" character varying(100),
    "LUTNumber" character varying(100),
    "PlaceOfReceiptByShipper" character varying(100),
    "PortOfLoadingCode" character varying(10),
    "PortOfLoadingName" character varying(100),
    "PortOfDischargeCode" character varying(10),
    "PortOfDischargeName" character varying(100),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseImportDetails" OWNER TO "10083";

--
-- TOC entry 1901 (class 1259 OID 185225)
-- Name: PurchaseImportDetails_PurchaseImportDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseImportDetails_PurchaseImportDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseImportDetails_PurchaseImportDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11187 (class 0 OID 0)
-- Dependencies: 1901
-- Name: PurchaseImportDetails_PurchaseImportDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseImportDetails_PurchaseImportDetailsId_seq" OWNED BY "10083_10833"."PurchaseImportDetails"."PurchaseImportDetailsId";


--
-- TOC entry 1912 (class 1259 OID 185275)
-- Name: PurchaseItemWareHouse; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseItemWareHouse" (
    "PurchaseItemWareHouseId" smallint NOT NULL,
    "PurchaseItemsId" smallint NOT NULL,
    "WareHouseId" smallint NOT NULL,
    "Quantity" numeric,
    "Rate" numeric,
    "Total" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseItemWareHouse" OWNER TO "10083";

--
-- TOC entry 1911 (class 1259 OID 185274)
-- Name: PurchaseItemWareHouse_PurchaseItemWareHouseId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseItemWareHouse_PurchaseItemWareHouseId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseItemWareHouse_PurchaseItemWareHouseId_seq" OWNER TO "10083";

--
-- TOC entry 11188 (class 0 OID 0)
-- Dependencies: 1911
-- Name: PurchaseItemWareHouse_PurchaseItemWareHouseId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseItemWareHouse_PurchaseItemWareHouseId_seq" OWNED BY "10083_10833"."PurchaseItemWareHouse"."PurchaseItemWareHouseId";


--
-- TOC entry 1900 (class 1259 OID 185217)
-- Name: PurchaseItems; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseItems" (
    "PurchaseItemsId" bigint NOT NULL,
    "PurchaseId" smallint NOT NULL,
    "StockItemId" bigint NOT NULL,
    "ItemName" character varying(500) NOT NULL,
    "ItemSerialNumber" smallint,
    "ItemCode" integer,
    "ItemDescription" character varying(500),
    "HSNSAC" character varying(8),
    "BarCode" character varying(500),
    "Quantity" numeric,
    "FreeQuantity" numeric,
    "UnitPrice" numeric NOT NULL,
    "SubTotal" numeric NOT NULL,
    "Discount" numeric NOT NULL,
    "OtherCharges" numeric NOT NULL,
    "TaxableValue" numeric NOT NULL,
    "GstRate" numeric,
    "CessRate" numeric,
    "StateCessRateCode" numeric,
    "StateCessRateName" numeric,
    "IGST" numeric NOT NULL,
    "CGST" numeric NOT NULL,
    "SGST" numeric NOT NULL,
    "Cess" numeric NOT NULL,
    "StateCess" numeric,
    "CessNonAdvolRateCode" numeric,
    "CessNonAdvolRateName" numeric,
    "CessNonAdvolUnit" numeric,
    "StateCessNonAdvolRateCode" numeric,
    "StateCessNonAdvolRateName" numeric,
    "StateCessNonAdvolUnit" numeric,
    "CessNonAdvol" numeric,
    "StateCessNonAdvol" numeric,
    "TotalItemValue" numeric NOT NULL,
    "MarksContainerNo" character varying(20),
    "NumberOfPackages" integer,
    "DiscountRate" numeric,
    "UOMCode" character varying(3),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseItems" OWNER TO "10083";

--
-- TOC entry 1899 (class 1259 OID 185216)
-- Name: PurchaseItems_PurchaseItemsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseItems_PurchaseItemsId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseItems_PurchaseItemsId_seq" OWNER TO "10083";

--
-- TOC entry 11189 (class 0 OID 0)
-- Dependencies: 1899
-- Name: PurchaseItems_PurchaseItemsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseItems_PurchaseItemsId_seq" OWNED BY "10083_10833"."PurchaseItems"."PurchaseItemsId";


--
-- TOC entry 1932 (class 1259 OID 185363)
-- Name: PurchaseOrder; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseOrder" (
    "PurchaseOrderId" smallint NOT NULL,
    "Number" character varying(20),
    "Date" date,
    "FinancialYear" integer,
    "TemplateId" smallint NOT NULL,
    "DocumentName" character varying(20),
    "SupplierId" smallint NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseOrder" OWNER TO "10083";

--
-- TOC entry 1948 (class 1259 OID 185433)
-- Name: PurchaseOrderBatchDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseOrderBatchDetails" (
    "PurchaseOrderBatchDetailsId" smallint NOT NULL,
    "PurchaseOrderItemsId" smallint NOT NULL,
    "Name" character varying(1000),
    "SerialNumber" integer,
    "ExpiryDate" date,
    "ManufacturingDate" date,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseOrderBatchDetails" OWNER TO "10083";

--
-- TOC entry 1947 (class 1259 OID 185432)
-- Name: PurchaseOrderBatchDetails_PurchaseOrderBatchDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseOrderBatchDetails_PurchaseOrderBatchDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseOrderBatchDetails_PurchaseOrderBatchDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11190 (class 0 OID 0)
-- Dependencies: 1947
-- Name: PurchaseOrderBatchDetails_PurchaseOrderBatchDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseOrderBatchDetails_PurchaseOrderBatchDetailsId_seq" OWNED BY "10083_10833"."PurchaseOrderBatchDetails"."PurchaseOrderBatchDetailsId";


--
-- TOC entry 1934 (class 1259 OID 185370)
-- Name: PurchaseOrderBillTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseOrderBillTo" (
    "PurchaseOrderBillToId" smallint NOT NULL,
    "PurchaseOrderId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "POSCode" character varying(2) NOT NULL,
    "POSName" character varying(100) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseOrderBillTo" OWNER TO "10083";

--
-- TOC entry 1933 (class 1259 OID 185369)
-- Name: PurchaseOrderBillTo_PurchaseOrderBillToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseOrderBillTo_PurchaseOrderBillToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseOrderBillTo_PurchaseOrderBillToId_seq" OWNER TO "10083";

--
-- TOC entry 11191 (class 0 OID 0)
-- Dependencies: 1933
-- Name: PurchaseOrderBillTo_PurchaseOrderBillToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseOrderBillTo_PurchaseOrderBillToId_seq" OWNED BY "10083_10833"."PurchaseOrderBillTo"."PurchaseOrderBillToId";


--
-- TOC entry 1938 (class 1259 OID 185388)
-- Name: PurchaseOrderDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseOrderDetails" (
    "PurchaseOrderDetailsId" smallint NOT NULL,
    "PurchaseOrderId" smallint NOT NULL,
    "ModeTermsOfPayment" character varying(1000),
    "TermsOfDelivery" character varying(1000),
    "TermAndCondition" character varying(1000),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseOrderDetails" OWNER TO "10083";

--
-- TOC entry 1937 (class 1259 OID 185387)
-- Name: PurchaseOrderDetails_PurchaseOrderDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseOrderDetails_PurchaseOrderDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseOrderDetails_PurchaseOrderDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11192 (class 0 OID 0)
-- Dependencies: 1937
-- Name: PurchaseOrderDetails_PurchaseOrderDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseOrderDetails_PurchaseOrderDetailsId_seq" OWNED BY "10083_10833"."PurchaseOrderDetails"."PurchaseOrderDetailsId";


--
-- TOC entry 1940 (class 1259 OID 185397)
-- Name: PurchaseOrderDispatchFrom; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseOrderDispatchFrom" (
    "PurchaseOrderDispatchFromId" smallint NOT NULL,
    "PurchaseOrderId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address1" character varying(1000),
    "Address2" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseOrderDispatchFrom" OWNER TO "10083";

--
-- TOC entry 1939 (class 1259 OID 185396)
-- Name: PurchaseOrderDispatchFrom_PurchaseOrderDispatchFromId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseOrderDispatchFrom_PurchaseOrderDispatchFromId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseOrderDispatchFrom_PurchaseOrderDispatchFromId_seq" OWNER TO "10083";

--
-- TOC entry 11193 (class 0 OID 0)
-- Dependencies: 1939
-- Name: PurchaseOrderDispatchFrom_PurchaseOrderDispatchFromId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseOrderDispatchFrom_PurchaseOrderDispatchFromId_seq" OWNED BY "10083_10833"."PurchaseOrderDispatchFrom"."PurchaseOrderDispatchFromId";


--
-- TOC entry 1944 (class 1259 OID 185415)
-- Name: PurchaseOrderExportDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseOrderExportDetails" (
    "PurchaseOrderExportDetailsId" smallint NOT NULL,
    "PurchaseOrderId" smallint NOT NULL,
    "ShippingBillNumber" character varying(20),
    "ShippingBillDate" date,
    "PortCode" character varying(6),
    "PortName" character varying(25),
    "ForeignCurrency" character varying(16),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "RefundClaim" boolean,
    "ExportDuty" numeric,
    "DispatchThrough" character varying(1000),
    "VehicleNumber" character varying(1000),
    "ExchangeRate" numeric,
    "DestinationPortCode" character varying(6),
    "DestinationPortName" character varying(25),
    "Destination" character varying(100),
    "LUTNumber" character varying(100),
    "PlaceOfReceipt" character varying(100),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseOrderExportDetails" OWNER TO "10083";

--
-- TOC entry 1943 (class 1259 OID 185414)
-- Name: PurchaseOrderExportDetails_PurchaseOrderExportDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseOrderExportDetails_PurchaseOrderExportDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseOrderExportDetails_PurchaseOrderExportDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11194 (class 0 OID 0)
-- Dependencies: 1943
-- Name: PurchaseOrderExportDetails_PurchaseOrderExportDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseOrderExportDetails_PurchaseOrderExportDetailsId_seq" OWNED BY "10083_10833"."PurchaseOrderExportDetails"."PurchaseOrderExportDetailsId";


--
-- TOC entry 1942 (class 1259 OID 185406)
-- Name: PurchaseOrderItems; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseOrderItems" (
    "PurchaseOrderItemsId" bigint NOT NULL,
    "PurchaseOrderId" smallint NOT NULL,
    "StockItemId" bigint NOT NULL,
    "ItemName" character varying(500) NOT NULL,
    "ItemSerialNumber" smallint,
    "ItemCode" integer,
    "ItemDescription" character varying(500),
    "HSNSAC" character varying(8),
    "BarCode" character varying(500),
    "OrderQuantity" numeric NOT NULL,
    "BalanceQuantity" numeric NOT NULL,
    "FreeQuantity" numeric NOT NULL,
    "UnitPrice" numeric NOT NULL,
    "SubTotal" numeric NOT NULL,
    "Discount" numeric NOT NULL,
    "OtherCharges" numeric NOT NULL,
    "TaxableValue" numeric NOT NULL,
    "GstRate" numeric,
    "CessRate" numeric,
    "StateCessRate" numeric,
    "IGST" numeric NOT NULL,
    "CGST" numeric NOT NULL,
    "SGST" numeric NOT NULL,
    "Cess" numeric NOT NULL,
    "StateCess" numeric NOT NULL,
    "CessNonAdvolRate" numeric,
    "CessNonAdvolUnit" numeric,
    "StateCessNonAdvolRate" numeric,
    "StateCessNonAdvolUnit" numeric,
    "CessNonAdvol" numeric NOT NULL,
    "StateCessNonAdvol" numeric NOT NULL,
    "TotalItemValue" numeric NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseOrderItems" OWNER TO "10083";

--
-- TOC entry 1941 (class 1259 OID 185405)
-- Name: PurchaseOrderItems_PurchaseOrderItemsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseOrderItems_PurchaseOrderItemsId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseOrderItems_PurchaseOrderItemsId_seq" OWNER TO "10083";

--
-- TOC entry 11195 (class 0 OID 0)
-- Dependencies: 1941
-- Name: PurchaseOrderItems_PurchaseOrderItemsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseOrderItems_PurchaseOrderItemsId_seq" OWNED BY "10083_10833"."PurchaseOrderItems"."PurchaseOrderItemsId";


--
-- TOC entry 1936 (class 1259 OID 185379)
-- Name: PurchaseOrderShipTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseOrderShipTo" (
    "PurchaseOrderShipToId" smallint NOT NULL,
    "PurchaseOrderId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseOrderShipTo" OWNER TO "10083";

--
-- TOC entry 1935 (class 1259 OID 185378)
-- Name: PurchaseOrderShipTo_PurchaseOrderShipToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseOrderShipTo_PurchaseOrderShipToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseOrderShipTo_PurchaseOrderShipToId_seq" OWNER TO "10083";

--
-- TOC entry 11196 (class 0 OID 0)
-- Dependencies: 1935
-- Name: PurchaseOrderShipTo_PurchaseOrderShipToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseOrderShipTo_PurchaseOrderShipToId_seq" OWNED BY "10083_10833"."PurchaseOrderShipTo"."PurchaseOrderShipToId";


--
-- TOC entry 1946 (class 1259 OID 185424)
-- Name: PurchaseOrderValueDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseOrderValueDetails" (
    "PurchaseOrderValueDetailsId" smallint NOT NULL,
    "PurchaseOrderId" smallint NOT NULL,
    "AssessableValue" numeric,
    "IGST" numeric,
    "CGST" numeric,
    "SGST" numeric,
    "Cess" numeric,
    "StateCess" numeric,
    "InvoiceValue" numeric,
    "RoundOffAmount" numeric,
    "InvoiceValueForeignCurrency" numeric,
    "Discount" numeric,
    "OtherCharge" numeric,
    "OtherChargeTaxable" numeric,
    "TCSRate" numeric,
    "TCSAmount" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseOrderValueDetails" OWNER TO "10083";

--
-- TOC entry 1945 (class 1259 OID 185423)
-- Name: PurchaseOrderValueDetails_PurchaseOrderValueDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseOrderValueDetails_PurchaseOrderValueDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseOrderValueDetails_PurchaseOrderValueDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11197 (class 0 OID 0)
-- Dependencies: 1945
-- Name: PurchaseOrderValueDetails_PurchaseOrderValueDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseOrderValueDetails_PurchaseOrderValueDetailsId_seq" OWNED BY "10083_10833"."PurchaseOrderValueDetails"."PurchaseOrderValueDetailsId";


--
-- TOC entry 1931 (class 1259 OID 185362)
-- Name: PurchaseOrder_PurchaseOrderId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseOrder_PurchaseOrderId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseOrder_PurchaseOrderId_seq" OWNER TO "10083";

--
-- TOC entry 11198 (class 0 OID 0)
-- Dependencies: 1931
-- Name: PurchaseOrder_PurchaseOrderId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseOrder_PurchaseOrderId_seq" OWNED BY "10083_10833"."PurchaseOrder"."PurchaseOrderId";


--
-- TOC entry 1910 (class 1259 OID 185262)
-- Name: PurchaseOtherCharges; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseOtherCharges" (
    "PurchaseOtherChargeId" smallint NOT NULL,
    "PurchaseId" smallint NOT NULL,
    "OtherChargeId" smallint NOT NULL,
    "GSTRateCode" numeric,
    "GSTRateName" numeric,
    "Amount" numeric,
    "CGST" numeric,
    "SGST" numeric,
    "IGST" numeric,
    "HSN" character varying(8),
    "TaxableCode" integer DEFAULT 0,
    "TaxableName" character varying(3) DEFAULT 'No'::character varying,
    "AppropriateCode" integer DEFAULT 0,
    "AppropriateName" character varying(3) DEFAULT 'No'::character varying,
    "Name" text,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseOtherCharges" OWNER TO "10083";

--
-- TOC entry 1909 (class 1259 OID 185261)
-- Name: PurchaseOtherCharges_PurchaseOtherChargeId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseOtherCharges_PurchaseOtherChargeId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseOtherCharges_PurchaseOtherChargeId_seq" OWNER TO "10083";

--
-- TOC entry 11199 (class 0 OID 0)
-- Dependencies: 1909
-- Name: PurchaseOtherCharges_PurchaseOtherChargeId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseOtherCharges_PurchaseOtherChargeId_seq" OWNED BY "10083_10833"."PurchaseOtherCharges"."PurchaseOtherChargeId";


--
-- TOC entry 1896 (class 1259 OID 185199)
-- Name: PurchaseOtherDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseOtherDetails" (
    "PurchaseOtherDetailsId" smallint NOT NULL,
    "PurchaseId" smallint NOT NULL,
    "ModeTermsOfPayment" character varying(1000),
    "TermsOfDelivery" character varying(1000),
    "TermAndCondition" character varying(1000),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseOtherDetails" OWNER TO "10083";

--
-- TOC entry 1895 (class 1259 OID 185198)
-- Name: PurchaseOtherDetails_PurchaseOtherDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseOtherDetails_PurchaseOtherDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseOtherDetails_PurchaseOtherDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11200 (class 0 OID 0)
-- Dependencies: 1895
-- Name: PurchaseOtherDetails_PurchaseOtherDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseOtherDetails_PurchaseOtherDetailsId_seq" OWNED BY "10083_10833"."PurchaseOtherDetails"."PurchaseOtherDetailsId";


--
-- TOC entry 1898 (class 1259 OID 185208)
-- Name: PurchaseReceiptDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseReceiptDetails" (
    "PurchaseReceiptDetailsId" smallint NOT NULL,
    "PurchaseId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "ReceiptDocNo" character varying(20) NOT NULL,
    "ReceiptThrough" character varying(40) NOT NULL,
    "Destination" character varying(200) NOT NULL,
    "CarrierNameAgent" character varying(100),
    "BillOfLandingLrRrNo" character varying(20),
    "Date" date,
    "MotorVehicleNo" character varying(20),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseReceiptDetails" OWNER TO "10083";

--
-- TOC entry 1897 (class 1259 OID 185207)
-- Name: PurchaseReceiptDetails_PurchaseReceiptDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseReceiptDetails_PurchaseReceiptDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseReceiptDetails_PurchaseReceiptDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11201 (class 0 OID 0)
-- Dependencies: 1897
-- Name: PurchaseReceiptDetails_PurchaseReceiptDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseReceiptDetails_PurchaseReceiptDetailsId_seq" OWNED BY "10083_10833"."PurchaseReceiptDetails"."PurchaseReceiptDetailsId";


--
-- TOC entry 2004 (class 1259 OID 185697)
-- Name: PurchaseReturn; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseReturn" (
    "PurchaseReturnId" smallint NOT NULL,
    "CurrencyId" smallint,
    "SalesPersonId" smallint,
    "ExchangeRate" numeric,
    "Number" character varying(20),
    "Date" date,
    "FinancialYear" integer,
    "TemplateId" smallint NOT NULL,
    "DocumentName" character varying(20),
    "SupplierId" smallint NOT NULL,
    "OriginalInvoiceNo" character varying(20),
    "OriginalInvoiceDate" date,
    "TermAndConditionId" smallint,
    "TermAndConditionText" text,
    "EcomGSTIN" character varying(15),
    "DocumentStatus" smallint DEFAULT 1,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseReturn" OWNER TO "10083";

--
-- TOC entry 2012 (class 1259 OID 185734)
-- Name: PurchaseReturnBatchDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseReturnBatchDetails" (
    "BatchDetailsId" smallint NOT NULL,
    "PRItemId" smallint NOT NULL,
    "Name" character varying(1000),
    "SerialNumber" integer,
    "ExpiryDate" date,
    "ManufacturingDate" date,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseReturnBatchDetails" OWNER TO "10083";

--
-- TOC entry 2011 (class 1259 OID 185733)
-- Name: PurchaseReturnBatchDetails_BatchDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseReturnBatchDetails_BatchDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseReturnBatchDetails_BatchDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11202 (class 0 OID 0)
-- Dependencies: 2011
-- Name: PurchaseReturnBatchDetails_BatchDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseReturnBatchDetails_BatchDetailsId_seq" OWNED BY "10083_10833"."PurchaseReturnBatchDetails"."BatchDetailsId";


--
-- TOC entry 2008 (class 1259 OID 185716)
-- Name: PurchaseReturnBillFrom; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseReturnBillFrom" (
    "PurchaseReturnBillFromId" smallint NOT NULL,
    "PurchaseReturnId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "POSCode" character varying(2) NOT NULL,
    "POSName" character varying(100) NOT NULL,
    "GSTIN" character varying(15),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseReturnBillFrom" OWNER TO "10083";

--
-- TOC entry 2007 (class 1259 OID 185715)
-- Name: PurchaseReturnBillFrom_PurchaseReturnBillFromId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseReturnBillFrom_PurchaseReturnBillFromId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseReturnBillFrom_PurchaseReturnBillFromId_seq" OWNER TO "10083";

--
-- TOC entry 11203 (class 0 OID 0)
-- Dependencies: 2007
-- Name: PurchaseReturnBillFrom_PurchaseReturnBillFromId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseReturnBillFrom_PurchaseReturnBillFromId_seq" OWNED BY "10083_10833"."PurchaseReturnBillFrom"."PurchaseReturnBillFromId";


--
-- TOC entry 1998 (class 1259 OID 185670)
-- Name: PurchaseReturnDispatchFrom; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseReturnDispatchFrom" (
    "PurchaseReturnDispatchFromId" smallint NOT NULL,
    "PurchaseReturnId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "DispatchDocNo" character varying(20) NOT NULL,
    "DispatchThrough" character varying(40) NOT NULL,
    "Destination" character varying(200) NOT NULL,
    "CarrierNameAgent" character varying(100),
    "BillOfLandingLrRrNo" character varying(20),
    "Date" date,
    "MotorVehicleNo" character varying(20),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseReturnDispatchFrom" OWNER TO "10083";

--
-- TOC entry 1997 (class 1259 OID 185669)
-- Name: PurchaseReturnDispatchFrom_PurchaseReturnDispatchFromId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseReturnDispatchFrom_PurchaseReturnDispatchFromId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseReturnDispatchFrom_PurchaseReturnDispatchFromId_seq" OWNER TO "10083";

--
-- TOC entry 11204 (class 0 OID 0)
-- Dependencies: 1997
-- Name: PurchaseReturnDispatchFrom_PurchaseReturnDispatchFromId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseReturnDispatchFrom_PurchaseReturnDispatchFromId_seq" OWNED BY "10083_10833"."PurchaseReturnDispatchFrom"."PurchaseReturnDispatchFromId";


--
-- TOC entry 2018 (class 1259 OID 185765)
-- Name: PurchaseReturnEwayBillsDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseReturnEwayBillsDetails" (
    "PurchaseReturnEwayBillsDetailsId" smallint NOT NULL,
    "PurchaseReturnId" smallint NOT NULL,
    "GSTIN" character varying(15),
    "TransporterName" character varying(100),
    "TransportModeCode" integer,
    "TransportModeName" character varying(5),
    "Distance" character varying(4),
    "TransportDocumentNumber" character varying(15),
    "TransportDocumentDate" date,
    "VehicleNumber" character varying(20),
    "VehicleTypeCode" character varying(3),
    "VehicleTypeName" character varying(50),
    "EwayBillNumber" character varying(50),
    "EwayBillDate" timestamp without time zone,
    "DispatchFrom" character varying(1000),
    "ShipTo" character varying(1000),
    "ValidUpTo" timestamp without time zone,
    "EwayStatus" character varying(10),
    "Alerts" text,
    "Information" text,
    "Errors" text,
    "CancelDate" timestamp without time zone,
    "CancelReason" character varying(1000),
    "CancelRemark" text,
    "UpdateReason" character varying(1000),
    "UpdateRemark" text,
    "ExtendReason" character varying(1000),
    "ExtendRemark" text,
    "ExtendOn" timestamp without time zone,
    "VehicleUpdatedOn" timestamp without time zone,
    "TransUpdatedOn" timestamp without time zone,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseReturnEwayBillsDetails" OWNER TO "10083";

--
-- TOC entry 2017 (class 1259 OID 185764)
-- Name: PurchaseReturnEwayBillsDetail_PurchaseReturnEwayBillsDetail_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseReturnEwayBillsDetail_PurchaseReturnEwayBillsDetail_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseReturnEwayBillsDetail_PurchaseReturnEwayBillsDetail_seq" OWNER TO "10083";

--
-- TOC entry 11205 (class 0 OID 0)
-- Dependencies: 2017
-- Name: PurchaseReturnEwayBillsDetail_PurchaseReturnEwayBillsDetail_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseReturnEwayBillsDetail_PurchaseReturnEwayBillsDetail_seq" OWNED BY "10083_10833"."PurchaseReturnEwayBillsDetails"."PurchaseReturnEwayBillsDetailsId";


--
-- TOC entry 2006 (class 1259 OID 185707)
-- Name: PurchaseReturnExportDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseReturnExportDetails" (
    "PurchaseReturnExportDetailsId" smallint NOT NULL,
    "PurchaseReturnId" smallint NOT NULL,
    "ShippingBillNumber" character varying(20),
    "ShippingBillDate" date,
    "PortCode" character varying(6),
    "PortName" character varying(25),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "RefundClaim" boolean,
    "ExportDuty" numeric,
    "DispatchThrough" character varying(1000),
    "VesselFlightNo" character varying(1000),
    "DestinationPortCode" character varying(6),
    "DestinationPortName" character varying(25),
    "Destination" character varying(100),
    "LUTNumber" character varying(100),
    "PlaceOfReceiptByShipper" character varying(100),
    "PortOfLoadingCode" character varying(10),
    "PortOfLoadingName" character varying(100),
    "PortOfDischargeCode" character varying(10),
    "PortOfDischargeName" character varying(100),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseReturnExportDetails" OWNER TO "10083";

--
-- TOC entry 2005 (class 1259 OID 185706)
-- Name: PurchaseReturnExportDetails_PurchaseReturnExportDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseReturnExportDetails_PurchaseReturnExportDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseReturnExportDetails_PurchaseReturnExportDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11206 (class 0 OID 0)
-- Dependencies: 2005
-- Name: PurchaseReturnExportDetails_PurchaseReturnExportDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseReturnExportDetails_PurchaseReturnExportDetailsId_seq" OWNED BY "10083_10833"."PurchaseReturnExportDetails"."PurchaseReturnExportDetailsId";


--
-- TOC entry 2020 (class 1259 OID 185774)
-- Name: PurchaseReturnItemWareHouse; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseReturnItemWareHouse" (
    "PRItemWHId" smallint NOT NULL,
    "PRItemId" smallint NOT NULL,
    "WareHouseId" smallint NOT NULL,
    "Quantity" numeric,
    "Rate" numeric,
    "Total" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseReturnItemWareHouse" OWNER TO "10083";

--
-- TOC entry 2019 (class 1259 OID 185773)
-- Name: PurchaseReturnItemWareHouse_PRItemWHId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseReturnItemWareHouse_PRItemWHId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseReturnItemWareHouse_PRItemWHId_seq" OWNER TO "10083";

--
-- TOC entry 11207 (class 0 OID 0)
-- Dependencies: 2019
-- Name: PurchaseReturnItemWareHouse_PRItemWHId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseReturnItemWareHouse_PRItemWHId_seq" OWNED BY "10083_10833"."PurchaseReturnItemWareHouse"."PRItemWHId";


--
-- TOC entry 2000 (class 1259 OID 185679)
-- Name: PurchaseReturnItems; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseReturnItems" (
    "PurchaseReturnItemsId" bigint NOT NULL,
    "PurchaseReturnId" smallint NOT NULL,
    "StockItemId" bigint NOT NULL,
    "ItemName" character varying(500) NOT NULL,
    "ItemSerialNumber" smallint,
    "ItemCode" integer,
    "ItemDescription" character varying(500),
    "HSNSAC" character varying(8),
    "BarCode" character varying(500),
    "Quantity" numeric,
    "FreeQuantity" numeric,
    "UnitPrice" numeric NOT NULL,
    "SubTotal" numeric NOT NULL,
    "Discount" numeric NOT NULL,
    "OtherCharges" numeric NOT NULL,
    "TaxableValue" numeric NOT NULL,
    "GstRate" numeric,
    "CessRate" numeric,
    "StateCessRateCode" numeric,
    "StateCessRateName" numeric,
    "IGST" numeric NOT NULL,
    "CGST" numeric NOT NULL,
    "SGST" numeric NOT NULL,
    "Cess" numeric NOT NULL,
    "StateCess" numeric,
    "CessNonAdvolRateCode" numeric,
    "CessNonAdvolRateName" numeric,
    "CessNonAdvolUnit" numeric,
    "StateCessNonAdvolRateCode" numeric,
    "StateCessNonAdvolRateName" numeric,
    "StateCessNonAdvolUnit" numeric,
    "CessNonAdvol" numeric,
    "StateCessNonAdvol" numeric,
    "TotalItemValue" numeric NOT NULL,
    "MarksContainerNo" character varying(20),
    "NumberOfPackages" integer,
    "DiscountRate" numeric,
    "UOMCode" character varying(3),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseReturnItems" OWNER TO "10083";

--
-- TOC entry 1999 (class 1259 OID 185678)
-- Name: PurchaseReturnItems_PurchaseReturnItemsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseReturnItems_PurchaseReturnItemsId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseReturnItems_PurchaseReturnItemsId_seq" OWNER TO "10083";

--
-- TOC entry 11208 (class 0 OID 0)
-- Dependencies: 1999
-- Name: PurchaseReturnItems_PurchaseReturnItemsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseReturnItems_PurchaseReturnItemsId_seq" OWNED BY "10083_10833"."PurchaseReturnItems"."PurchaseReturnItemsId";


--
-- TOC entry 2016 (class 1259 OID 185752)
-- Name: PurchaseReturnOtherCharges; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseReturnOtherCharges" (
    "PurchaseReturnOtherChargeId" smallint NOT NULL,
    "PurchaseReturnId" smallint NOT NULL,
    "OtherChargeId" smallint NOT NULL,
    "GSTRateCode" numeric,
    "GSTRateName" numeric,
    "Amount" numeric,
    "CGST" numeric,
    "SGST" numeric,
    "IGST" numeric,
    "HSN" character varying(8),
    "TaxableCode" integer DEFAULT 0,
    "TaxableName" character varying(3) DEFAULT 'No'::character varying,
    "AppropriateCode" integer DEFAULT 0,
    "AppropriateName" character varying(3) DEFAULT 'No'::character varying,
    "Name" text,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseReturnOtherCharges" OWNER TO "10083";

--
-- TOC entry 2015 (class 1259 OID 185751)
-- Name: PurchaseReturnOtherCharges_PurchaseReturnOtherChargeId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseReturnOtherCharges_PurchaseReturnOtherChargeId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseReturnOtherCharges_PurchaseReturnOtherChargeId_seq" OWNER TO "10083";

--
-- TOC entry 11209 (class 0 OID 0)
-- Dependencies: 2015
-- Name: PurchaseReturnOtherCharges_PurchaseReturnOtherChargeId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseReturnOtherCharges_PurchaseReturnOtherChargeId_seq" OWNED BY "10083_10833"."PurchaseReturnOtherCharges"."PurchaseReturnOtherChargeId";


--
-- TOC entry 2014 (class 1259 OID 185743)
-- Name: PurchaseReturnOtherDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseReturnOtherDetails" (
    "PurchaseReturnOtherDetailsId" smallint NOT NULL,
    "PurchaseReturnId" smallint NOT NULL,
    "ModeTermsOfPayment" character varying(1000),
    "TermsOfDelivery" character varying(1000),
    "TermAndCondition" character varying(1000),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseReturnOtherDetails" OWNER TO "10083";

--
-- TOC entry 2013 (class 1259 OID 185742)
-- Name: PurchaseReturnOtherDetails_PurchaseReturnOtherDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseReturnOtherDetails_PurchaseReturnOtherDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseReturnOtherDetails_PurchaseReturnOtherDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11210 (class 0 OID 0)
-- Dependencies: 2013
-- Name: PurchaseReturnOtherDetails_PurchaseReturnOtherDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseReturnOtherDetails_PurchaseReturnOtherDetailsId_seq" OWNED BY "10083_10833"."PurchaseReturnOtherDetails"."PurchaseReturnOtherDetailsId";


--
-- TOC entry 2010 (class 1259 OID 185725)
-- Name: PurchaseReturnShipTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseReturnShipTo" (
    "PurchaseReturnShipToId" smallint NOT NULL,
    "PurchaseReturnId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2),
    "StateName" character varying(100),
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseReturnShipTo" OWNER TO "10083";

--
-- TOC entry 2009 (class 1259 OID 185724)
-- Name: PurchaseReturnShipTo_PurchaseReturnShipToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseReturnShipTo_PurchaseReturnShipToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseReturnShipTo_PurchaseReturnShipToId_seq" OWNER TO "10083";

--
-- TOC entry 11211 (class 0 OID 0)
-- Dependencies: 2009
-- Name: PurchaseReturnShipTo_PurchaseReturnShipToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseReturnShipTo_PurchaseReturnShipToId_seq" OWNED BY "10083_10833"."PurchaseReturnShipTo"."PurchaseReturnShipToId";


--
-- TOC entry 2002 (class 1259 OID 185688)
-- Name: PurchaseReturnValueDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseReturnValueDetails" (
    "PurchaseReturnValueDetailsId" smallint NOT NULL,
    "PurchaseReturnId" smallint NOT NULL,
    "AssessableValue" numeric,
    "IGSTValue" numeric,
    "CGSTValue" numeric,
    "SGSTValue" numeric,
    "CessValue" numeric,
    "StateCessValue" numeric,
    "TotalInvoiceValue" numeric,
    "RoundOffAmount" numeric,
    "TotalInvValForeignCurrency" numeric,
    "Discount" numeric,
    "OtherCharge" numeric,
    "OtherChargeTaxable" numeric,
    "TCSRate" numeric,
    "InvoiceValueWithoutTCS" numeric,
    "TCSAmount" numeric,
    "SubTotal" numeric NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseReturnValueDetails" OWNER TO "10083";

--
-- TOC entry 2001 (class 1259 OID 185687)
-- Name: PurchaseReturnValueDetails_PurchaseReturnValueDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseReturnValueDetails_PurchaseReturnValueDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseReturnValueDetails_PurchaseReturnValueDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11212 (class 0 OID 0)
-- Dependencies: 2001
-- Name: PurchaseReturnValueDetails_PurchaseReturnValueDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseReturnValueDetails_PurchaseReturnValueDetailsId_seq" OWNED BY "10083_10833"."PurchaseReturnValueDetails"."PurchaseReturnValueDetailsId";


--
-- TOC entry 2003 (class 1259 OID 185696)
-- Name: PurchaseReturn_PurchaseReturnId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseReturn_PurchaseReturnId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseReturn_PurchaseReturnId_seq" OWNER TO "10083";

--
-- TOC entry 11213 (class 0 OID 0)
-- Dependencies: 2003
-- Name: PurchaseReturn_PurchaseReturnId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseReturn_PurchaseReturnId_seq" OWNED BY "10083_10833"."PurchaseReturn"."PurchaseReturnId";


--
-- TOC entry 2066 (class 1259 OID 185979)
-- Name: PurchaseSettings; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseSettings" (
    "PurchaseSettingsId" smallint NOT NULL,
    "TemplateId" smallint NOT NULL,
    "EnableSeparateBuyerAndConsigneeDetails" boolean DEFAULT false,
    "EnableDispatchDetails" boolean DEFAULT false,
    "EnableExportDetails" boolean DEFAULT false,
    "EnableMarksOrContainerNumber" boolean DEFAULT false,
    "EnableNumberOfPackages" boolean DEFAULT false,
    "EnableOrderDetails" boolean DEFAULT false,
    "EnableAlertOnNegativeStockBalance" boolean DEFAULT true,
    "EnableDateFieldDuringEntry" boolean DEFAULT false,
    "EnableMultipleOtherCharges" boolean DEFAULT false,
    "EnableItemNamesWithItemCode" boolean DEFAULT false,
    "IsItemCodePositionIsPrefix" boolean NOT NULL,
    "EnableSeparateLineForItemDescription" boolean DEFAULT false,
    "EnableSameItemToBeAddedMultipleTimesInTransaction" boolean DEFAULT false,
    "EnableItemWiseGST" boolean DEFAULT true,
    "EnableItemWiseDiscount" boolean DEFAULT false,
    "EnableItemPurchasePriceOfLastTransaction" boolean DEFAULT true,
    "EnableCustomerWisePurchasePriceOfLastTransaction" boolean DEFAULT false,
    "EnableItemWiseDueDateInPurchaseOrder" boolean DEFAULT false,
    "EnablePurchaseOrderRequiredForPurchaseInvoiceAndDeliveryNoteCre" boolean NOT NULL,
    "EnableDeliveryNoteRequiredForPurchaseInvoiceCreation" boolean NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseSettings" OWNER TO "10083";

--
-- TOC entry 2065 (class 1259 OID 185978)
-- Name: PurchaseSettings_PurchaseSettingsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseSettings_PurchaseSettingsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseSettings_PurchaseSettingsId_seq" OWNER TO "10083";

--
-- TOC entry 11214 (class 0 OID 0)
-- Dependencies: 2065
-- Name: PurchaseSettings_PurchaseSettingsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseSettings_PurchaseSettingsId_seq" OWNED BY "10083_10833"."PurchaseSettings"."PurchaseSettingsId";


--
-- TOC entry 1894 (class 1259 OID 185190)
-- Name: PurchaseShipTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseShipTo" (
    "PurchaseShipToId" smallint NOT NULL,
    "PurchaseId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2),
    "StateName" character varying(100),
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseShipTo" OWNER TO "10083";

--
-- TOC entry 1893 (class 1259 OID 185189)
-- Name: PurchaseShipTo_PurchaseShipToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseShipTo_PurchaseShipToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseShipTo_PurchaseShipToId_seq" OWNER TO "10083";

--
-- TOC entry 11215 (class 0 OID 0)
-- Dependencies: 1893
-- Name: PurchaseShipTo_PurchaseShipToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseShipTo_PurchaseShipToId_seq" OWNED BY "10083_10833"."PurchaseShipTo"."PurchaseShipToId";


--
-- TOC entry 1904 (class 1259 OID 185235)
-- Name: PurchaseValueDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."PurchaseValueDetails" (
    "PurchaseValueDetailsId" smallint NOT NULL,
    "PurchaseId" smallint NOT NULL,
    "AssessableValue" numeric,
    "IGSTValue" numeric,
    "CGSTValue" numeric,
    "SGSTValue" numeric,
    "CessValue" numeric,
    "StateCessValue" numeric,
    "TotalInvoiceValue" numeric,
    "RoundOffAmount" numeric,
    "TotalInvValForeignCurrency" numeric,
    "Discount" numeric,
    "OtherCharge" numeric,
    "OtherChargeTaxable" numeric,
    "TCSRate" numeric,
    "InvoiceValueWithoutTCS" numeric,
    "TCSAmount" numeric,
    "SubTotal" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."PurchaseValueDetails" OWNER TO "10083";

--
-- TOC entry 1903 (class 1259 OID 185234)
-- Name: PurchaseValueDetails_PurchaseValueDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."PurchaseValueDetails_PurchaseValueDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."PurchaseValueDetails_PurchaseValueDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11216 (class 0 OID 0)
-- Dependencies: 1903
-- Name: PurchaseValueDetails_PurchaseValueDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."PurchaseValueDetails_PurchaseValueDetailsId_seq" OWNED BY "10083_10833"."PurchaseValueDetails"."PurchaseValueDetailsId";


--
-- TOC entry 1889 (class 1259 OID 185169)
-- Name: Purchase_PurchaseId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Purchase_PurchaseId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Purchase_PurchaseId_seq" OWNER TO "10083";

--
-- TOC entry 11217 (class 0 OID 0)
-- Dependencies: 1889
-- Name: Purchase_PurchaseId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."Purchase_PurchaseId_seq" OWNED BY "10083_10833"."Purchase"."PurchaseId";


--
-- TOC entry 2114 (class 1259 OID 187217)
-- Name: Quotation; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."Quotation" (
    "QuotationId" smallint NOT NULL,
    "TemplateId" smallint NOT NULL,
    "CustomerId" smallint NOT NULL,
    "QuotationNumber" character varying(20) NOT NULL,
    "Date" date NOT NULL,
    "ValidTillDate" date NOT NULL,
    "FinancialYear" integer NOT NULL,
    "DocumentName" character varying(20) NOT NULL,
    "TermAndConditionId" smallint,
    "TermAndConditionText" text,
    "DocumentStatus" smallint DEFAULT 1,
    "SalesPersonId" smallint,
    "CurrencyId" smallint,
    "ExchangeRate" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."Quotation" OWNER TO "10083";

--
-- TOC entry 2120 (class 1259 OID 187249)
-- Name: QuotationItems; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."QuotationItems" (
    "QuotationItemsId" bigint NOT NULL,
    "QuotationId" smallint NOT NULL,
    "StockItemId" bigint NOT NULL,
    "ItemName" character varying(500) NOT NULL,
    "ItemSerialNumber" smallint,
    "ItemCode" integer,
    "ItemDescription" character varying(500),
    "HSNSAC" character varying(8),
    "Quantity" numeric,
    "UnitPrice" numeric NOT NULL,
    "SubTotal" numeric NOT NULL,
    "Discount" numeric NOT NULL,
    "OtherCharges" numeric NOT NULL,
    "TaxableValue" numeric NOT NULL,
    "GstRate" numeric,
    "CessRate" numeric,
    "StateCessRateCode" numeric,
    "StateCessRateName" numeric,
    "IGST" numeric NOT NULL,
    "CGST" numeric NOT NULL,
    "SGST" numeric NOT NULL,
    "Cess" numeric,
    "StateCess" numeric,
    "CessNonAdvolRateCode" numeric,
    "CessNonAdvolRateName" numeric,
    "CessNonAdvolUnit" numeric,
    "StateCessNonAdvolRateCode" numeric,
    "StateCessNonAdvolRateName" numeric,
    "StateCessNonAdvolUnit" numeric,
    "CessNonAdvol" numeric,
    "StateCessNonAdvol" numeric,
    "TotalItemValue" numeric NOT NULL,
    "DiscountRate" numeric,
    "TaxabilityCode" integer NOT NULL,
    "TaxabilityName" character varying(100) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."QuotationItems" OWNER TO "10083";

--
-- TOC entry 2119 (class 1259 OID 187248)
-- Name: QuotationItems_QuotationItemsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."QuotationItems_QuotationItemsId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."QuotationItems_QuotationItemsId_seq" OWNER TO "10083";

--
-- TOC entry 11218 (class 0 OID 0)
-- Dependencies: 2119
-- Name: QuotationItems_QuotationItemsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."QuotationItems_QuotationItemsId_seq" OWNED BY "10083_10833"."QuotationItems"."QuotationItemsId";


--
-- TOC entry 2118 (class 1259 OID 187236)
-- Name: QuotationOtherCharges; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."QuotationOtherCharges" (
    "QuotationOtherChargeId" smallint NOT NULL,
    "QuotationId" smallint NOT NULL,
    "OtherChargeId" smallint NOT NULL,
    "GSTRateCode" numeric,
    "GSTRateName" numeric,
    "Amount" numeric,
    "CGST" numeric,
    "SGST" numeric,
    "IGST" numeric,
    "HSN" character varying(8),
    "TaxableCode" integer DEFAULT 0,
    "TaxableName" character varying(3) DEFAULT 'No'::character varying,
    "AppropriateCode" integer DEFAULT 0,
    "AppropriateName" character varying(3) DEFAULT 'No'::character varying,
    "Name" text,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."QuotationOtherCharges" OWNER TO "10083";

--
-- TOC entry 2117 (class 1259 OID 187235)
-- Name: QuotationOtherCharges_QuotationOtherChargeId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."QuotationOtherCharges_QuotationOtherChargeId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."QuotationOtherCharges_QuotationOtherChargeId_seq" OWNER TO "10083";

--
-- TOC entry 11219 (class 0 OID 0)
-- Dependencies: 2117
-- Name: QuotationOtherCharges_QuotationOtherChargeId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."QuotationOtherCharges_QuotationOtherChargeId_seq" OWNED BY "10083_10833"."QuotationOtherCharges"."QuotationOtherChargeId";


--
-- TOC entry 2116 (class 1259 OID 187227)
-- Name: QuotationTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."QuotationTo" (
    "QuotationToId" smallint NOT NULL,
    "QuotationId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "GSTIN" character varying(15),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."QuotationTo" OWNER TO "10083";

--
-- TOC entry 2115 (class 1259 OID 187226)
-- Name: QuotationTo_QuotationToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."QuotationTo_QuotationToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."QuotationTo_QuotationToId_seq" OWNER TO "10083";

--
-- TOC entry 11220 (class 0 OID 0)
-- Dependencies: 2115
-- Name: QuotationTo_QuotationToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."QuotationTo_QuotationToId_seq" OWNED BY "10083_10833"."QuotationTo"."QuotationToId";


--
-- TOC entry 2122 (class 1259 OID 187258)
-- Name: QuotationValueDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."QuotationValueDetails" (
    "QuotationValueDetailsId" smallint NOT NULL,
    "QuotationId" smallint NOT NULL,
    "AssessableValue" numeric,
    "IGSTValue" numeric,
    "CGSTValue" numeric,
    "SGSTValue" numeric,
    "CessValue" numeric,
    "StateCessValue" numeric,
    "TotalInvoiceValue" numeric,
    "RoundOffAmount" numeric,
    "TotalInvValForeignCurrency" numeric,
    "Discount" numeric,
    "OtherCharge" numeric,
    "OtherChargeTaxable" numeric,
    "SubTotal" numeric NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."QuotationValueDetails" OWNER TO "10083";

--
-- TOC entry 2121 (class 1259 OID 187257)
-- Name: QuotationValueDetails_QuotationValueDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."QuotationValueDetails_QuotationValueDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."QuotationValueDetails_QuotationValueDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11221 (class 0 OID 0)
-- Dependencies: 2121
-- Name: QuotationValueDetails_QuotationValueDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."QuotationValueDetails_QuotationValueDetailsId_seq" OWNED BY "10083_10833"."QuotationValueDetails"."QuotationValueDetailsId";


--
-- TOC entry 2113 (class 1259 OID 187216)
-- Name: Quotation_QuotationId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Quotation_QuotationId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Quotation_QuotationId_seq" OWNER TO "10083";

--
-- TOC entry 11222 (class 0 OID 0)
-- Dependencies: 2113
-- Name: Quotation_QuotationId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."Quotation_QuotationId_seq" OWNED BY "10083_10833"."Quotation"."QuotationId";


--
-- TOC entry 2030 (class 1259 OID 185821)
-- Name: ReceiptNote; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."ReceiptNote" (
    "ReceiptNoteId" smallint NOT NULL,
    "Number" character varying(20),
    "Date" date,
    "FinancialYear" integer,
    "TemplateId" smallint NOT NULL,
    "DocumentName" character varying(20),
    "CustomerId" smallint NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."ReceiptNote" OWNER TO "10083";

--
-- TOC entry 2046 (class 1259 OID 185891)
-- Name: ReceiptNoteBatchDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."ReceiptNoteBatchDetails" (
    "ReceiptNoteBatchDetailsId" smallint NOT NULL,
    "ReceiptNoteItemsId" smallint NOT NULL,
    "Name" character varying(1000),
    "SerialNumber" integer,
    "ExpiryDate" date,
    "ManufacturingDate" date,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."ReceiptNoteBatchDetails" OWNER TO "10083";

--
-- TOC entry 2045 (class 1259 OID 185890)
-- Name: ReceiptNoteBatchDetails_ReceiptNoteBatchDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."ReceiptNoteBatchDetails_ReceiptNoteBatchDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."ReceiptNoteBatchDetails_ReceiptNoteBatchDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11223 (class 0 OID 0)
-- Dependencies: 2045
-- Name: ReceiptNoteBatchDetails_ReceiptNoteBatchDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."ReceiptNoteBatchDetails_ReceiptNoteBatchDetailsId_seq" OWNED BY "10083_10833"."ReceiptNoteBatchDetails"."ReceiptNoteBatchDetailsId";


--
-- TOC entry 2032 (class 1259 OID 185828)
-- Name: ReceiptNoteBillTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."ReceiptNoteBillTo" (
    "ReceiptNoteBillToId" smallint NOT NULL,
    "ReceiptNoteId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "POSCode" character varying(2) NOT NULL,
    "POSName" character varying(100) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."ReceiptNoteBillTo" OWNER TO "10083";

--
-- TOC entry 2031 (class 1259 OID 185827)
-- Name: ReceiptNoteBillTo_ReceiptNoteBillToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."ReceiptNoteBillTo_ReceiptNoteBillToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."ReceiptNoteBillTo_ReceiptNoteBillToId_seq" OWNER TO "10083";

--
-- TOC entry 11224 (class 0 OID 0)
-- Dependencies: 2031
-- Name: ReceiptNoteBillTo_ReceiptNoteBillToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."ReceiptNoteBillTo_ReceiptNoteBillToId_seq" OWNED BY "10083_10833"."ReceiptNoteBillTo"."ReceiptNoteBillToId";


--
-- TOC entry 2036 (class 1259 OID 185846)
-- Name: ReceiptNoteDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."ReceiptNoteDetails" (
    "ReceiptNoteDetailsId" smallint NOT NULL,
    "ReceiptNoteId" smallint NOT NULL,
    "ModeTermsOfPayment" character varying(1000),
    "TermsOfReceipt" character varying(1000),
    "TermAndCondition" character varying(1000),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."ReceiptNoteDetails" OWNER TO "10083";

--
-- TOC entry 2035 (class 1259 OID 185845)
-- Name: ReceiptNoteDetails_ReceiptNoteDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."ReceiptNoteDetails_ReceiptNoteDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."ReceiptNoteDetails_ReceiptNoteDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11225 (class 0 OID 0)
-- Dependencies: 2035
-- Name: ReceiptNoteDetails_ReceiptNoteDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."ReceiptNoteDetails_ReceiptNoteDetailsId_seq" OWNED BY "10083_10833"."ReceiptNoteDetails"."ReceiptNoteDetailsId";


--
-- TOC entry 2038 (class 1259 OID 185855)
-- Name: ReceiptNoteDispatchFrom; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."ReceiptNoteDispatchFrom" (
    "ReceiptNoteDispatchFromId" smallint NOT NULL,
    "ReceiptNoteId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address1" character varying(1000),
    "Address2" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."ReceiptNoteDispatchFrom" OWNER TO "10083";

--
-- TOC entry 2037 (class 1259 OID 185854)
-- Name: ReceiptNoteDispatchFrom_ReceiptNoteDispatchFromId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."ReceiptNoteDispatchFrom_ReceiptNoteDispatchFromId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."ReceiptNoteDispatchFrom_ReceiptNoteDispatchFromId_seq" OWNER TO "10083";

--
-- TOC entry 11226 (class 0 OID 0)
-- Dependencies: 2037
-- Name: ReceiptNoteDispatchFrom_ReceiptNoteDispatchFromId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."ReceiptNoteDispatchFrom_ReceiptNoteDispatchFromId_seq" OWNED BY "10083_10833"."ReceiptNoteDispatchFrom"."ReceiptNoteDispatchFromId";


--
-- TOC entry 2042 (class 1259 OID 185873)
-- Name: ReceiptNoteExportDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."ReceiptNoteExportDetails" (
    "ReceiptNoteExportDetailsId" smallint NOT NULL,
    "ReceiptNoteId" smallint NOT NULL,
    "ShippingBillNumber" character varying(20),
    "ShippingBillDate" date,
    "PortCode" character varying(6),
    "PortName" character varying(25),
    "ForeignCurrency" character varying(16),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "RefundClaim" boolean,
    "ExportDuty" numeric,
    "DispatchThrough" character varying(1000),
    "VehicleNumber" character varying(1000),
    "ExchangeRate" numeric,
    "DestinationPortCode" character varying(6),
    "DestinationPortName" character varying(25),
    "Destination" character varying(100),
    "LUTNumber" character varying(100),
    "PlaceOfReceipt" character varying(100),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."ReceiptNoteExportDetails" OWNER TO "10083";

--
-- TOC entry 2041 (class 1259 OID 185872)
-- Name: ReceiptNoteExportDetails_ReceiptNoteExportDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."ReceiptNoteExportDetails_ReceiptNoteExportDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."ReceiptNoteExportDetails_ReceiptNoteExportDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11227 (class 0 OID 0)
-- Dependencies: 2041
-- Name: ReceiptNoteExportDetails_ReceiptNoteExportDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."ReceiptNoteExportDetails_ReceiptNoteExportDetailsId_seq" OWNED BY "10083_10833"."ReceiptNoteExportDetails"."ReceiptNoteExportDetailsId";


--
-- TOC entry 2040 (class 1259 OID 185864)
-- Name: ReceiptNoteItems; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."ReceiptNoteItems" (
    "ReceiptNoteItemsId" bigint NOT NULL,
    "ReceiptNoteId" smallint NOT NULL,
    "StockItemId" bigint NOT NULL,
    "ItemName" character varying(500) NOT NULL,
    "ItemSerialNumber" smallint,
    "ItemCode" integer,
    "ItemDescription" character varying(500),
    "HSNSAC" integer,
    "BarCode" character varying(500),
    "OrderQuantity" numeric NOT NULL,
    "BalanceQuantity" numeric NOT NULL,
    "FreeQuantity" numeric NOT NULL,
    "UnitPrice" numeric NOT NULL,
    "SubTotal" numeric NOT NULL,
    "Discount" numeric NOT NULL,
    "OtherCharges" numeric NOT NULL,
    "TaxableValue" numeric NOT NULL,
    "GstRate" numeric,
    "CessRate" numeric,
    "StateCessRate" numeric,
    "IGST" numeric NOT NULL,
    "CGST" numeric NOT NULL,
    "SGST" numeric NOT NULL,
    "Cess" numeric NOT NULL,
    "StateCess" numeric NOT NULL,
    "CessNonAdvolRate" numeric,
    "CessNonAdvolUnit" numeric,
    "StateCessNonAdvolRate" numeric,
    "StateCessNonAdvolUnit" numeric,
    "CessNonAdvol" numeric NOT NULL,
    "StateCessNonAdvol" numeric NOT NULL,
    "TotalItemValue" numeric NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."ReceiptNoteItems" OWNER TO "10083";

--
-- TOC entry 2039 (class 1259 OID 185863)
-- Name: ReceiptNoteItems_ReceiptNoteItemsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."ReceiptNoteItems_ReceiptNoteItemsId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."ReceiptNoteItems_ReceiptNoteItemsId_seq" OWNER TO "10083";

--
-- TOC entry 11228 (class 0 OID 0)
-- Dependencies: 2039
-- Name: ReceiptNoteItems_ReceiptNoteItemsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."ReceiptNoteItems_ReceiptNoteItemsId_seq" OWNED BY "10083_10833"."ReceiptNoteItems"."ReceiptNoteItemsId";


--
-- TOC entry 2034 (class 1259 OID 185837)
-- Name: ReceiptNoteShipTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."ReceiptNoteShipTo" (
    "ReceiptNoteShipToId" smallint NOT NULL,
    "ReceiptNoteId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address1" character varying(1000),
    "Address2" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."ReceiptNoteShipTo" OWNER TO "10083";

--
-- TOC entry 2033 (class 1259 OID 185836)
-- Name: ReceiptNoteShipTo_ReceiptNoteShipToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."ReceiptNoteShipTo_ReceiptNoteShipToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."ReceiptNoteShipTo_ReceiptNoteShipToId_seq" OWNER TO "10083";

--
-- TOC entry 11229 (class 0 OID 0)
-- Dependencies: 2033
-- Name: ReceiptNoteShipTo_ReceiptNoteShipToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."ReceiptNoteShipTo_ReceiptNoteShipToId_seq" OWNED BY "10083_10833"."ReceiptNoteShipTo"."ReceiptNoteShipToId";


--
-- TOC entry 2044 (class 1259 OID 185882)
-- Name: ReceiptNoteValueDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."ReceiptNoteValueDetails" (
    "ReceiptNoteValueDetailsId" smallint NOT NULL,
    "ReceiptNoteId" smallint NOT NULL,
    "AssessableValue" numeric,
    "IGST" numeric,
    "CGST" numeric,
    "SGST" numeric,
    "Cess" numeric,
    "StateCess" numeric,
    "InvoiceValue" numeric,
    "RoundOffAmount" numeric,
    "InvoiceValueForeignCurrency" numeric,
    "Discount" numeric,
    "OtherCharge" numeric,
    "OtherChargeTaxable" numeric,
    "TCSRate" numeric,
    "TCSAmount" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."ReceiptNoteValueDetails" OWNER TO "10083";

--
-- TOC entry 2043 (class 1259 OID 185881)
-- Name: ReceiptNoteValueDetails_ReceiptNoteValueDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."ReceiptNoteValueDetails_ReceiptNoteValueDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."ReceiptNoteValueDetails_ReceiptNoteValueDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11230 (class 0 OID 0)
-- Dependencies: 2043
-- Name: ReceiptNoteValueDetails_ReceiptNoteValueDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."ReceiptNoteValueDetails_ReceiptNoteValueDetailsId_seq" OWNED BY "10083_10833"."ReceiptNoteValueDetails"."ReceiptNoteValueDetailsId";


--
-- TOC entry 2029 (class 1259 OID 185820)
-- Name: ReceiptNote_ReceiptNoteId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."ReceiptNote_ReceiptNoteId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."ReceiptNote_ReceiptNoteId_seq" OWNER TO "10083";

--
-- TOC entry 11231 (class 0 OID 0)
-- Dependencies: 2029
-- Name: ReceiptNote_ReceiptNoteId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."ReceiptNote_ReceiptNoteId_seq" OWNED BY "10083_10833"."ReceiptNote"."ReceiptNoteId";


--
-- TOC entry 1866 (class 1259 OID 185056)
-- Name: Sales; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."Sales" (
    "SaleId" smallint NOT NULL,
    "TemplateId" smallint NOT NULL,
    "CustomerId" smallint NOT NULL,
    "Number" public.citext NOT NULL,
    "Date" date NOT NULL,
    "FinancialYear" integer NOT NULL,
    "DocumentName" character varying(1000) NOT NULL,
    "ReverseCharge" character varying(1) DEFAULT 'N'::character varying,
    "TermAndConditionId" smallint,
    "TermAndConditionText" text,
    "EcomGSTIN" character varying(15),
    "DocumentStatus" smallint DEFAULT 1,
    "SalesPersonId" smallint,
    "CurrencyId" smallint,
    "ExchangeRate" numeric,
    "InvoiceType" character varying(10),
    "Title" character varying(200),
    "InvoiceRemark" character varying(500),
    "IsAutoNumber" boolean DEFAULT false,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "IsIntraState" boolean,
    "IsRegisteredSupply" boolean,
    "SalesPersonName" character varying(100)
);


ALTER TABLE "10083_10833"."Sales" OWNER TO "10083";

--
-- TOC entry 2146 (class 1259 OID 187788)
-- Name: SalesAuditLogs; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesAuditLogs" (
    "LogId" bigint NOT NULL,
    "ModuleId" smallint NOT NULL,
    "DocumentId" smallint NOT NULL,
    "UserId" smallint NOT NULL,
    "RecordId" smallint NOT NULL,
    "Timestamp" timestamp with time zone,
    "Action" character varying(15) NOT NULL,
    "AuditDescription" text,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesAuditLogs" OWNER TO "10083";

--
-- TOC entry 2145 (class 1259 OID 187787)
-- Name: SalesAuditLogs_LogId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesAuditLogs_LogId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesAuditLogs_LogId_seq" OWNER TO "10083";

--
-- TOC entry 11232 (class 0 OID 0)
-- Dependencies: 2145
-- Name: SalesAuditLogs_LogId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesAuditLogs_LogId_seq" OWNED BY "10083_10833"."SalesAuditLogs"."LogId";


--
-- TOC entry 1886 (class 1259 OID 185152)
-- Name: SalesBatchDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesBatchDetails" (
    "SalesBatchDetailsId" smallint NOT NULL,
    "SalesItemsId" smallint NOT NULL,
    "Name" character varying(1000),
    "SerialNumber" integer,
    "ExpiryDate" date,
    "ManufacturingDate" date,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesBatchDetails" OWNER TO "10083";

--
-- TOC entry 1885 (class 1259 OID 185151)
-- Name: SalesBatchDetails_SalesBatchDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesBatchDetails_SalesBatchDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesBatchDetails_SalesBatchDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11233 (class 0 OID 0)
-- Dependencies: 1885
-- Name: SalesBatchDetails_SalesBatchDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesBatchDetails_SalesBatchDetailsId_seq" OWNED BY "10083_10833"."SalesBatchDetails"."SalesBatchDetailsId";


--
-- TOC entry 1868 (class 1259 OID 185067)
-- Name: SalesBillTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesBillTo" (
    "SalesBillToId" smallint NOT NULL,
    "SaleId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "POSCode" character varying(2) NOT NULL,
    "POSName" character varying(100) NOT NULL,
    "GSTIN" character varying(15),
    "Email" character varying(320),
    "MobileNumber" character varying(20),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "PAN" character varying(10),
    "GSTCategory" smallint DEFAULT 0 NOT NULL
);


ALTER TABLE "10083_10833"."SalesBillTo" OWNER TO "10083";

--
-- TOC entry 1867 (class 1259 OID 185066)
-- Name: SalesBillTo_SalesBillToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesBillTo_SalesBillToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesBillTo_SalesBillToId_seq" OWNER TO "10083";

--
-- TOC entry 11234 (class 0 OID 0)
-- Dependencies: 1867
-- Name: SalesBillTo_SalesBillToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesBillTo_SalesBillToId_seq" OWNED BY "10083_10833"."SalesBillTo"."SalesBillToId";


--
-- TOC entry 2128 (class 1259 OID 187428)
-- Name: SalesContainerList; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesContainerList" (
    "SalesContainerListId" integer NOT NULL,
    "SaleId" integer NOT NULL,
    "ContainerNumber" character varying(15),
    "LinerSealNumber" character varying(15),
    "OTSNumber" character varying(15),
    "Quantity" character varying(15),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesContainerList" OWNER TO "10083";

--
-- TOC entry 2127 (class 1259 OID 187427)
-- Name: SalesContainerList_SalesContainerListId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesContainerList_SalesContainerListId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesContainerList_SalesContainerListId_seq" OWNER TO "10083";

--
-- TOC entry 11235 (class 0 OID 0)
-- Dependencies: 2127
-- Name: SalesContainerList_SalesContainerListId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesContainerList_SalesContainerListId_seq" OWNED BY "10083_10833"."SalesContainerList"."SalesContainerListId";


--
-- TOC entry 1974 (class 1259 OID 185556)
-- Name: SalesDebitNote; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNote" (
    "SaleDebitNoteId" smallint NOT NULL,
    "Number" public.citext NOT NULL,
    "Date" date NOT NULL,
    "FinancialYear" integer,
    "TemplateId" smallint NOT NULL,
    "CustomerId" smallint NOT NULL,
    "DocumentName" character varying(1000),
    "ReverseCharge" character varying(1) DEFAULT 'N'::character varying,
    "TermAndConditionId" smallint,
    "TermAndConditionText" text,
    "OriginalInvoiceNo" character varying(20),
    "OriginalInvoiceDate" date,
    "EcomGSTIN" character varying(15),
    "DocumentStatus" smallint DEFAULT 1,
    "CurrencyId" smallint,
    "SalesPersonId" smallint,
    "ExchangeRate" numeric,
    "InvoiceType" character varying(10),
    "Title" character varying(200),
    "InvoiceRemark" character varying(500),
    "IsAutoNumber" boolean DEFAULT false,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "IsIntraState" boolean,
    "IsRegisteredSupply" boolean,
    "SalesPersonName" character varying(100)
);


ALTER TABLE "10083_10833"."SalesDebitNote" OWNER TO "10083";

--
-- TOC entry 2150 (class 1259 OID 187806)
-- Name: SalesDebitNoteAuditLogs; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNoteAuditLogs" (
    "LogId" bigint NOT NULL,
    "ModuleId" smallint NOT NULL,
    "DocumentId" smallint NOT NULL,
    "UserId" smallint NOT NULL,
    "RecordId" smallint NOT NULL,
    "Timestamp" timestamp with time zone,
    "Action" character varying(15) NOT NULL,
    "AuditDescription" text,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesDebitNoteAuditLogs" OWNER TO "10083";

--
-- TOC entry 2149 (class 1259 OID 187805)
-- Name: SalesDebitNoteAuditLogs_LogId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNoteAuditLogs_LogId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNoteAuditLogs_LogId_seq" OWNER TO "10083";

--
-- TOC entry 11236 (class 0 OID 0)
-- Dependencies: 2149
-- Name: SalesDebitNoteAuditLogs_LogId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNoteAuditLogs_LogId_seq" OWNED BY "10083_10833"."SalesDebitNoteAuditLogs"."LogId";


--
-- TOC entry 1992 (class 1259 OID 185639)
-- Name: SalesDebitNoteBatchDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNoteBatchDetails" (
    "SDNBatchId" smallint NOT NULL,
    "SDNItemsId" smallint NOT NULL,
    "Name" character varying(1000),
    "SerialNumber" integer,
    "ExpiryDate" date,
    "ManufacturingDate" date,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesDebitNoteBatchDetails" OWNER TO "10083";

--
-- TOC entry 1991 (class 1259 OID 185638)
-- Name: SalesDebitNoteBatchDetails_SDNBatchId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNoteBatchDetails_SDNBatchId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNoteBatchDetails_SDNBatchId_seq" OWNER TO "10083";

--
-- TOC entry 11237 (class 0 OID 0)
-- Dependencies: 1991
-- Name: SalesDebitNoteBatchDetails_SDNBatchId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNoteBatchDetails_SDNBatchId_seq" OWNED BY "10083_10833"."SalesDebitNoteBatchDetails"."SDNBatchId";


--
-- TOC entry 1976 (class 1259 OID 185567)
-- Name: SalesDebitNoteBillTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNoteBillTo" (
    "SalesDebitNoteBillToId" smallint NOT NULL,
    "SaleDebitNoteId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "POSCode" character varying(2) NOT NULL,
    "POSName" character varying(100) NOT NULL,
    "GSTIN" character varying(15),
    "Email" character varying(320),
    "MobileNumber" character varying(20),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "PAN" character varying(10),
    "GSTCategory" smallint DEFAULT 0 NOT NULL
);


ALTER TABLE "10083_10833"."SalesDebitNoteBillTo" OWNER TO "10083";

--
-- TOC entry 1975 (class 1259 OID 185566)
-- Name: SalesDebitNoteBillTo_SalesDebitNoteBillToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNoteBillTo_SalesDebitNoteBillToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNoteBillTo_SalesDebitNoteBillToId_seq" OWNER TO "10083";

--
-- TOC entry 11238 (class 0 OID 0)
-- Dependencies: 1975
-- Name: SalesDebitNoteBillTo_SalesDebitNoteBillToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNoteBillTo_SalesDebitNoteBillToId_seq" OWNED BY "10083_10833"."SalesDebitNoteBillTo"."SalesDebitNoteBillToId";


--
-- TOC entry 2132 (class 1259 OID 187444)
-- Name: SalesDebitNoteContainerList; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNoteContainerList" (
    "SalesDebitNoteContainerListId" integer NOT NULL,
    "SaleDebitNoteId" integer NOT NULL,
    "ContainerNumber" character varying(15),
    "LinerSealNumber" character varying(15),
    "OTSNumber" character varying(15),
    "Quantity" character varying(15),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesDebitNoteContainerList" OWNER TO "10083";

--
-- TOC entry 2131 (class 1259 OID 187443)
-- Name: SalesDebitNoteContainerList_SalesDebitNoteContainerListId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNoteContainerList_SalesDebitNoteContainerListId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNoteContainerList_SalesDebitNoteContainerListId_seq" OWNER TO "10083";

--
-- TOC entry 11239 (class 0 OID 0)
-- Dependencies: 2131
-- Name: SalesDebitNoteContainerList_SalesDebitNoteContainerListId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNoteContainerList_SalesDebitNoteContainerListId_seq" OWNED BY "10083_10833"."SalesDebitNoteContainerList"."SalesDebitNoteContainerListId";


--
-- TOC entry 1990 (class 1259 OID 185630)
-- Name: SalesDebitNoteEwayBillsDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNoteEwayBillsDetails" (
    "SalesDebitNoteEwayBillsDetailsId" integer NOT NULL,
    "SaleDebitNoteId" integer NOT NULL,
    "GSTIN" character varying(15),
    "TransporterName" character varying(100),
    "TransportModeCode" integer,
    "TransportModeName" character varying(5),
    "Distance" character varying(4),
    "TransportDocumentNumber" character varying(15),
    "TransportDocumentDate" date,
    "VehicleNumber" character varying(20),
    "VehicleTypeCode" character varying(3),
    "VehicleTypeName" character varying(50),
    "EwayBillNumber" character varying(50),
    "EwayBillDate" timestamp without time zone,
    "DispatchFrom" character varying(1000),
    "ShipTo" character varying(1000),
    "ValidUpTo" timestamp without time zone,
    "EwayStatus" character varying(10),
    "Alerts" text,
    "Information" text,
    "Errors" text,
    "CancelDate" timestamp without time zone,
    "CancelReason" character varying(1000),
    "CancelRemark" text,
    "UpdateReason" character varying(1000),
    "UpdateRemark" text,
    "ExtendReason" character varying(1000),
    "ExtendRemark" text,
    "ExtendOn" timestamp without time zone,
    "VehicleUpdatedOn" timestamp without time zone,
    "TransUpdatedOn" timestamp without time zone,
    "TransportersId" smallint,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesDebitNoteEwayBillsDetails" OWNER TO "10083";

--
-- TOC entry 1989 (class 1259 OID 185629)
-- Name: SalesDebitNoteEwayBillsDetail_SalesDebitNoteEwayBillsDetail_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNoteEwayBillsDetail_SalesDebitNoteEwayBillsDetail_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNoteEwayBillsDetail_SalesDebitNoteEwayBillsDetail_seq" OWNER TO "10083";

--
-- TOC entry 11240 (class 0 OID 0)
-- Dependencies: 1989
-- Name: SalesDebitNoteEwayBillsDetail_SalesDebitNoteEwayBillsDetail_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNoteEwayBillsDetail_SalesDebitNoteEwayBillsDetail_seq" OWNED BY "10083_10833"."SalesDebitNoteEwayBillsDetails"."SalesDebitNoteEwayBillsDetailsId";


--
-- TOC entry 2159 (class 1259 OID 188292)
-- Name: SalesDebitNoteHSNSummary; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNoteHSNSummary" (
    "SaleDebitNoteHSNId" integer NOT NULL,
    "SaleDebitNoteId" integer NOT NULL,
    "ItemName" character varying(500),
    "HSN" character varying(500),
    "TaxableValue" numeric,
    "IGST" numeric,
    "CGST" numeric,
    "SGST" numeric,
    "Cess" numeric,
    "TaxRate" numeric,
    "TotalTax" numeric,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL
);


ALTER TABLE "10083_10833"."SalesDebitNoteHSNSummary" OWNER TO "10083";

--
-- TOC entry 2158 (class 1259 OID 188291)
-- Name: SalesDebitNoteHSNSummary_SaleDebitNoteHSNId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNoteHSNSummary_SaleDebitNoteHSNId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNoteHSNSummary_SaleDebitNoteHSNId_seq" OWNER TO "10083";

--
-- TOC entry 11241 (class 0 OID 0)
-- Dependencies: 2158
-- Name: SalesDebitNoteHSNSummary_SaleDebitNoteHSNId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNoteHSNSummary_SaleDebitNoteHSNId_seq" OWNED BY "10083_10833"."SalesDebitNoteHSNSummary"."SaleDebitNoteHSNId";


--
-- TOC entry 1986 (class 1259 OID 185612)
-- Name: SalesDebitNoteImportDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNoteImportDetails" (
    "SalesDebitNoteImportDetailsId" smallint NOT NULL,
    "SaleDebitNoteId" smallint NOT NULL,
    "ShippingBillNumber" character varying(20),
    "ShippingBillDate" date,
    "PortCode" character varying(6),
    "PortName" character varying(25),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "RefundClaim" boolean,
    "ImportDuty" numeric,
    "DispatchThrough" character varying(1000),
    "VesselFlightNo" character varying(1000),
    "DestinationPortCode" character varying(6),
    "DestinationPortName" character varying(25),
    "Destination" character varying(100),
    "LUTNumber" character varying(100),
    "PlaceOfReceiptByShipper" character varying(100),
    "PortOfLoadingCode" character varying(10),
    "PortOfLoadingName" character varying(100),
    "PortOfDischargeCode" character varying(10),
    "PortOfDischargeName" character varying(100),
    "LUTMasterId" smallint,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesDebitNoteImportDetails" OWNER TO "10083";

--
-- TOC entry 1985 (class 1259 OID 185611)
-- Name: SalesDebitNoteImportDetails_SalesDebitNoteImportDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNoteImportDetails_SalesDebitNoteImportDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNoteImportDetails_SalesDebitNoteImportDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11242 (class 0 OID 0)
-- Dependencies: 1985
-- Name: SalesDebitNoteImportDetails_SalesDebitNoteImportDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNoteImportDetails_SalesDebitNoteImportDetailsId_seq" OWNED BY "10083_10833"."SalesDebitNoteImportDetails"."SalesDebitNoteImportDetailsId";


--
-- TOC entry 1996 (class 1259 OID 185661)
-- Name: SalesDebitNoteItemWareHouse; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNoteItemWareHouse" (
    "SDNItemWHId" smallint NOT NULL,
    "SDNItemsId" smallint NOT NULL,
    "WareHouseId" smallint NOT NULL,
    "Quantity" numeric,
    "Rate" numeric,
    "Total" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesDebitNoteItemWareHouse" OWNER TO "10083";

--
-- TOC entry 1995 (class 1259 OID 185660)
-- Name: SalesDebitNoteItemWareHouse_SDNItemWHId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNoteItemWareHouse_SDNItemWHId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNoteItemWareHouse_SDNItemWHId_seq" OWNER TO "10083";

--
-- TOC entry 11243 (class 0 OID 0)
-- Dependencies: 1995
-- Name: SalesDebitNoteItemWareHouse_SDNItemWHId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNoteItemWareHouse_SDNItemWHId_seq" OWNED BY "10083_10833"."SalesDebitNoteItemWareHouse"."SDNItemWHId";


--
-- TOC entry 1984 (class 1259 OID 185603)
-- Name: SalesDebitNoteItems; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNoteItems" (
    "SalesDebitNoteItemsId" integer NOT NULL,
    "SaleDebitNoteId" integer NOT NULL,
    "StockItemId" bigint NOT NULL,
    "ItemName" character varying(500) NOT NULL,
    "SerialNumber" smallint,
    "ItemCode" character varying(20),
    "ItemDescription" character varying(500),
    "HSNSAC" character varying(8),
    "BarCode" character varying(500),
    "Quantity" numeric,
    "FreeQuantity" numeric,
    "UnitPrice" numeric NOT NULL,
    "SubTotal" numeric NOT NULL,
    "Discount" numeric NOT NULL,
    "OtherCharges" numeric NOT NULL,
    "TaxableValue" numeric NOT NULL,
    "GstRate" numeric,
    "CessRate" numeric,
    "StateCessRate" numeric,
    "IGST" numeric NOT NULL,
    "CGST" numeric NOT NULL,
    "SGST" numeric NOT NULL,
    "Cess" numeric,
    "StateCess" numeric,
    "CessNonAdvolRate" numeric,
    "CessNonAdvolUnit" numeric,
    "StateCessNonAdvolRate" numeric,
    "CessNonAdvol" numeric,
    "StateCessNonAdvol" numeric,
    "TotalItemValue" numeric NOT NULL,
    "MarksContainerNo" character varying(20),
    "NumberOfPackages" integer,
    "DiscountRate" numeric,
    "Taxability" integer NOT NULL,
    "ForeignCurrencyPrice" numeric,
    "UOMCode" character varying(3),
    "PreTaxValue" numeric,
    "TypeCode" integer,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "PartNumber" character varying(20),
    "ReverseChargeApplicable" integer,
    "EligibleforInputCredit" integer,
    "AppropriateValue" numeric DEFAULT 0 NOT NULL,
    "DiscountBeforeTax" numeric DEFAULT 0,
    "UnitName" character varying(100)
);


ALTER TABLE "10083_10833"."SalesDebitNoteItems" OWNER TO "10083";

--
-- TOC entry 1983 (class 1259 OID 185602)
-- Name: SalesDebitNoteItems_SalesDebitNoteItemsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNoteItems_SalesDebitNoteItemsId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNoteItems_SalesDebitNoteItemsId_seq" OWNER TO "10083";

--
-- TOC entry 11244 (class 0 OID 0)
-- Dependencies: 1983
-- Name: SalesDebitNoteItems_SalesDebitNoteItemsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNoteItems_SalesDebitNoteItemsId_seq" OWNED BY "10083_10833"."SalesDebitNoteItems"."SalesDebitNoteItemsId";


--
-- TOC entry 2167 (class 1259 OID 188638)
-- Name: SalesDebitNoteMain; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNoteMain" (
    "SaleDebitNoteId" integer NOT NULL,
    "TemplateId" smallint NOT NULL,
    "CustomerId" smallint NOT NULL,
    "Number" public.citext NOT NULL,
    "Date" date NOT NULL,
    "FinancialYear" integer NOT NULL,
    "ReverseCharge" boolean,
    "TermAndConditionId" smallint,
    "TermAndConditionText" text,
    "EcomGSTIN" character varying(15),
    "OriginalInvoiceDate" date,
    "OriginalInvoiceNo" character varying(20),
    "DocumentStatus" smallint,
    "SalesPersonId" smallint,
    "SalesPersonName" character varying(100),
    "CurrencyId" smallint,
    "ExchangeRate" numeric,
    "Title" character varying(200),
    "InvoiceRemark" character varying(500),
    "IsAutoNumber" boolean,
    "InvoiceType" character varying(10),
    "IsIntraState" boolean,
    "IsRegisteredSupply" boolean,
    "BillToMailingName" character varying(1000),
    "BillToAddress" character varying(1000),
    "BillToCity" character varying(100),
    "BillToStateCode" character varying(2) NOT NULL,
    "BillToStateName" character varying(100) NOT NULL,
    "BillToPinZipCode" character varying(10),
    "BillToCountryCode" character varying(2) NOT NULL,
    "BillToCountryName" character varying(100) NOT NULL,
    "BillToPOSCode" character varying(2) NOT NULL,
    "BillToPOSName" character varying(100) NOT NULL,
    "BillToGSTIN" character varying(15),
    "BillToEmail" character varying(320),
    "BillToMobileNumber" character varying(20),
    "BillToPAN" character varying(10),
    "BillToGSTCategory" smallint NOT NULL,
    "ShipToMailingName" character varying(1000),
    "ShipToAddress" character varying(1000),
    "ShipToCity" character varying(100),
    "ShipToStateCode" character varying(2),
    "ShipToStateName" character varying(100),
    "ShipToPinZipCode" character varying(10),
    "ShipToCountryCode" character varying(2),
    "ShipToCountryName" character varying(100),
    "ShipToGSTIN" character varying(15),
    "ShipToContactPersonEmail" character varying(320),
    "ShipToContactPersonName" character varying(500),
    "ShipToContactPersonMobile" character varying(20),
    "ShipToPINCode" character varying(10),
    "ShippingBillNumber" character varying(20),
    "ShippingBillDate" date,
    "PortCode" character varying(6),
    "PortName" character varying(25),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "RefundClaim" boolean,
    "ImportDuty" numeric,
    "DispatchThrough" character varying(1000),
    "VesselFlightNo" character varying(1000),
    "DestinationPortCode" character varying(6),
    "DestinationPortName" character varying(25),
    "Destination" character varying(100),
    "LUTMasterId" smallint,
    "LUTNumber" character varying(100),
    "PlaceOfReceiptByShipper" character varying(100),
    "PortOfLoadingCode" character varying(10),
    "PortOfLoadingName" character varying(100),
    "PortOfDischargeCode" character varying(10),
    "PortOfDischargeName" character varying(100),
    "AssessableValue" numeric,
    "IGSTValue" numeric,
    "CGSTValue" numeric,
    "SGSTValue" numeric,
    "CessValue" numeric,
    "StateCessValue" numeric,
    "TotalInvoiceValue" numeric,
    "RoundOffAmount" numeric,
    "TotalInvValForeignCurrency" numeric,
    "Discount" numeric,
    "DiscountBeforeTax" numeric,
    "OtherCharge" numeric,
    "OtherChargeTaxable" numeric,
    "SubTotal" numeric NOT NULL,
    "InvoiceValueWithoutTCS" numeric,
    "TCSAmount" numeric,
    "TCSRate" numeric,
    "TotalAppropriateValue" numeric,
    "ModeTermsOfPayment" character varying(1000),
    "TermsOfDelivery" character varying(1000),
    "ReceiptMailingName" character varying(1000),
    "ReceiptAddress" character varying(1000),
    "ReceiptCity" character varying(100),
    "ReceiptStateCode" character varying(2),
    "ReceiptStateName" character varying(100),
    "ReceiptPinZipCode" character varying(10),
    "ReceiptCountryCode" character varying(2),
    "ReceiptCountryName" character varying(100),
    "ReceiptDocNo" character varying(20),
    "ReceiptDestination" character varying(200),
    "ReceiptedThrough" character varying(1000),
    "CarrierNameAgent" character varying(100),
    "MotorVehicleNo" character varying(20),
    "BillOfLandingLrRrNo" character varying(20),
    "ReceiptDate" date,
    "CreatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP(3) NOT NULL,
    "UpdatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP(3) NOT NULL,
    "Host" integer,
    "Irn" character varying(500),
    "AckNo" character varying(50),
    "AckDate" timestamp without time zone,
    "CancelIrnDate" timestamp without time zone,
    "IrnStatus" character varying(10),
    "ErrorMessage" text
);


ALTER TABLE "10083_10833"."SalesDebitNoteMain" OWNER TO "10083";

--
-- TOC entry 2166 (class 1259 OID 188637)
-- Name: SalesDebitNoteMain_SaleDebitNoteId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNoteMain_SaleDebitNoteId_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNoteMain_SaleDebitNoteId_seq" OWNER TO "10083";

--
-- TOC entry 11245 (class 0 OID 0)
-- Dependencies: 2166
-- Name: SalesDebitNoteMain_SaleDebitNoteId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNoteMain_SaleDebitNoteId_seq" OWNED BY "10083_10833"."SalesDebitNoteMain"."SaleDebitNoteId";


--
-- TOC entry 1994 (class 1259 OID 185648)
-- Name: SalesDebitNoteOtherCharges; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNoteOtherCharges" (
    "SalesDebitNoteOtherChargeId" integer NOT NULL,
    "SaleDebitNoteId" integer NOT NULL,
    "OtherChargeId" smallint NOT NULL,
    "GSTRateCode" numeric,
    "GSTRateName" numeric,
    "TaxableValue" numeric,
    "CGST" numeric,
    "SGST" numeric,
    "IGST" numeric,
    "HSN" character varying(8),
    "TaxableCode" integer DEFAULT 0,
    "TaxableName" character varying(3) DEFAULT 'No'::character varying,
    "AppropriateCode" integer DEFAULT 0,
    "AppropriateName" character varying(3) DEFAULT 'No'::character varying,
    "Name" text,
    "ForeignCurrencyPrice" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "DiscountBeforeTax" numeric DEFAULT 0,
    "AppropriateValue" numeric DEFAULT 0 NOT NULL,
    "PreTaxValue" numeric DEFAULT 0 NOT NULL,
    "TotalItemValue" numeric DEFAULT 0
);


ALTER TABLE "10083_10833"."SalesDebitNoteOtherCharges" OWNER TO "10083";

--
-- TOC entry 1993 (class 1259 OID 185647)
-- Name: SalesDebitNoteOtherCharges_SalesDebitNoteOtherChargeId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNoteOtherCharges_SalesDebitNoteOtherChargeId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNoteOtherCharges_SalesDebitNoteOtherChargeId_seq" OWNER TO "10083";

--
-- TOC entry 11246 (class 0 OID 0)
-- Dependencies: 1993
-- Name: SalesDebitNoteOtherCharges_SalesDebitNoteOtherChargeId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNoteOtherCharges_SalesDebitNoteOtherChargeId_seq" OWNED BY "10083_10833"."SalesDebitNoteOtherCharges"."SalesDebitNoteOtherChargeId";


--
-- TOC entry 1980 (class 1259 OID 185585)
-- Name: SalesDebitNoteOtherDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNoteOtherDetails" (
    "SalesDebitNoteOtherDetailsId" smallint NOT NULL,
    "SaleDebitNoteId" smallint NOT NULL,
    "ModeTermsOfPayment" character varying(1000),
    "TermsOfDelivery" character varying(1000),
    "TermAndCondition" character varying(1000),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesDebitNoteOtherDetails" OWNER TO "10083";

--
-- TOC entry 1979 (class 1259 OID 185584)
-- Name: SalesDebitNoteOtherDetails_SalesDebitNoteOtherDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNoteOtherDetails_SalesDebitNoteOtherDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNoteOtherDetails_SalesDebitNoteOtherDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11247 (class 0 OID 0)
-- Dependencies: 1979
-- Name: SalesDebitNoteOtherDetails_SalesDebitNoteOtherDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNoteOtherDetails_SalesDebitNoteOtherDetailsId_seq" OWNED BY "10083_10833"."SalesDebitNoteOtherDetails"."SalesDebitNoteOtherDetailsId";


--
-- TOC entry 2134 (class 1259 OID 187451)
-- Name: SalesDebitNotePackingList; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNotePackingList" (
    "SalesDebitNotePackingListId" integer NOT NULL,
    "SaleDebitNoteId" integer NOT NULL,
    "NumberOfPackageUOM" character varying(100),
    "NetWeightOfEachPackageUOM" character varying(100),
    "TareWeightOfEachPackageUOM" character varying(100),
    "TareWeightOfEachPalletUOM" character varying(100),
    "TotalNumberOfPalletsUOM" character varying(100),
    "TotalGrossWeightUOM" character varying(100),
    "TotalNetWeightUOM" character varying(100),
    "NetWeightOfEachPackage" numeric,
    "NumberOfPackage" numeric,
    "TareWeightOfEachPackage" numeric,
    "TareWeightOfEachPallet" numeric,
    "TotalGrossWeight" numeric,
    "TotalNetWeight" numeric,
    "TotalNumberOfPallets" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesDebitNotePackingList" OWNER TO "10083";

--
-- TOC entry 2133 (class 1259 OID 187450)
-- Name: SalesDebitNotePackingList_SalesDebitNotePackingListId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNotePackingList_SalesDebitNotePackingListId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNotePackingList_SalesDebitNotePackingListId_seq" OWNER TO "10083";

--
-- TOC entry 11248 (class 0 OID 0)
-- Dependencies: 2133
-- Name: SalesDebitNotePackingList_SalesDebitNotePackingListId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNotePackingList_SalesDebitNotePackingListId_seq" OWNED BY "10083_10833"."SalesDebitNotePackingList"."SalesDebitNotePackingListId";


--
-- TOC entry 1982 (class 1259 OID 185594)
-- Name: SalesDebitNoteReceiptDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNoteReceiptDetails" (
    "SalesDebitNoteReceiptDetailsId" smallint NOT NULL,
    "SaleDebitNoteId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2),
    "StateName" character varying(100),
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "ReceiptDocNo" character varying(20),
    "ReceiptThrough" character varying(40),
    "Destination" character varying(200),
    "CarrierNameAgent" character varying(100),
    "BillOfLandingLrRrNo" character varying(20),
    "Date" date,
    "MotorVehicleNo" character varying(20),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesDebitNoteReceiptDetails" OWNER TO "10083";

--
-- TOC entry 1981 (class 1259 OID 185593)
-- Name: SalesDebitNoteReceiptDetails_SalesDebitNoteReceiptDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNoteReceiptDetails_SalesDebitNoteReceiptDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNoteReceiptDetails_SalesDebitNoteReceiptDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11249 (class 0 OID 0)
-- Dependencies: 1981
-- Name: SalesDebitNoteReceiptDetails_SalesDebitNoteReceiptDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNoteReceiptDetails_SalesDebitNoteReceiptDetailsId_seq" OWNED BY "10083_10833"."SalesDebitNoteReceiptDetails"."SalesDebitNoteReceiptDetailsId";


--
-- TOC entry 1978 (class 1259 OID 185576)
-- Name: SalesDebitNoteShipTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNoteShipTo" (
    "SalesDebitNoteShipToId" smallint NOT NULL,
    "SaleDebitNoteId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2),
    "StateName" character varying(100),
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "GSTIN" character varying(15),
    "ContactPersonEmail" character varying(320),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "ContactPersonName" character varying(500),
    "ContactPersonMobile" character varying(20),
    "Pincode" character varying(10)
);


ALTER TABLE "10083_10833"."SalesDebitNoteShipTo" OWNER TO "10083";

--
-- TOC entry 1977 (class 1259 OID 185575)
-- Name: SalesDebitNoteShipTo_SalesDebitNoteShipToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNoteShipTo_SalesDebitNoteShipToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNoteShipTo_SalesDebitNoteShipToId_seq" OWNER TO "10083";

--
-- TOC entry 11250 (class 0 OID 0)
-- Dependencies: 1977
-- Name: SalesDebitNoteShipTo_SalesDebitNoteShipToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNoteShipTo_SalesDebitNoteShipToId_seq" OWNED BY "10083_10833"."SalesDebitNoteShipTo"."SalesDebitNoteShipToId";


--
-- TOC entry 1988 (class 1259 OID 185621)
-- Name: SalesDebitNoteValueDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDebitNoteValueDetails" (
    "SalesDebitNoteValueDetailsId" smallint NOT NULL,
    "SaleDebitNoteId" smallint NOT NULL,
    "AssessableValue" numeric,
    "IGSTValue" numeric,
    "CGSTValue" numeric,
    "SGSTValue" numeric,
    "CessValue" numeric,
    "StateCessValue" numeric,
    "TotalInvoiceValue" numeric,
    "RoundOffAmount" numeric,
    "TotalInvValForeignCurrency" numeric,
    "Discount" numeric,
    "OtherCharge" numeric,
    "OtherChargeTaxable" numeric,
    "TCSRate" numeric,
    "InvoiceValueWithoutTCS" numeric,
    "TCSAmount" numeric,
    "SubTotal" numeric NOT NULL,
    "DiscountBeforeTax" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "TotalAppropriateValue" numeric
);


ALTER TABLE "10083_10833"."SalesDebitNoteValueDetails" OWNER TO "10083";

--
-- TOC entry 1987 (class 1259 OID 185620)
-- Name: SalesDebitNoteValueDetails_SalesDebitNoteValueDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNoteValueDetails_SalesDebitNoteValueDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNoteValueDetails_SalesDebitNoteValueDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11251 (class 0 OID 0)
-- Dependencies: 1987
-- Name: SalesDebitNoteValueDetails_SalesDebitNoteValueDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNoteValueDetails_SalesDebitNoteValueDetailsId_seq" OWNED BY "10083_10833"."SalesDebitNoteValueDetails"."SalesDebitNoteValueDetailsId";


--
-- TOC entry 1973 (class 1259 OID 185555)
-- Name: SalesDebitNote_SaleDebitNoteId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDebitNote_SaleDebitNoteId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDebitNote_SaleDebitNoteId_seq" OWNER TO "10083";

--
-- TOC entry 11252 (class 0 OID 0)
-- Dependencies: 1973
-- Name: SalesDebitNote_SaleDebitNoteId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDebitNote_SaleDebitNoteId_seq" OWNED BY "10083_10833"."SalesDebitNote"."SaleDebitNoteId";


--
-- TOC entry 1876 (class 1259 OID 185107)
-- Name: SalesDispatchDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesDispatchDetails" (
    "SalesDispatchDetailsId" smallint NOT NULL,
    "SaleId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2),
    "StateName" character varying(100),
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "DispatchDocNo" character varying(20),
    "DispatchedThrough" character varying(1000),
    "Destination" character varying(200),
    "CarrierNameAgent" character varying(100),
    "BillOfLandingLrRrNo" character varying(20),
    "Date" date,
    "MotorVehicleNo" character varying(20),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesDispatchDetails" OWNER TO "10083";

--
-- TOC entry 1875 (class 1259 OID 185106)
-- Name: SalesDispatchDetails_SalesDispatchDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesDispatchDetails_SalesDispatchDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesDispatchDetails_SalesDispatchDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11253 (class 0 OID 0)
-- Dependencies: 1875
-- Name: SalesDispatchDetails_SalesDispatchDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesDispatchDetails_SalesDispatchDetailsId_seq" OWNED BY "10083_10833"."SalesDispatchDetails"."SalesDispatchDetailsId";


--
-- TOC entry 1884 (class 1259 OID 185143)
-- Name: SalesEwayBillsDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesEwayBillsDetails" (
    "SalesEwayBillsDetailsId" integer NOT NULL,
    "SaleId" integer NOT NULL,
    "GSTIN" character varying(15),
    "TransporterName" character varying(100),
    "TransportModeCode" integer,
    "TransportModeName" character varying(5),
    "Distance" character varying(4),
    "TransportDocumentNumber" character varying(15),
    "TransportDocumentDate" date,
    "VehicleNumber" character varying(20),
    "VehicleTypeCode" character varying(3),
    "VehicleTypeName" character varying(50),
    "EwayBillNumber" character varying(50),
    "EwayBillDate" timestamp without time zone,
    "DispatchFrom" character varying(1000),
    "ShipTo" character varying(1000),
    "ValidUpTo" timestamp without time zone,
    "EwayStatus" character varying(10),
    "Alerts" text,
    "Information" text,
    "Errors" text,
    "CancelDate" timestamp without time zone,
    "CancelReason" character varying(1000),
    "CancelRemark" text,
    "UpdateReason" character varying(1000),
    "UpdateRemark" text,
    "ExtendReason" character varying(1000),
    "ExtendRemark" text,
    "ExtendOn" timestamp without time zone,
    "VehicleUpdatedOn" timestamp without time zone,
    "TransUpdatedOn" timestamp without time zone,
    "TransportersId" smallint,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesEwayBillsDetails" OWNER TO "10083";

--
-- TOC entry 1883 (class 1259 OID 185142)
-- Name: SalesEwayBillsDetails_SalesEwayBillsDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesEwayBillsDetails_SalesEwayBillsDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesEwayBillsDetails_SalesEwayBillsDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11254 (class 0 OID 0)
-- Dependencies: 1883
-- Name: SalesEwayBillsDetails_SalesEwayBillsDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesEwayBillsDetails_SalesEwayBillsDetailsId_seq" OWNED BY "10083_10833"."SalesEwayBillsDetails"."SalesEwayBillsDetailsId";


--
-- TOC entry 1880 (class 1259 OID 185125)
-- Name: SalesExportDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesExportDetails" (
    "SalesExportDetailsId" smallint NOT NULL,
    "SaleId" smallint NOT NULL,
    "ShippingBillNumber" character varying(20),
    "ShippingBillDate" date,
    "PortCode" character varying(6),
    "PortName" character varying(25),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "RefundClaim" boolean,
    "ExportDuty" numeric,
    "DispatchThrough" character varying(1000),
    "VesselFlightNo" character varying(1000),
    "DestinationPortCode" character varying(6),
    "DestinationPortName" character varying(25),
    "Destination" character varying(100),
    "LUTNumber" character varying(100),
    "PlaceOfReceiptByShipper" character varying(100),
    "PortOfLoadingCode" character varying(10),
    "PortOfLoadingName" character varying(100),
    "PortOfDischargeCode" character varying(10),
    "PortOfDischargeName" character varying(100),
    "LUTMasterId" smallint,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesExportDetails" OWNER TO "10083";

--
-- TOC entry 1879 (class 1259 OID 185124)
-- Name: SalesExportDetails_SalesExportDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesExportDetails_SalesExportDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesExportDetails_SalesExportDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11255 (class 0 OID 0)
-- Dependencies: 1879
-- Name: SalesExportDetails_SalesExportDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesExportDetails_SalesExportDetailsId_seq" OWNED BY "10083_10833"."SalesExportDetails"."SalesExportDetailsId";


--
-- TOC entry 2157 (class 1259 OID 188278)
-- Name: SalesHSNSummary; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesHSNSummary" (
    "SaleHSNId" integer NOT NULL,
    "SaleId" integer NOT NULL,
    "ItemName" character varying(500),
    "HSN" character varying(500),
    "TaxableValue" numeric,
    "IGST" numeric,
    "CGST" numeric,
    "SGST" numeric,
    "Cess" numeric,
    "TaxRate" numeric,
    "TotalTax" numeric,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL
);


ALTER TABLE "10083_10833"."SalesHSNSummary" OWNER TO "10083";

--
-- TOC entry 2156 (class 1259 OID 188277)
-- Name: SalesHSNSummary_SaleHSNId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesHSNSummary_SaleHSNId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesHSNSummary_SaleHSNId_seq" OWNER TO "10083";

--
-- TOC entry 11256 (class 0 OID 0)
-- Dependencies: 2156
-- Name: SalesHSNSummary_SaleHSNId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesHSNSummary_SaleHSNId_seq" OWNED BY "10083_10833"."SalesHSNSummary"."SaleHSNId";


--
-- TOC entry 1888 (class 1259 OID 185161)
-- Name: SalesItemWareHouse; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesItemWareHouse" (
    "SalesItemWareHouseId" smallint NOT NULL,
    "SalesItemsId" smallint NOT NULL,
    "WareHouseId" smallint NOT NULL,
    "Quantity" numeric,
    "Rate" numeric,
    "Total" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesItemWareHouse" OWNER TO "10083";

--
-- TOC entry 1887 (class 1259 OID 185160)
-- Name: SalesItemWareHouse_SalesItemWareHouseId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesItemWareHouse_SalesItemWareHouseId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesItemWareHouse_SalesItemWareHouseId_seq" OWNER TO "10083";

--
-- TOC entry 11257 (class 0 OID 0)
-- Dependencies: 1887
-- Name: SalesItemWareHouse_SalesItemWareHouseId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesItemWareHouse_SalesItemWareHouseId_seq" OWNED BY "10083_10833"."SalesItemWareHouse"."SalesItemWareHouseId";


--
-- TOC entry 1878 (class 1259 OID 185116)
-- Name: SalesItems; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesItems" (
    "SalesItemsId" integer NOT NULL,
    "SaleId" integer NOT NULL,
    "StockItemId" bigint NOT NULL,
    "ItemName" character varying(500) NOT NULL,
    "SerialNumber" smallint,
    "ItemCode" character varying(20),
    "ItemDescription" character varying(500),
    "HSNSAC" character varying(8),
    "BarCode" character varying(500),
    "Quantity" numeric,
    "FreeQuantity" numeric,
    "UnitPrice" numeric NOT NULL,
    "SubTotal" numeric NOT NULL,
    "Discount" numeric NOT NULL,
    "OtherCharges" numeric NOT NULL,
    "TaxableValue" numeric NOT NULL,
    "GstRate" numeric,
    "CessRate" numeric,
    "StateCessRate" numeric,
    "IGST" numeric NOT NULL,
    "CGST" numeric NOT NULL,
    "SGST" numeric NOT NULL,
    "Cess" numeric,
    "StateCess" numeric,
    "CessNonAdvolRate" numeric,
    "CessNonAdvolUnit" numeric,
    "StateCessNonAdvolRate" numeric,
    "CessNonAdvol" numeric,
    "StateCessNonAdvol" numeric,
    "TotalItemValue" numeric NOT NULL,
    "MarksContainerNo" character varying(20),
    "NumberOfPackages" integer,
    "DiscountRate" numeric,
    "Taxability" integer NOT NULL,
    "ForeignCurrencyPrice" numeric,
    "UOMCode" character varying(3),
    "PreTaxValue" numeric,
    "TypeCode" integer,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "PartNumber" character varying(20),
    "ReverseChargeApplicable" integer,
    "EligibleforInputCredit" integer,
    "AppropriateValue" numeric DEFAULT 0 NOT NULL,
    "DiscountBeforeTax" numeric DEFAULT 0,
    "UnitName" character varying(100)
);


ALTER TABLE "10083_10833"."SalesItems" OWNER TO "10083";

--
-- TOC entry 1877 (class 1259 OID 185115)
-- Name: SalesItems_SalesItemsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesItems_SalesItemsId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesItems_SalesItemsId_seq" OWNER TO "10083";

--
-- TOC entry 11258 (class 0 OID 0)
-- Dependencies: 1877
-- Name: SalesItems_SalesItemsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesItems_SalesItemsId_seq" OWNED BY "10083_10833"."SalesItems"."SalesItemsId";


--
-- TOC entry 2163 (class 1259 OID 188520)
-- Name: SalesMain; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesMain" (
    "SaleId" integer NOT NULL,
    "TemplateId" smallint NOT NULL,
    "CustomerId" smallint NOT NULL,
    "Number" public.citext NOT NULL,
    "Date" date NOT NULL,
    "FinancialYear" integer NOT NULL,
    "ReverseCharge" boolean,
    "TermAndConditionId" smallint,
    "TermAndConditionText" text,
    "EcomGSTIN" character varying(15),
    "DocumentStatus" smallint,
    "SalesPersonId" smallint,
    "SalesPersonName" character varying(100),
    "CurrencyId" smallint,
    "ExchangeRate" numeric,
    "Title" character varying(200),
    "InvoiceRemark" character varying(500),
    "IsAutoNumber" boolean,
    "InvoiceType" character varying(10),
    "IsIntraState" boolean,
    "IsRegisteredSupply" boolean,
    "BillToMailingName" character varying(1000),
    "BillToAddress" character varying(1000),
    "BillToCity" character varying(100),
    "BillToStateCode" character varying(2) NOT NULL,
    "BillToStateName" character varying(100) NOT NULL,
    "BillToPinZipCode" character varying(10),
    "BillToCountryCode" character varying(2) NOT NULL,
    "BillToCountryName" character varying(100) NOT NULL,
    "BillToPOSCode" character varying(2) NOT NULL,
    "BillToPOSName" character varying(100) NOT NULL,
    "BillToGSTIN" character varying(15),
    "BillToEmail" character varying(320),
    "BillToMobileNumber" character varying(20),
    "BillToPAN" character varying(10),
    "BillToGSTCategory" smallint NOT NULL,
    "ShipToMailingName" character varying(1000),
    "ShipToAddress" character varying(1000),
    "ShipToCity" character varying(100),
    "ShipToStateCode" character varying(2),
    "ShipToStateName" character varying(100),
    "ShipToPinZipCode" character varying(10),
    "ShipToCountryCode" character varying(2),
    "ShipToCountryName" character varying(100),
    "ShipToGSTIN" character varying(15),
    "ShipToContactPersonEmail" character varying(320),
    "ShipToContactPersonName" character varying(500),
    "ShipToContactPersonMobile" character varying(20),
    "ShipToPINCode" character varying(10),
    "ShippingBillNumber" character varying(20),
    "ShippingBillDate" date,
    "PortCode" character varying(6),
    "PortName" character varying(25),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "RefundClaim" boolean,
    "ExportDuty" numeric,
    "DispatchThrough" character varying(1000),
    "VesselFlightNo" character varying(1000),
    "DestinationPortCode" character varying(6),
    "DestinationPortName" character varying(25),
    "Destination" character varying(100),
    "LUTMasterId" smallint,
    "LUTNumber" character varying(100),
    "PlaceOfReceiptByShipper" character varying(100),
    "PortOfLoadingCode" character varying(10),
    "PortOfLoadingName" character varying(100),
    "PortOfDischargeCode" character varying(10),
    "PortOfDischargeName" character varying(100),
    "AssessableValue" numeric,
    "IGSTValue" numeric,
    "CGSTValue" numeric,
    "SGSTValue" numeric,
    "CessValue" numeric,
    "StateCessValue" numeric,
    "TotalInvoiceValue" numeric,
    "RoundOffAmount" numeric,
    "TotalInvValForeignCurrency" numeric,
    "Discount" numeric,
    "DiscountBeforeTax" numeric,
    "OtherCharge" numeric,
    "OtherChargeTaxable" numeric,
    "SubTotal" numeric NOT NULL,
    "InvoiceValueWithoutTCS" numeric,
    "TCSAmount" numeric,
    "TCSRate" numeric,
    "TotalAppropriateValue" numeric,
    "ModeTermsOfPayment" character varying(1000),
    "TermsOfDelivery" character varying(1000),
    "DispatchMailingName" character varying(1000),
    "DispatchAddress" character varying(1000),
    "DispatchCity" character varying(100),
    "DispatchStateCode" character varying(2),
    "DispatchStateName" character varying(100),
    "DispatchPinZipCode" character varying(10),
    "DispatchCountryCode" character varying(2),
    "DispatchCountryName" character varying(100),
    "DispatchDocNo" character varying(20),
    "DispatchDestination" character varying(200),
    "DispatchedThrough" character varying(1000),
    "CarrierNameAgent" character varying(100),
    "MotorVehicleNo" character varying(20),
    "BillOfLandingLrRrNo" character varying(20),
    "DispatchDate" date,
    "CreatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP(3) NOT NULL,
    "UpdatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP(3) NOT NULL,
    "Host" integer,
    "Irn" character varying(500),
    "AckNo" character varying(50),
    "AckDate" timestamp without time zone,
    "CancelIrnDate" timestamp without time zone,
    "IrnStatus" character varying(10),
    "ErrorMessage" text
);


ALTER TABLE "10083_10833"."SalesMain" OWNER TO "10083";

--
-- TOC entry 2162 (class 1259 OID 188519)
-- Name: SalesMain_SaleId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesMain_SaleId_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesMain_SaleId_seq" OWNER TO "10083";

--
-- TOC entry 11259 (class 0 OID 0)
-- Dependencies: 2162
-- Name: SalesMain_SaleId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesMain_SaleId_seq" OWNED BY "10083_10833"."SalesMain"."SaleId";


--
-- TOC entry 1914 (class 1259 OID 185284)
-- Name: SalesOrder; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesOrder" (
    "SaleOrderId" smallint NOT NULL,
    "Number" character varying(20),
    "Date" date,
    "DueDate" date,
    "FinancialYear" integer,
    "TemplateId" smallint NOT NULL,
    "DocumentName" character varying(20),
    "CustomerId" smallint NOT NULL,
    "CustomerPurchaseOrderNumber" character varying(20),
    "CustomerPurchaseOrderDate" date,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesOrder" OWNER TO "10083";

--
-- TOC entry 1930 (class 1259 OID 185354)
-- Name: SalesOrderBatchDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesOrderBatchDetails" (
    "SalesOrderBatchDetailsId" smallint NOT NULL,
    "SalesOrderItemsId" smallint NOT NULL,
    "Name" character varying(1000),
    "SerialNumber" integer,
    "ExpiryDate" date,
    "ManufacturingDate" date,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesOrderBatchDetails" OWNER TO "10083";

--
-- TOC entry 1929 (class 1259 OID 185353)
-- Name: SalesOrderBatchDetails_SalesOrderBatchDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesOrderBatchDetails_SalesOrderBatchDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesOrderBatchDetails_SalesOrderBatchDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11260 (class 0 OID 0)
-- Dependencies: 1929
-- Name: SalesOrderBatchDetails_SalesOrderBatchDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesOrderBatchDetails_SalesOrderBatchDetailsId_seq" OWNED BY "10083_10833"."SalesOrderBatchDetails"."SalesOrderBatchDetailsId";


--
-- TOC entry 1916 (class 1259 OID 185291)
-- Name: SalesOrderBillTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesOrderBillTo" (
    "SalesOrderBillToId" smallint NOT NULL,
    "SaleOrderId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "POSCode" character varying(2) NOT NULL,
    "POSName" character varying(100) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesOrderBillTo" OWNER TO "10083";

--
-- TOC entry 1915 (class 1259 OID 185290)
-- Name: SalesOrderBillTo_SalesOrderBillToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesOrderBillTo_SalesOrderBillToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesOrderBillTo_SalesOrderBillToId_seq" OWNER TO "10083";

--
-- TOC entry 11261 (class 0 OID 0)
-- Dependencies: 1915
-- Name: SalesOrderBillTo_SalesOrderBillToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesOrderBillTo_SalesOrderBillToId_seq" OWNED BY "10083_10833"."SalesOrderBillTo"."SalesOrderBillToId";


--
-- TOC entry 1920 (class 1259 OID 185309)
-- Name: SalesOrderDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesOrderDetails" (
    "SalesOrderDetailsId" smallint NOT NULL,
    "SaleOrderId" smallint NOT NULL,
    "ModeTermsOfPayment" character varying(1000),
    "TermsOfDelivery" character varying(1000),
    "TermAndCondition" character varying(1000),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesOrderDetails" OWNER TO "10083";

--
-- TOC entry 1919 (class 1259 OID 185308)
-- Name: SalesOrderDetails_SalesOrderDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesOrderDetails_SalesOrderDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesOrderDetails_SalesOrderDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11262 (class 0 OID 0)
-- Dependencies: 1919
-- Name: SalesOrderDetails_SalesOrderDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesOrderDetails_SalesOrderDetailsId_seq" OWNED BY "10083_10833"."SalesOrderDetails"."SalesOrderDetailsId";


--
-- TOC entry 1922 (class 1259 OID 185318)
-- Name: SalesOrderDispatchFrom; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesOrderDispatchFrom" (
    "SalesOrderDispatchFromId" smallint NOT NULL,
    "SaleOrderId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address1" character varying(1000),
    "Address2" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesOrderDispatchFrom" OWNER TO "10083";

--
-- TOC entry 1921 (class 1259 OID 185317)
-- Name: SalesOrderDispatchFrom_SalesOrderDispatchFromId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesOrderDispatchFrom_SalesOrderDispatchFromId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesOrderDispatchFrom_SalesOrderDispatchFromId_seq" OWNER TO "10083";

--
-- TOC entry 11263 (class 0 OID 0)
-- Dependencies: 1921
-- Name: SalesOrderDispatchFrom_SalesOrderDispatchFromId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesOrderDispatchFrom_SalesOrderDispatchFromId_seq" OWNED BY "10083_10833"."SalesOrderDispatchFrom"."SalesOrderDispatchFromId";


--
-- TOC entry 1926 (class 1259 OID 185336)
-- Name: SalesOrderExportDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesOrderExportDetails" (
    "SalesOrderExportDetailsId" smallint NOT NULL,
    "SaleOrderId" smallint NOT NULL,
    "ShippingBillNumber" character varying(20),
    "ShippingBillDate" date,
    "PortCode" character varying(6),
    "PortName" character varying(25),
    "ForeignCurrency" character varying(16),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "RefundClaim" boolean,
    "ExportDuty" numeric,
    "DispatchThrough" character varying(1000),
    "VehicleNumber" character varying(1000),
    "ExchangeRate" numeric,
    "DestinationPortCode" character varying(6),
    "DestinationPortName" character varying(25),
    "Destination" character varying(100),
    "LUTNumber" character varying(100),
    "PlaceOfReceipt" character varying(100),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesOrderExportDetails" OWNER TO "10083";

--
-- TOC entry 1925 (class 1259 OID 185335)
-- Name: SalesOrderExportDetails_SalesOrderExportDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesOrderExportDetails_SalesOrderExportDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesOrderExportDetails_SalesOrderExportDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11264 (class 0 OID 0)
-- Dependencies: 1925
-- Name: SalesOrderExportDetails_SalesOrderExportDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesOrderExportDetails_SalesOrderExportDetailsId_seq" OWNED BY "10083_10833"."SalesOrderExportDetails"."SalesOrderExportDetailsId";


--
-- TOC entry 1924 (class 1259 OID 185327)
-- Name: SalesOrderItems; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesOrderItems" (
    "SalesOrderItemsId" bigint NOT NULL,
    "SaleOrderId" smallint NOT NULL,
    "StockItemId" bigint NOT NULL,
    "ItemName" character varying(500) NOT NULL,
    "ItemSerialNumber" smallint,
    "ItemCode" integer,
    "ItemDescription" character varying(500),
    "HSNSAC" character varying(8),
    "BarCode" character varying(500),
    "OrderQuantity" numeric NOT NULL,
    "BalanceQuantity" numeric NOT NULL,
    "FreeQuantity" numeric NOT NULL,
    "UnitPrice" numeric NOT NULL,
    "SubTotal" numeric NOT NULL,
    "Discount" numeric NOT NULL,
    "OtherCharges" numeric NOT NULL,
    "TaxableValue" numeric NOT NULL,
    "GstRate" numeric NOT NULL,
    "CessRate" numeric,
    "StateCessRateCode" numeric,
    "StateCessRateName" numeric,
    "IGST" numeric NOT NULL,
    "CGST" numeric NOT NULL,
    "SGST" numeric NOT NULL,
    "Cess" numeric NOT NULL,
    "StateCess" numeric NOT NULL,
    "CessNonAdvolRateCode" numeric,
    "CessNonAdvolRateName" numeric,
    "CessNonAdvolUnit" numeric,
    "StateCessNonAdvolRateCode" numeric,
    "StateCessNonAdvolRateName" numeric,
    "StateCessNonAdvolUnit" numeric,
    "CessNonAdvol" numeric NOT NULL,
    "StateCessNonAdvol" numeric NOT NULL,
    "TotalItemValue" numeric NOT NULL,
    "DueDate" date NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesOrderItems" OWNER TO "10083";

--
-- TOC entry 1923 (class 1259 OID 185326)
-- Name: SalesOrderItems_SalesOrderItemsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesOrderItems_SalesOrderItemsId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesOrderItems_SalesOrderItemsId_seq" OWNER TO "10083";

--
-- TOC entry 11265 (class 0 OID 0)
-- Dependencies: 1923
-- Name: SalesOrderItems_SalesOrderItemsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesOrderItems_SalesOrderItemsId_seq" OWNED BY "10083_10833"."SalesOrderItems"."SalesOrderItemsId";


--
-- TOC entry 1918 (class 1259 OID 185300)
-- Name: SalesOrderShipTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesOrderShipTo" (
    "SalesOrderShipToId" smallint NOT NULL,
    "SaleOrderId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesOrderShipTo" OWNER TO "10083";

--
-- TOC entry 1917 (class 1259 OID 185299)
-- Name: SalesOrderShipTo_SalesOrderShipToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesOrderShipTo_SalesOrderShipToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesOrderShipTo_SalesOrderShipToId_seq" OWNER TO "10083";

--
-- TOC entry 11266 (class 0 OID 0)
-- Dependencies: 1917
-- Name: SalesOrderShipTo_SalesOrderShipToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesOrderShipTo_SalesOrderShipToId_seq" OWNED BY "10083_10833"."SalesOrderShipTo"."SalesOrderShipToId";


--
-- TOC entry 1928 (class 1259 OID 185345)
-- Name: SalesOrderValueDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesOrderValueDetails" (
    "SalesOrderValueDetailsId" smallint NOT NULL,
    "SaleOrderId" smallint NOT NULL,
    "AssessableValue" numeric,
    "IGST" numeric,
    "CGST" numeric,
    "SGST" numeric,
    "Cess" numeric,
    "StateCess" numeric,
    "InvoiceValue" numeric,
    "RoundOffAmount" numeric,
    "InvoiceValueForeignCurrency" numeric,
    "Discount" numeric,
    "OtherCharge" numeric,
    "OtherChargeTaxable" numeric,
    "TCSRate" numeric,
    "TCSAmount" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesOrderValueDetails" OWNER TO "10083";

--
-- TOC entry 1927 (class 1259 OID 185344)
-- Name: SalesOrderValueDetails_SalesOrderValueDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesOrderValueDetails_SalesOrderValueDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesOrderValueDetails_SalesOrderValueDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11267 (class 0 OID 0)
-- Dependencies: 1927
-- Name: SalesOrderValueDetails_SalesOrderValueDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesOrderValueDetails_SalesOrderValueDetailsId_seq" OWNED BY "10083_10833"."SalesOrderValueDetails"."SalesOrderValueDetailsId";


--
-- TOC entry 1913 (class 1259 OID 185283)
-- Name: SalesOrder_SaleOrderId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesOrder_SaleOrderId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesOrder_SaleOrderId_seq" OWNER TO "10083";

--
-- TOC entry 11268 (class 0 OID 0)
-- Dependencies: 1913
-- Name: SalesOrder_SaleOrderId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesOrder_SaleOrderId_seq" OWNED BY "10083_10833"."SalesOrder"."SaleOrderId";


--
-- TOC entry 1874 (class 1259 OID 185094)
-- Name: SalesOtherCharges; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesOtherCharges" (
    "SalesOtherChargeId" integer NOT NULL,
    "SaleId" integer NOT NULL,
    "OtherChargeId" smallint NOT NULL,
    "GSTRateCode" numeric,
    "GSTRateName" numeric,
    "TaxableValue" numeric,
    "CGST" numeric,
    "SGST" numeric,
    "IGST" numeric,
    "HSN" character varying(8),
    "TaxableCode" integer DEFAULT 0,
    "TaxableName" character varying(3) DEFAULT 'No'::character varying,
    "AppropriateCode" integer DEFAULT 0,
    "AppropriateName" character varying(3) DEFAULT 'No'::character varying,
    "Name" text,
    "ForeignCurrencyPrice" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "DiscountBeforeTax" numeric DEFAULT 0,
    "AppropriateValue" numeric DEFAULT 0 NOT NULL,
    "PreTaxValue" numeric DEFAULT 0 NOT NULL,
    "TotalItemValue" numeric DEFAULT 0
);


ALTER TABLE "10083_10833"."SalesOtherCharges" OWNER TO "10083";

--
-- TOC entry 1873 (class 1259 OID 185093)
-- Name: SalesOtherCharges_SalesOtherChargeId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesOtherCharges_SalesOtherChargeId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesOtherCharges_SalesOtherChargeId_seq" OWNER TO "10083";

--
-- TOC entry 11269 (class 0 OID 0)
-- Dependencies: 1873
-- Name: SalesOtherCharges_SalesOtherChargeId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesOtherCharges_SalesOtherChargeId_seq" OWNED BY "10083_10833"."SalesOtherCharges"."SalesOtherChargeId";


--
-- TOC entry 1872 (class 1259 OID 185085)
-- Name: SalesOtherDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesOtherDetails" (
    "SalesOtherDetailsId" smallint NOT NULL,
    "SaleId" smallint NOT NULL,
    "ModeTermsOfPayment" character varying(1000),
    "TermsOfDelivery" character varying(1000),
    "TermAndCondition" character varying(1000),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesOtherDetails" OWNER TO "10083";

--
-- TOC entry 1871 (class 1259 OID 185084)
-- Name: SalesOtherDetails_SalesOtherDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesOtherDetails_SalesOtherDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesOtherDetails_SalesOtherDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11270 (class 0 OID 0)
-- Dependencies: 1871
-- Name: SalesOtherDetails_SalesOtherDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesOtherDetails_SalesOtherDetailsId_seq" OWNED BY "10083_10833"."SalesOtherDetails"."SalesOtherDetailsId";


--
-- TOC entry 2130 (class 1259 OID 187435)
-- Name: SalesPackingList; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesPackingList" (
    "SalesPackingListId" integer NOT NULL,
    "SaleId" integer NOT NULL,
    "NumberOfPackageUOM" character varying(100),
    "NetWeightOfEachPackageUOM" character varying(100),
    "TareWeightOfEachPackageUOM" character varying(100),
    "TareWeightOfEachPalletUOM" character varying(100),
    "TotalNumberOfPalletsUOM" character varying(100),
    "TotalGrossWeightUOM" character varying(100),
    "TotalNetWeightUOM" character varying(100),
    "NetWeightOfEachPackage" numeric,
    "NumberOfPackage" numeric,
    "TareWeightOfEachPackage" numeric,
    "TareWeightOfEachPallet" numeric,
    "TotalGrossWeight" numeric,
    "TotalNetWeight" numeric,
    "TotalNumberOfPallets" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesPackingList" OWNER TO "10083";

--
-- TOC entry 2129 (class 1259 OID 187434)
-- Name: SalesPackingList_SalesPackingListId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesPackingList_SalesPackingListId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesPackingList_SalesPackingListId_seq" OWNER TO "10083";

--
-- TOC entry 11271 (class 0 OID 0)
-- Dependencies: 2129
-- Name: SalesPackingList_SalesPackingListId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesPackingList_SalesPackingListId_seq" OWNED BY "10083_10833"."SalesPackingList"."SalesPackingListId";


--
-- TOC entry 2072 (class 1259 OID 186021)
-- Name: SalesPerson; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesPerson" (
    "SalesPersonId" smallint NOT NULL,
    "Name" character varying(100) NOT NULL,
    "EmailAddress" character varying(320),
    "PhoneNumber" character varying(20),
    "Code" public.citext,
    "ActiveStatus" boolean DEFAULT true,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "IsPrimary" boolean DEFAULT false
);


ALTER TABLE "10083_10833"."SalesPerson" OWNER TO "10083";

--
-- TOC entry 2071 (class 1259 OID 186020)
-- Name: SalesPerson_SalesPersonId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesPerson_SalesPersonId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesPerson_SalesPersonId_seq" OWNER TO "10083";

--
-- TOC entry 11272 (class 0 OID 0)
-- Dependencies: 2071
-- Name: SalesPerson_SalesPersonId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesPerson_SalesPersonId_seq" OWNED BY "10083_10833"."SalesPerson"."SalesPersonId";


--
-- TOC entry 1950 (class 1259 OID 185442)
-- Name: SalesReturn; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturn" (
    "SaleReturnId" smallint NOT NULL,
    "Number" public.citext NOT NULL,
    "Date" date NOT NULL,
    "FinancialYear" integer,
    "TemplateId" smallint NOT NULL,
    "CustomerId" smallint NOT NULL,
    "DocumentName" character varying(1000),
    "ReverseCharge" character varying(1) DEFAULT 'N'::character varying,
    "TermAndConditionId" smallint,
    "TermAndConditionText" text,
    "OriginalInvoiceNo" character varying(20),
    "OriginalInvoiceDate" date,
    "EcomGSTIN" character varying(15),
    "DocumentStatus" smallint DEFAULT 1,
    "SalesPersonId" smallint,
    "CurrencyId" smallint,
    "ExchangeRate" numeric,
    "InvoiceType" character varying(10),
    "Title" character varying(200),
    "InvoiceRemark" character varying(500),
    "IsAutoNumber" boolean DEFAULT false,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "IsIntraState" boolean,
    "IsRegisteredSupply" boolean,
    "SalesPersonName" character varying(100)
);


ALTER TABLE "10083_10833"."SalesReturn" OWNER TO "10083";

--
-- TOC entry 2148 (class 1259 OID 187797)
-- Name: SalesReturnAuditLogs; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnAuditLogs" (
    "LogId" bigint NOT NULL,
    "ModuleId" smallint NOT NULL,
    "DocumentId" smallint NOT NULL,
    "UserId" smallint NOT NULL,
    "RecordId" smallint NOT NULL,
    "Timestamp" timestamp with time zone,
    "Action" character varying(15) NOT NULL,
    "AuditDescription" text,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesReturnAuditLogs" OWNER TO "10083";

--
-- TOC entry 2147 (class 1259 OID 187796)
-- Name: SalesReturnAuditLogs_LogId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnAuditLogs_LogId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnAuditLogs_LogId_seq" OWNER TO "10083";

--
-- TOC entry 11273 (class 0 OID 0)
-- Dependencies: 2147
-- Name: SalesReturnAuditLogs_LogId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnAuditLogs_LogId_seq" OWNED BY "10083_10833"."SalesReturnAuditLogs"."LogId";


--
-- TOC entry 1968 (class 1259 OID 185525)
-- Name: SalesReturnBatchDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnBatchDetails" (
    "SalesReturnBtchDtlsId" smallint NOT NULL,
    "SalesReturnItemsId" smallint NOT NULL,
    "Name" character varying(1000),
    "SerialNumber" integer,
    "ExpiryDate" date,
    "ManufacturingDate" date,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesReturnBatchDetails" OWNER TO "10083";

--
-- TOC entry 1967 (class 1259 OID 185524)
-- Name: SalesReturnBatchDetails_SalesReturnBtchDtlsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnBatchDetails_SalesReturnBtchDtlsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnBatchDetails_SalesReturnBtchDtlsId_seq" OWNER TO "10083";

--
-- TOC entry 11274 (class 0 OID 0)
-- Dependencies: 1967
-- Name: SalesReturnBatchDetails_SalesReturnBtchDtlsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnBatchDetails_SalesReturnBtchDtlsId_seq" OWNED BY "10083_10833"."SalesReturnBatchDetails"."SalesReturnBtchDtlsId";


--
-- TOC entry 1952 (class 1259 OID 185453)
-- Name: SalesReturnBillTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnBillTo" (
    "SalesReturnBillToId" smallint NOT NULL,
    "SaleReturnId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2) NOT NULL,
    "StateName" character varying(100) NOT NULL,
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2) NOT NULL,
    "CountryName" character varying(100) NOT NULL,
    "POSCode" character varying(2) NOT NULL,
    "POSName" character varying(100) NOT NULL,
    "GSTIN" character varying(15),
    "Email" character varying(320),
    "MobileNumber" character varying(20),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "PAN" character varying(10),
    "GSTCategory" smallint DEFAULT 0 NOT NULL
);


ALTER TABLE "10083_10833"."SalesReturnBillTo" OWNER TO "10083";

--
-- TOC entry 1951 (class 1259 OID 185452)
-- Name: SalesReturnBillTo_SalesReturnBillToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnBillTo_SalesReturnBillToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnBillTo_SalesReturnBillToId_seq" OWNER TO "10083";

--
-- TOC entry 11275 (class 0 OID 0)
-- Dependencies: 1951
-- Name: SalesReturnBillTo_SalesReturnBillToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnBillTo_SalesReturnBillToId_seq" OWNED BY "10083_10833"."SalesReturnBillTo"."SalesReturnBillToId";


--
-- TOC entry 2136 (class 1259 OID 187482)
-- Name: SalesReturnContainerList; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnContainerList" (
    "SalesReturnContainerListId" integer NOT NULL,
    "SaleReturnId" integer NOT NULL,
    "ContainerNumber" character varying(15),
    "LinerSealNumber" character varying(15),
    "OTSNumber" character varying(15),
    "Quantity" character varying(15),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesReturnContainerList" OWNER TO "10083";

--
-- TOC entry 2135 (class 1259 OID 187481)
-- Name: SalesReturnContainerList_SalesReturnContainerListId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnContainerList_SalesReturnContainerListId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnContainerList_SalesReturnContainerListId_seq" OWNER TO "10083";

--
-- TOC entry 11276 (class 0 OID 0)
-- Dependencies: 2135
-- Name: SalesReturnContainerList_SalesReturnContainerListId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnContainerList_SalesReturnContainerListId_seq" OWNED BY "10083_10833"."SalesReturnContainerList"."SalesReturnContainerListId";


--
-- TOC entry 1966 (class 1259 OID 185516)
-- Name: SalesReturnEwayBillsDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnEwayBillsDetails" (
    "SalesReturnEwayBillsDetailsId" integer NOT NULL,
    "SaleReturnId" integer NOT NULL,
    "GSTIN" character varying(15),
    "TransporterName" character varying(100),
    "TransportModeCode" integer,
    "TransportModeName" character varying(5),
    "Distance" character varying(4),
    "TransportDocumentNumber" character varying(15),
    "TransportDocumentDate" date,
    "VehicleNumber" character varying(20),
    "VehicleTypeCode" character varying(3),
    "VehicleTypeName" character varying(50),
    "EwayBillNumber" character varying(50),
    "EwayBillDate" timestamp without time zone,
    "DispatchFrom" character varying(1000),
    "ShipTo" character varying(1000),
    "ValidUpTo" timestamp without time zone,
    "EwayStatus" character varying(10),
    "Alerts" text,
    "Information" text,
    "Errors" text,
    "CancelDate" timestamp without time zone,
    "CancelReason" character varying(1000),
    "CancelRemark" text,
    "UpdateReason" character varying(1000),
    "UpdateRemark" text,
    "ExtendReason" character varying(1000),
    "ExtendRemark" text,
    "ExtendOn" timestamp without time zone,
    "VehicleUpdatedOn" timestamp without time zone,
    "TransUpdatedOn" timestamp without time zone,
    "TransportersId" smallint,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesReturnEwayBillsDetails" OWNER TO "10083";

--
-- TOC entry 1965 (class 1259 OID 185515)
-- Name: SalesReturnEwayBillsDetails_SalesReturnEwayBillsDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnEwayBillsDetails_SalesReturnEwayBillsDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnEwayBillsDetails_SalesReturnEwayBillsDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11277 (class 0 OID 0)
-- Dependencies: 1965
-- Name: SalesReturnEwayBillsDetails_SalesReturnEwayBillsDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnEwayBillsDetails_SalesReturnEwayBillsDetailsId_seq" OWNED BY "10083_10833"."SalesReturnEwayBillsDetails"."SalesReturnEwayBillsDetailsId";


--
-- TOC entry 2161 (class 1259 OID 188306)
-- Name: SalesReturnHSNSummary; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnHSNSummary" (
    "SaleReturnHSNId" integer NOT NULL,
    "SaleReturnId" integer NOT NULL,
    "ItemName" character varying(500),
    "HSN" character varying(500),
    "TaxableValue" numeric,
    "IGST" numeric,
    "CGST" numeric,
    "SGST" numeric,
    "Cess" numeric,
    "TaxRate" numeric,
    "TotalTax" numeric,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL
);


ALTER TABLE "10083_10833"."SalesReturnHSNSummary" OWNER TO "10083";

--
-- TOC entry 2160 (class 1259 OID 188305)
-- Name: SalesReturnHSNSummary_SaleReturnHSNId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnHSNSummary_SaleReturnHSNId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnHSNSummary_SaleReturnHSNId_seq" OWNER TO "10083";

--
-- TOC entry 11278 (class 0 OID 0)
-- Dependencies: 2160
-- Name: SalesReturnHSNSummary_SaleReturnHSNId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnHSNSummary_SaleReturnHSNId_seq" OWNED BY "10083_10833"."SalesReturnHSNSummary"."SaleReturnHSNId";


--
-- TOC entry 1962 (class 1259 OID 185498)
-- Name: SalesReturnImportDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnImportDetails" (
    "SalesReturnImportDetailsId" smallint NOT NULL,
    "SaleReturnId" smallint NOT NULL,
    "ShippingBillNumber" character varying(20),
    "ShippingBillDate" date,
    "PortCode" character varying(6),
    "PortName" character varying(25),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "RefundClaim" boolean,
    "ImportDuty" numeric,
    "DispatchThrough" character varying(1000),
    "VesselFlightNo" character varying(1000),
    "DestinationPortCode" character varying(6),
    "DestinationPortName" character varying(25),
    "Destination" character varying(100),
    "LUTNumber" character varying(100),
    "PlaceOfReceiptByShipper" character varying(100),
    "PortOfLoadingCode" character varying(10),
    "PortOfLoadingName" character varying(100),
    "PortOfDischargeCode" character varying(10),
    "PortOfDischargeName" character varying(100),
    "LUTMasterId" smallint,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesReturnImportDetails" OWNER TO "10083";

--
-- TOC entry 1961 (class 1259 OID 185497)
-- Name: SalesReturnImportDetails_SalesReturnImportDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnImportDetails_SalesReturnImportDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnImportDetails_SalesReturnImportDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11279 (class 0 OID 0)
-- Dependencies: 1961
-- Name: SalesReturnImportDetails_SalesReturnImportDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnImportDetails_SalesReturnImportDetailsId_seq" OWNED BY "10083_10833"."SalesReturnImportDetails"."SalesReturnImportDetailsId";


--
-- TOC entry 1972 (class 1259 OID 185547)
-- Name: SalesReturnItemWareHouse; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnItemWareHouse" (
    "SRItemWHId" smallint NOT NULL,
    "SalesReturnItemsId" smallint NOT NULL,
    "WareHouseId" smallint NOT NULL,
    "Quantity" numeric,
    "Rate" numeric,
    "Total" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesReturnItemWareHouse" OWNER TO "10083";

--
-- TOC entry 1971 (class 1259 OID 185546)
-- Name: SalesReturnItemWareHouse_SRItemWHId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnItemWareHouse_SRItemWHId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnItemWareHouse_SRItemWHId_seq" OWNER TO "10083";

--
-- TOC entry 11280 (class 0 OID 0)
-- Dependencies: 1971
-- Name: SalesReturnItemWareHouse_SRItemWHId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnItemWareHouse_SRItemWHId_seq" OWNED BY "10083_10833"."SalesReturnItemWareHouse"."SRItemWHId";


--
-- TOC entry 1960 (class 1259 OID 185489)
-- Name: SalesReturnItems; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnItems" (
    "SalesReturnItemsId" integer NOT NULL,
    "SaleReturnId" integer NOT NULL,
    "StockItemId" bigint NOT NULL,
    "ItemName" character varying(500) NOT NULL,
    "SerialNumber" smallint,
    "ItemCode" character varying(20),
    "ItemDescription" character varying(500),
    "HSNSAC" character varying(8),
    "BarCode" character varying(500),
    "Quantity" numeric,
    "FreeQuantity" numeric,
    "UnitPrice" numeric NOT NULL,
    "SubTotal" numeric NOT NULL,
    "Discount" numeric NOT NULL,
    "OtherCharges" numeric NOT NULL,
    "TaxableValue" numeric NOT NULL,
    "GstRate" numeric,
    "CessRate" numeric,
    "StateCessRate" numeric,
    "IGST" numeric NOT NULL,
    "CGST" numeric NOT NULL,
    "SGST" numeric NOT NULL,
    "Cess" numeric,
    "StateCess" numeric,
    "CessNonAdvolRate" numeric,
    "CessNonAdvolUnit" numeric,
    "StateCessNonAdvolRate" numeric,
    "CessNonAdvol" numeric,
    "StateCessNonAdvol" numeric,
    "TotalItemValue" numeric NOT NULL,
    "MarksContainerNo" character varying(20),
    "NumberOfPackages" integer,
    "DiscountRate" numeric,
    "Taxability" integer NOT NULL,
    "ForeignCurrencyPrice" numeric,
    "UOMCode" character varying(3),
    "PreTaxValue" numeric,
    "TypeCode" integer,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "PartNumber" character varying(20),
    "ReverseChargeApplicable" integer,
    "EligibleforInputCredit" integer,
    "AppropriateValue" numeric DEFAULT 0 NOT NULL,
    "DiscountBeforeTax" numeric DEFAULT 0,
    "UnitName" character varying(100)
);


ALTER TABLE "10083_10833"."SalesReturnItems" OWNER TO "10083";

--
-- TOC entry 1959 (class 1259 OID 185488)
-- Name: SalesReturnItems_SalesReturnItemsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnItems_SalesReturnItemsId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnItems_SalesReturnItemsId_seq" OWNER TO "10083";

--
-- TOC entry 11281 (class 0 OID 0)
-- Dependencies: 1959
-- Name: SalesReturnItems_SalesReturnItemsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnItems_SalesReturnItemsId_seq" OWNED BY "10083_10833"."SalesReturnItems"."SalesReturnItemsId";


--
-- TOC entry 2165 (class 1259 OID 188579)
-- Name: SalesReturnMain; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnMain" (
    "SaleReturnId" integer NOT NULL,
    "TemplateId" smallint NOT NULL,
    "CustomerId" smallint NOT NULL,
    "Number" public.citext NOT NULL,
    "Date" date NOT NULL,
    "FinancialYear" integer NOT NULL,
    "ReverseCharge" boolean,
    "TermAndConditionId" smallint,
    "TermAndConditionText" text,
    "EcomGSTIN" character varying(15),
    "OriginalInvoiceDate" date,
    "OriginalInvoiceNo" character varying(20),
    "DocumentStatus" smallint,
    "SalesPersonId" smallint,
    "SalesPersonName" character varying(100),
    "CurrencyId" smallint,
    "ExchangeRate" numeric,
    "Title" character varying(200),
    "InvoiceRemark" character varying(500),
    "IsAutoNumber" boolean,
    "InvoiceType" character varying(10),
    "IsIntraState" boolean,
    "IsRegisteredSupply" boolean,
    "BillToMailingName" character varying(1000),
    "BillToAddress" character varying(1000),
    "BillToCity" character varying(100),
    "BillToStateCode" character varying(2) NOT NULL,
    "BillToStateName" character varying(100) NOT NULL,
    "BillToPinZipCode" character varying(10),
    "BillToCountryCode" character varying(2) NOT NULL,
    "BillToCountryName" character varying(100) NOT NULL,
    "BillToPOSCode" character varying(2) NOT NULL,
    "BillToPOSName" character varying(100) NOT NULL,
    "BillToGSTIN" character varying(15),
    "BillToEmail" character varying(320),
    "BillToMobileNumber" character varying(20),
    "BillToPAN" character varying(10),
    "BillToGSTCategory" smallint NOT NULL,
    "ShipToMailingName" character varying(1000),
    "ShipToAddress" character varying(1000),
    "ShipToCity" character varying(100),
    "ShipToStateCode" character varying(2),
    "ShipToStateName" character varying(100),
    "ShipToPinZipCode" character varying(10),
    "ShipToCountryCode" character varying(2),
    "ShipToCountryName" character varying(100),
    "ShipToGSTIN" character varying(15),
    "ShipToContactPersonEmail" character varying(320),
    "ShipToContactPersonName" character varying(500),
    "ShipToContactPersonMobile" character varying(20),
    "ShipToPINCode" character varying(10),
    "ShippingBillNumber" character varying(20),
    "ShippingBillDate" date,
    "PortCode" character varying(6),
    "PortName" character varying(25),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "RefundClaim" boolean,
    "ImportDuty" numeric,
    "DispatchThrough" character varying(1000),
    "VesselFlightNo" character varying(1000),
    "DestinationPortCode" character varying(6),
    "DestinationPortName" character varying(25),
    "Destination" character varying(100),
    "LUTMasterId" smallint,
    "LUTNumber" character varying(100),
    "PlaceOfReceiptByShipper" character varying(100),
    "PortOfLoadingCode" character varying(10),
    "PortOfLoadingName" character varying(100),
    "PortOfDischargeCode" character varying(10),
    "PortOfDischargeName" character varying(100),
    "AssessableValue" numeric,
    "IGSTValue" numeric,
    "CGSTValue" numeric,
    "SGSTValue" numeric,
    "CessValue" numeric,
    "StateCessValue" numeric,
    "TotalInvoiceValue" numeric,
    "RoundOffAmount" numeric,
    "TotalInvValForeignCurrency" numeric,
    "Discount" numeric,
    "DiscountBeforeTax" numeric,
    "OtherCharge" numeric,
    "OtherChargeTaxable" numeric,
    "SubTotal" numeric NOT NULL,
    "InvoiceValueWithoutTCS" numeric,
    "TCSAmount" numeric,
    "TCSRate" numeric,
    "TotalAppropriateValue" numeric,
    "ModeTermsOfPayment" character varying(1000),
    "TermsOfDelivery" character varying(1000),
    "ReceiptMailingName" character varying(1000),
    "ReceiptAddress" character varying(1000),
    "ReceiptCity" character varying(100),
    "ReceiptStateCode" character varying(2),
    "ReceiptStateName" character varying(100),
    "ReceiptPinZipCode" character varying(10),
    "ReceiptCountryCode" character varying(2),
    "ReceiptCountryName" character varying(100),
    "ReceiptDocNo" character varying(20),
    "ReceiptedThrough" character varying(1000),
    "ReceiptDestination" character varying(200),
    "CarrierNameAgent" character varying(100),
    "MotorVehicleNo" character varying(20),
    "BillOfLandingLrRrNo" character varying(20),
    "ReceiptDate" date,
    "CreatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP(3) NOT NULL,
    "UpdatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP(3) NOT NULL,
    "Host" integer,
    "Irn" character varying(500),
    "AckNo" character varying(50),
    "AckDate" timestamp without time zone,
    "CancelIrnDate" timestamp without time zone,
    "IrnStatus" character varying(10),
    "ErrorMessage" text
);


ALTER TABLE "10083_10833"."SalesReturnMain" OWNER TO "10083";

--
-- TOC entry 2164 (class 1259 OID 188578)
-- Name: SalesReturnMain_SaleReturnId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnMain_SaleReturnId_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnMain_SaleReturnId_seq" OWNER TO "10083";

--
-- TOC entry 11282 (class 0 OID 0)
-- Dependencies: 2164
-- Name: SalesReturnMain_SaleReturnId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnMain_SaleReturnId_seq" OWNED BY "10083_10833"."SalesReturnMain"."SaleReturnId";


--
-- TOC entry 1970 (class 1259 OID 185534)
-- Name: SalesReturnOtherCharges; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnOtherCharges" (
    "SalesReturnOtherChargeId" integer NOT NULL,
    "SaleReturnId" integer NOT NULL,
    "OtherChargeId" smallint NOT NULL,
    "GSTRateCode" numeric,
    "GSTRateName" numeric,
    "TaxableValue" numeric,
    "CGST" numeric,
    "SGST" numeric,
    "IGST" numeric,
    "HSN" character varying(8),
    "TaxableCode" integer DEFAULT 0,
    "TaxableName" character varying(3) DEFAULT 'No'::character varying,
    "AppropriateCode" integer DEFAULT 0,
    "AppropriateName" character varying(3) DEFAULT 'No'::character varying,
    "Name" text,
    "ForeignCurrencyPrice" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "DiscountBeforeTax" numeric DEFAULT 0,
    "AppropriateValue" numeric DEFAULT 0 NOT NULL,
    "PreTaxValue" numeric DEFAULT 0 NOT NULL,
    "TotalItemValue" numeric DEFAULT 0
);


ALTER TABLE "10083_10833"."SalesReturnOtherCharges" OWNER TO "10083";

--
-- TOC entry 1969 (class 1259 OID 185533)
-- Name: SalesReturnOtherCharges_SalesReturnOtherChargeId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnOtherCharges_SalesReturnOtherChargeId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnOtherCharges_SalesReturnOtherChargeId_seq" OWNER TO "10083";

--
-- TOC entry 11283 (class 0 OID 0)
-- Dependencies: 1969
-- Name: SalesReturnOtherCharges_SalesReturnOtherChargeId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnOtherCharges_SalesReturnOtherChargeId_seq" OWNED BY "10083_10833"."SalesReturnOtherCharges"."SalesReturnOtherChargeId";


--
-- TOC entry 1956 (class 1259 OID 185471)
-- Name: SalesReturnOtherDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnOtherDetails" (
    "SalesReturnOtherDetailsId" smallint NOT NULL,
    "SaleReturnId" smallint NOT NULL,
    "ModeTermsOfPayment" character varying(1000),
    "TermsOfDelivery" character varying(1000),
    "TermAndCondition" character varying(1000),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesReturnOtherDetails" OWNER TO "10083";

--
-- TOC entry 1955 (class 1259 OID 185470)
-- Name: SalesReturnOtherDetails_SalesReturnOtherDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnOtherDetails_SalesReturnOtherDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnOtherDetails_SalesReturnOtherDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11284 (class 0 OID 0)
-- Dependencies: 1955
-- Name: SalesReturnOtherDetails_SalesReturnOtherDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnOtherDetails_SalesReturnOtherDetailsId_seq" OWNED BY "10083_10833"."SalesReturnOtherDetails"."SalesReturnOtherDetailsId";


--
-- TOC entry 2138 (class 1259 OID 187489)
-- Name: SalesReturnPackingList; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnPackingList" (
    "SalesReturnPackingListId" integer NOT NULL,
    "SaleReturnId" integer NOT NULL,
    "NumberOfPackageUOM" character varying(100),
    "NetWeightOfEachPackageUOM" character varying(100),
    "TareWeightOfEachPackageUOM" character varying(100),
    "TareWeightOfEachPalletUOM" character varying(100),
    "TotalNumberOfPalletsUOM" character varying(100),
    "TotalGrossWeightUOM" character varying(100),
    "TotalNetWeightUOM" character varying(100),
    "NetWeightOfEachPackage" numeric,
    "NumberOfPackage" numeric,
    "TareWeightOfEachPackage" numeric,
    "TareWeightOfEachPallet" numeric,
    "TotalGrossWeight" numeric,
    "TotalNetWeight" numeric,
    "TotalNumberOfPallets" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesReturnPackingList" OWNER TO "10083";

--
-- TOC entry 2137 (class 1259 OID 187488)
-- Name: SalesReturnPackingList_SalesReturnPackingListId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnPackingList_SalesReturnPackingListId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnPackingList_SalesReturnPackingListId_seq" OWNER TO "10083";

--
-- TOC entry 11285 (class 0 OID 0)
-- Dependencies: 2137
-- Name: SalesReturnPackingList_SalesReturnPackingListId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnPackingList_SalesReturnPackingListId_seq" OWNED BY "10083_10833"."SalesReturnPackingList"."SalesReturnPackingListId";


--
-- TOC entry 1958 (class 1259 OID 185480)
-- Name: SalesReturnReceiptDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnReceiptDetails" (
    "SalesReturnReceiptDetailsId" smallint NOT NULL,
    "SaleReturnId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2),
    "StateName" character varying(100),
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "ReceiptDocNo" character varying(20),
    "ReceiptThrough" character varying(40),
    "Destination" character varying(200),
    "CarrierNameAgent" character varying(100),
    "BillOfLandingLrRrNo" character varying(20),
    "Date" date,
    "MotorVehicleNo" character varying(20),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SalesReturnReceiptDetails" OWNER TO "10083";

--
-- TOC entry 1957 (class 1259 OID 185479)
-- Name: SalesReturnReceiptDetails_SalesReturnReceiptDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnReceiptDetails_SalesReturnReceiptDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnReceiptDetails_SalesReturnReceiptDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11286 (class 0 OID 0)
-- Dependencies: 1957
-- Name: SalesReturnReceiptDetails_SalesReturnReceiptDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnReceiptDetails_SalesReturnReceiptDetailsId_seq" OWNED BY "10083_10833"."SalesReturnReceiptDetails"."SalesReturnReceiptDetailsId";


--
-- TOC entry 1954 (class 1259 OID 185462)
-- Name: SalesReturnShipTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnShipTo" (
    "SalesReturnShipToId" smallint NOT NULL,
    "SaleReturnId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2),
    "StateName" character varying(100),
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "GSTIN" character varying(15),
    "ContactPersonEmail" character varying(320),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "ContactPersonName" character varying(500),
    "ContactPersonMobile" character varying(20),
    "Pincode" character varying(10)
);


ALTER TABLE "10083_10833"."SalesReturnShipTo" OWNER TO "10083";

--
-- TOC entry 1953 (class 1259 OID 185461)
-- Name: SalesReturnShipTo_SalesReturnShipToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnShipTo_SalesReturnShipToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnShipTo_SalesReturnShipToId_seq" OWNER TO "10083";

--
-- TOC entry 11287 (class 0 OID 0)
-- Dependencies: 1953
-- Name: SalesReturnShipTo_SalesReturnShipToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnShipTo_SalesReturnShipToId_seq" OWNED BY "10083_10833"."SalesReturnShipTo"."SalesReturnShipToId";


--
-- TOC entry 1964 (class 1259 OID 185507)
-- Name: SalesReturnValueDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesReturnValueDetails" (
    "SalesReturnValueDetailsId" smallint NOT NULL,
    "SaleReturnId" smallint NOT NULL,
    "AssessableValue" numeric,
    "IGSTValue" numeric,
    "CGSTValue" numeric,
    "SGSTValue" numeric,
    "CessValue" numeric,
    "StateCessValue" numeric,
    "TotalInvoiceValue" numeric,
    "RoundOffAmount" numeric,
    "TotalInvValForeignCurrency" numeric,
    "Discount" numeric,
    "OtherCharge" numeric,
    "OtherChargeTaxable" numeric,
    "TCSRate" numeric,
    "InvoiceValueWithoutTCS" numeric,
    "TCSAmount" numeric,
    "SubTotal" numeric NOT NULL,
    "DiscountBeforeTax" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "TotalAppropriateValue" numeric
);


ALTER TABLE "10083_10833"."SalesReturnValueDetails" OWNER TO "10083";

--
-- TOC entry 1963 (class 1259 OID 185506)
-- Name: SalesReturnValueDetails_SalesReturnValueDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturnValueDetails_SalesReturnValueDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturnValueDetails_SalesReturnValueDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11288 (class 0 OID 0)
-- Dependencies: 1963
-- Name: SalesReturnValueDetails_SalesReturnValueDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturnValueDetails_SalesReturnValueDetailsId_seq" OWNED BY "10083_10833"."SalesReturnValueDetails"."SalesReturnValueDetailsId";


--
-- TOC entry 1949 (class 1259 OID 185441)
-- Name: SalesReturn_SaleReturnId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesReturn_SaleReturnId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesReturn_SaleReturnId_seq" OWNER TO "10083";

--
-- TOC entry 11289 (class 0 OID 0)
-- Dependencies: 1949
-- Name: SalesReturn_SaleReturnId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesReturn_SaleReturnId_seq" OWNED BY "10083_10833"."SalesReturn"."SaleReturnId";


--
-- TOC entry 1870 (class 1259 OID 185076)
-- Name: SalesShipTo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesShipTo" (
    "SalesShipToId" smallint NOT NULL,
    "SaleId" smallint NOT NULL,
    "MailingName" character varying(1000),
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(2),
    "StateName" character varying(100),
    "PinZipCode" character varying(10),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "GSTIN" character varying(15),
    "ContactPersonEmail" character varying(320),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "ContactPersonName" character varying(500),
    "ContactPersonMobile" character varying(20),
    "Pincode" character varying(10)
);


ALTER TABLE "10083_10833"."SalesShipTo" OWNER TO "10083";

--
-- TOC entry 1869 (class 1259 OID 185075)
-- Name: SalesShipTo_SalesShipToId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesShipTo_SalesShipToId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesShipTo_SalesShipToId_seq" OWNER TO "10083";

--
-- TOC entry 11290 (class 0 OID 0)
-- Dependencies: 1869
-- Name: SalesShipTo_SalesShipToId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesShipTo_SalesShipToId_seq" OWNED BY "10083_10833"."SalesShipTo"."SalesShipToId";


--
-- TOC entry 1882 (class 1259 OID 185134)
-- Name: SalesValueDetails; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SalesValueDetails" (
    "SalesValueDetailsId" smallint NOT NULL,
    "SaleId" smallint NOT NULL,
    "AssessableValue" numeric,
    "IGSTValue" numeric,
    "CGSTValue" numeric,
    "SGSTValue" numeric,
    "CessValue" numeric,
    "StateCessValue" numeric,
    "TotalInvoiceValue" numeric,
    "RoundOffAmount" numeric,
    "TotalInvValForeignCurrency" numeric,
    "Discount" numeric,
    "OtherCharge" numeric,
    "OtherChargeTaxable" numeric,
    "TCSRate" numeric,
    "InvoiceValueWithoutTCS" numeric,
    "TCSAmount" numeric,
    "SubTotal" numeric NOT NULL,
    "DiscountBeforeTax" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now(),
    "TotalAppropriateValue" numeric
);


ALTER TABLE "10083_10833"."SalesValueDetails" OWNER TO "10083";

--
-- TOC entry 1881 (class 1259 OID 185133)
-- Name: SalesValueDetails_SalesValueDetailsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SalesValueDetails_SalesValueDetailsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SalesValueDetails_SalesValueDetailsId_seq" OWNER TO "10083";

--
-- TOC entry 11291 (class 0 OID 0)
-- Dependencies: 1881
-- Name: SalesValueDetails_SalesValueDetailsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SalesValueDetails_SalesValueDetailsId_seq" OWNED BY "10083_10833"."SalesValueDetails"."SalesValueDetailsId";


--
-- TOC entry 1865 (class 1259 OID 185055)
-- Name: Sales_SaleId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Sales_SaleId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Sales_SaleId_seq" OWNER TO "10083";

--
-- TOC entry 11292 (class 0 OID 0)
-- Dependencies: 1865
-- Name: Sales_SaleId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."Sales_SaleId_seq" OWNED BY "10083_10833"."Sales"."SaleId";


--
-- TOC entry 1838 (class 1259 OID 184924)
-- Name: Shipping; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."Shipping" (
    "ShippingId" smallint NOT NULL,
    "TradeName" character varying(1000) NOT NULL,
    "LegalName" character varying(1000) NOT NULL,
    "GSTIN" character varying(15),
    "Email" character varying(320),
    "MobileNumber" character varying(20),
    "ContactPersonName" character varying(500),
    "ContactPersonMobile" character varying(20),
    "Address1" character varying(1000) NOT NULL,
    "Address2" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(3),
    "StateName" character varying(100),
    "Pincode" character varying(10),
    "CountryCode" character varying(3),
    "CountryName" character varying(100),
    "ActiveStatus" boolean DEFAULT true,
    "Code" character varying(6),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."Shipping" OWNER TO "10083";

--
-- TOC entry 1837 (class 1259 OID 184923)
-- Name: Shipping_ShippingId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Shipping_ShippingId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Shipping_ShippingId_seq" OWNER TO "10083";

--
-- TOC entry 11293 (class 0 OID 0)
-- Dependencies: 1837
-- Name: Shipping_ShippingId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."Shipping_ShippingId_seq" OWNED BY "10083_10833"."Shipping"."ShippingId";


--
-- TOC entry 1834 (class 1259 OID 184899)
-- Name: SimpleUnit; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SimpleUnit" (
    "SimpleUnitId" smallint NOT NULL,
    "Symbol" character varying(100) NOT NULL,
    "Name" character varying(1000),
    "UQCCode" public.citext NOT NULL,
    "UQCName" character varying(100) NOT NULL,
    "DecimalPlace" integer NOT NULL,
    "ActiveStatus" boolean DEFAULT true,
    "Code" character varying(6),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SimpleUnit" OWNER TO "10083";

--
-- TOC entry 1833 (class 1259 OID 184898)
-- Name: SimpleUnit_SimpleUnitId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SimpleUnit_SimpleUnitId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SimpleUnit_SimpleUnitId_seq" OWNER TO "10083";

--
-- TOC entry 11294 (class 0 OID 0)
-- Dependencies: 1833
-- Name: SimpleUnit_SimpleUnitId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SimpleUnit_SimpleUnitId_seq" OWNED BY "10083_10833"."SimpleUnit"."SimpleUnitId";


--
-- TOC entry 1828 (class 1259 OID 184868)
-- Name: StockCategory; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."StockCategory" (
    "StockCategoryId" smallint NOT NULL,
    "ParentId" smallint,
    "Name" character varying(1000) NOT NULL,
    "ActiveStatus" boolean DEFAULT true,
    "IsPrimary" boolean DEFAULT false,
    "Code" character varying(6),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."StockCategory" OWNER TO "10083";

--
-- TOC entry 1827 (class 1259 OID 184867)
-- Name: StockCategory_StockCategoryId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."StockCategory_StockCategoryId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."StockCategory_StockCategoryId_seq" OWNER TO "10083";

--
-- TOC entry 11295 (class 0 OID 0)
-- Dependencies: 1827
-- Name: StockCategory_StockCategoryId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."StockCategory_StockCategoryId_seq" OWNED BY "10083_10833"."StockCategory"."StockCategoryId";


--
-- TOC entry 1822 (class 1259 OID 184837)
-- Name: StockGroup; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."StockGroup" (
    "StockGroupId" smallint NOT NULL,
    "ParentGroupId" smallint,
    "Name" public.citext NOT NULL,
    "ActiveStatus" boolean DEFAULT true,
    "IsPrimary" boolean DEFAULT false,
    "Code" public.citext,
    "OverrideGroupGSTInfo" boolean DEFAULT false NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."StockGroup" OWNER TO "10083";

--
-- TOC entry 1832 (class 1259 OID 184890)
-- Name: StockGroupGSTInfo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."StockGroupGSTInfo" (
    "StockGroupGSTInfoId" smallint NOT NULL,
    "StockGroupId" smallint NOT NULL,
    "ApplicableFrom" date,
    "HSN" character varying(8),
    "IsNonGST" boolean,
    "TaxabilityCode" integer NOT NULL,
    "TaxabilityName" character varying(100) NOT NULL,
    "IsReverseChargeApplicableCode" integer,
    "IsReverseChargeApplicableName" character varying(3),
    "IsIneligibleForInputCreditCode" integer,
    "IsIneligibleForInputCreditName" character varying(3),
    "IGSTRateCode" numeric,
    "IGSTRateName" character varying(10),
    "CGSTRate" numeric,
    "SGSTRate" numeric,
    "CessRate" numeric,
    "StateCessRate" numeric,
    "CessNonAdvolRate" numeric,
    "CessNonAdvolUnit" numeric,
    "StateCessNonAdvolRate" numeric,
    "StateCessNonAdvolUnit" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."StockGroupGSTInfo" OWNER TO "10083";

--
-- TOC entry 1831 (class 1259 OID 184889)
-- Name: StockGroupGSTInfo_StockGroupGSTInfoId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."StockGroupGSTInfo_StockGroupGSTInfoId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."StockGroupGSTInfo_StockGroupGSTInfoId_seq" OWNER TO "10083";

--
-- TOC entry 11296 (class 0 OID 0)
-- Dependencies: 1831
-- Name: StockGroupGSTInfo_StockGroupGSTInfoId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."StockGroupGSTInfo_StockGroupGSTInfoId_seq" OWNED BY "10083_10833"."StockGroupGSTInfo"."StockGroupGSTInfoId";


--
-- TOC entry 1821 (class 1259 OID 184836)
-- Name: StockGroup_StockGroupId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."StockGroup_StockGroupId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."StockGroup_StockGroupId_seq" OWNER TO "10083";

--
-- TOC entry 11297 (class 0 OID 0)
-- Dependencies: 1821
-- Name: StockGroup_StockGroupId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."StockGroup_StockGroupId_seq" OWNED BY "10083_10833"."StockGroup"."StockGroupId";


--
-- TOC entry 1820 (class 1259 OID 184827)
-- Name: StockItem; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."StockItem" (
    "StockItemId" bigint NOT NULL,
    "StockGroupId" smallint NOT NULL,
    "StockCategoryId" smallint NOT NULL,
    "TypeCode" integer NOT NULL,
    "TypeName" character varying(10) NOT NULL,
    "Name" public.citext NOT NULL,
    "Code" character varying(20),
    "UOMId" bigint,
    "ActiveStatus" boolean DEFAULT true,
    "Logo" text,
    "MaintainStock" boolean,
    "ReorderLevel" bigint,
    "SerialNumber" character varying(20),
    "PartNumber" character varying(20),
    "Notes" character varying(1000),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."StockItem" OWNER TO "10083";

--
-- TOC entry 2076 (class 1259 OID 186036)
-- Name: StockItemBalance; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."StockItemBalance" (
    "StockItemBalanceId" smallint NOT NULL,
    "StockItemId" bigint NOT NULL,
    "StockGroupId" smallint,
    "WareHouseId" smallint,
    "In" numeric NOT NULL,
    "Out" numeric NOT NULL,
    "Balance" numeric GENERATED ALWAYS AS (("In" - "Out")) STORED,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."StockItemBalance" OWNER TO "10083";

--
-- TOC entry 2075 (class 1259 OID 186035)
-- Name: StockItemBalance_StockItemBalanceId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."StockItemBalance_StockItemBalanceId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."StockItemBalance_StockItemBalanceId_seq" OWNER TO "10083";

--
-- TOC entry 11298 (class 0 OID 0)
-- Dependencies: 2075
-- Name: StockItemBalance_StockItemBalanceId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."StockItemBalance_StockItemBalanceId_seq" OWNED BY "10083_10833"."StockItemBalance"."StockItemBalanceId";


--
-- TOC entry 1824 (class 1259 OID 184849)
-- Name: StockItemDescription; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."StockItemDescription" (
    "StockItemDescriptionId" bigint NOT NULL,
    "StockItemId" bigint NOT NULL,
    "DescriptionCode" character varying(100),
    "Description" character varying(1000) NOT NULL,
    "IsDefault" boolean DEFAULT false,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."StockItemDescription" OWNER TO "10083";

--
-- TOC entry 1823 (class 1259 OID 184848)
-- Name: StockItemDescription_StockItemDescriptionId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."StockItemDescription_StockItemDescriptionId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."StockItemDescription_StockItemDescriptionId_seq" OWNER TO "10083";

--
-- TOC entry 11299 (class 0 OID 0)
-- Dependencies: 1823
-- Name: StockItemDescription_StockItemDescriptionId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."StockItemDescription_StockItemDescriptionId_seq" OWNED BY "10083_10833"."StockItemDescription"."StockItemDescriptionId";


--
-- TOC entry 1830 (class 1259 OID 184881)
-- Name: StockItemGSTInfo; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."StockItemGSTInfo" (
    "StockItemGSTInfoId" bigint NOT NULL,
    "StockItemId" bigint NOT NULL,
    "ApplicableFrom" date,
    "HSN" character varying(8),
    "IsNonGST" boolean,
    "TaxabilityCode" integer NOT NULL,
    "TaxabilityName" character varying(100) NOT NULL,
    "ReverseChargeApplicableCode" integer,
    "ReverseChargeApplicableName" character varying(3),
    "EligibleForInputCreditCode" integer,
    "EligibleForInputCreditName" character varying(3),
    "IGSTRateCode" numeric,
    "IGSTRateName" character varying(10),
    "CGSTRate" numeric,
    "SGSTRate" numeric,
    "CessRate" numeric,
    "StateCessRate" numeric,
    "CessNonAdvolRate" numeric,
    "CessNonAdvolUnit" numeric,
    "StateCessNonAdvolRate" numeric,
    "StateCessNonAdvolUnit" numeric,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."StockItemGSTInfo" OWNER TO "10083";

--
-- TOC entry 1829 (class 1259 OID 184880)
-- Name: StockItemGSTInfo_StockItemGSTInfoId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."StockItemGSTInfo_StockItemGSTInfoId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."StockItemGSTInfo_StockItemGSTInfoId_seq" OWNER TO "10083";

--
-- TOC entry 11300 (class 0 OID 0)
-- Dependencies: 1829
-- Name: StockItemGSTInfo_StockItemGSTInfoId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."StockItemGSTInfo_StockItemGSTInfoId_seq" OWNED BY "10083_10833"."StockItemGSTInfo"."StockItemGSTInfoId";


--
-- TOC entry 1826 (class 1259 OID 184859)
-- Name: StockItemOpeningBalance; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."StockItemOpeningBalance" (
    "StockItemOpeningBalanceId" smallint NOT NULL,
    "StockItemId" smallint NOT NULL,
    "WareHouseId" smallint NOT NULL,
    "OpeningQuantity" numeric NOT NULL,
    "Rate" numeric NOT NULL,
    "Total" numeric NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."StockItemOpeningBalance" OWNER TO "10083";

--
-- TOC entry 1825 (class 1259 OID 184858)
-- Name: StockItemOpeningBalance_StockItemOpeningBalanceId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."StockItemOpeningBalance_StockItemOpeningBalanceId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."StockItemOpeningBalance_StockItemOpeningBalanceId_seq" OWNER TO "10083";

--
-- TOC entry 11301 (class 0 OID 0)
-- Dependencies: 1825
-- Name: StockItemOpeningBalance_StockItemOpeningBalanceId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."StockItemOpeningBalance_StockItemOpeningBalanceId_seq" OWNED BY "10083_10833"."StockItemOpeningBalance"."StockItemOpeningBalanceId";


--
-- TOC entry 1819 (class 1259 OID 184826)
-- Name: StockItem_StockItemId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."StockItem_StockItemId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."StockItem_StockItemId_seq" OWNER TO "10083";

--
-- TOC entry 11302 (class 0 OID 0)
-- Dependencies: 1819
-- Name: StockItem_StockItemId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."StockItem_StockItemId_seq" OWNED BY "10083_10833"."StockItem"."StockItemId";


--
-- TOC entry 1842 (class 1259 OID 184949)
-- Name: Supplier; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."Supplier" (
    "SupplierId" smallint NOT NULL,
    "SupplierGroupId" smallint NOT NULL,
    "TradeName" character varying(1000) NOT NULL,
    "LegalName" character varying(1000),
    "ChartOfAccountsId" bigint,
    "PAN" character varying(10),
    "GSTIN" character varying(15),
    "GSTCategoryCode" integer,
    "GSTCategoryName" character varying(30),
    "CurrencyId" smallint NOT NULL,
    "ActiveStatus" boolean DEFAULT true,
    "Code" character varying(6),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."Supplier" OWNER TO "10083";

--
-- TOC entry 1844 (class 1259 OID 184959)
-- Name: SupplierAddress; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SupplierAddress" (
    "SupplierAddressId" smallint NOT NULL,
    "SupplierId" smallint NOT NULL,
    "ContactPersonName" character varying(1000),
    "Designation" character varying(50),
    "Address" character varying(1000) NOT NULL,
    "City" character varying(100),
    "StateCode" character varying(2),
    "StateName" character varying(100),
    "Pincode" character varying(10),
    "CountryCode" character varying(2),
    "CountryName" character varying(100),
    "Location" character varying(1000),
    "Email" character varying(320),
    "MobileNumber" character varying(20),
    "PhoneNumber" character varying(20),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SupplierAddress" OWNER TO "10083";

--
-- TOC entry 1843 (class 1259 OID 184958)
-- Name: SupplierAddress_SupplierAddressId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SupplierAddress_SupplierAddressId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SupplierAddress_SupplierAddressId_seq" OWNER TO "10083";

--
-- TOC entry 11303 (class 0 OID 0)
-- Dependencies: 1843
-- Name: SupplierAddress_SupplierAddressId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SupplierAddress_SupplierAddressId_seq" OWNED BY "10083_10833"."SupplierAddress"."SupplierAddressId";


--
-- TOC entry 1840 (class 1259 OID 184936)
-- Name: SupplierGroup; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."SupplierGroup" (
    "SupplierGroupId" smallint NOT NULL,
    "ParentGroupId" smallint,
    "Name" character varying(1000) NOT NULL,
    "ActiveStatus" boolean DEFAULT true,
    "IsPrimary" boolean DEFAULT false,
    "Code" character varying(6),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."SupplierGroup" OWNER TO "10083";

--
-- TOC entry 1839 (class 1259 OID 184935)
-- Name: SupplierGroup_SupplierGroupId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."SupplierGroup_SupplierGroupId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."SupplierGroup_SupplierGroupId_seq" OWNER TO "10083";

--
-- TOC entry 11304 (class 0 OID 0)
-- Dependencies: 1839
-- Name: SupplierGroup_SupplierGroupId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."SupplierGroup_SupplierGroupId_seq" OWNED BY "10083_10833"."SupplierGroup"."SupplierGroupId";


--
-- TOC entry 1841 (class 1259 OID 184948)
-- Name: Supplier_SupplierId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Supplier_SupplierId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Supplier_SupplierId_seq" OWNER TO "10083";

--
-- TOC entry 11305 (class 0 OID 0)
-- Dependencies: 1841
-- Name: Supplier_SupplierId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."Supplier_SupplierId_seq" OWNED BY "10083_10833"."Supplier"."SupplierId";


--
-- TOC entry 2140 (class 1259 OID 187510)
-- Name: Template; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."Template" (
    "TemplateId" smallint NOT NULL,
    "Name" public.citext NOT NULL,
    "ShortName" character varying(50),
    "DocumentNumberingCode" integer NOT NULL,
    "DocumentNumberingName" character varying(30) NOT NULL,
    "ActiveStatus" boolean DEFAULT true,
    "DocumentType" integer,
    "OriginalDocument" boolean DEFAULT false,
    "Code" character varying(6),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."Template" OWNER TO "10083";

--
-- TOC entry 2142 (class 1259 OID 187521)
-- Name: TemplateSettings; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."TemplateSettings" (
    "TemplateSettingsId" smallint NOT NULL,
    "TemplateId" smallint NOT NULL,
    "Settings" jsonb DEFAULT 'false'::jsonb,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."TemplateSettings" OWNER TO "10083";

--
-- TOC entry 2141 (class 1259 OID 187520)
-- Name: TemplateSettings_TemplateSettingsId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."TemplateSettings_TemplateSettingsId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."TemplateSettings_TemplateSettingsId_seq" OWNER TO "10083";

--
-- TOC entry 11306 (class 0 OID 0)
-- Dependencies: 2141
-- Name: TemplateSettings_TemplateSettingsId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."TemplateSettings_TemplateSettingsId_seq" OWNED BY "10083_10833"."TemplateSettings"."TemplateSettingsId";


--
-- TOC entry 2181 (class 1259 OID 189285)
-- Name: Template_Purchase_Credit_Note_Seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Template_Purchase_Credit_Note_Seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Template_Purchase_Credit_Note_Seq" OWNER TO "10083";

--
-- TOC entry 2179 (class 1259 OID 189283)
-- Name: Template_Purchase_Return_Seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Template_Purchase_Return_Seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Template_Purchase_Return_Seq" OWNER TO "10083";

--
-- TOC entry 2178 (class 1259 OID 189282)
-- Name: Template_Purchase_Seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Template_Purchase_Seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Template_Purchase_Seq" OWNER TO "10083";

--
-- TOC entry 2182 (class 1259 OID 189286)
-- Name: Template_Quotation_Seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Template_Quotation_Seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Template_Quotation_Seq" OWNER TO "10083";

--
-- TOC entry 2180 (class 1259 OID 189284)
-- Name: Template_Sales_Debit_Note_Seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Template_Sales_Debit_Note_Seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Template_Sales_Debit_Note_Seq" OWNER TO "10083";

--
-- TOC entry 2177 (class 1259 OID 189281)
-- Name: Template_Sales_Return_Seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Template_Sales_Return_Seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Template_Sales_Return_Seq" OWNER TO "10083";

--
-- TOC entry 2176 (class 1259 OID 189280)
-- Name: Template_Sales_Seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Template_Sales_Seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Template_Sales_Seq" OWNER TO "10083";

--
-- TOC entry 2139 (class 1259 OID 187509)
-- Name: Template_TemplateId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Template_TemplateId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Template_TemplateId_seq" OWNER TO "10083";

--
-- TOC entry 11307 (class 0 OID 0)
-- Dependencies: 2139
-- Name: Template_TemplateId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."Template_TemplateId_seq" OWNED BY "10083_10833"."Template"."TemplateId";


--
-- TOC entry 1792 (class 1259 OID 184689)
-- Name: Tenant_Migrations; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."Tenant_Migrations" (
    name character varying(255) NOT NULL
);


ALTER TABLE "10083_10833"."Tenant_Migrations" OWNER TO "10083";

--
-- TOC entry 2168 (class 1259 OID 189268)
-- Name: Tenant_Seeders; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."Tenant_Seeders" (
    name character varying(255) NOT NULL
);


ALTER TABLE "10083_10833"."Tenant_Seeders" OWNER TO "10083";

--
-- TOC entry 1804 (class 1259 OID 184749)
-- Name: TermAndCondition; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."TermAndCondition" (
    "TermAndConditionId" smallint NOT NULL,
    "Title" public.citext NOT NULL,
    "AllowedInSelling" boolean,
    "AllowedInBuying" boolean,
    "TermAndCondition" text,
    "Code" public.citext,
    "ActiveStatus" boolean DEFAULT true,
    "IsDefault" boolean DEFAULT false,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."TermAndCondition" OWNER TO "10083";

--
-- TOC entry 1803 (class 1259 OID 184748)
-- Name: TermAndCondition_TermAndConditionId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."TermAndCondition_TermAndConditionId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."TermAndCondition_TermAndConditionId_seq" OWNER TO "10083";

--
-- TOC entry 11308 (class 0 OID 0)
-- Dependencies: 1803
-- Name: TermAndCondition_TermAndConditionId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."TermAndCondition_TermAndConditionId_seq" OWNED BY "10083_10833"."TermAndCondition"."TermAndConditionId";


--
-- TOC entry 1852 (class 1259 OID 184996)
-- Name: Transporters; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."Transporters" (
    "TransportersId" smallint NOT NULL,
    "GSTIN" public.citext NOT NULL,
    "Name" character varying(1000) NOT NULL,
    "ActiveStatus" boolean DEFAULT true,
    "Code" public.citext,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."Transporters" OWNER TO "10083";

--
-- TOC entry 1854 (class 1259 OID 185008)
-- Name: TransportersAddress; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."TransportersAddress" (
    "TransportersAddressId" smallint NOT NULL,
    "TransportersId" smallint NOT NULL,
    "Address" character varying(1000),
    "City" character varying(100),
    "StateCode" character varying(3),
    "StateName" character varying(100),
    "Pincode" character varying(10),
    "Email" character varying(320),
    "MobileNumber" character varying(20),
    "PhoneNumber" character varying(20),
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."TransportersAddress" OWNER TO "10083";

--
-- TOC entry 1853 (class 1259 OID 185007)
-- Name: TransportersAddress_TransportersAddressId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."TransportersAddress_TransportersAddressId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."TransportersAddress_TransportersAddressId_seq" OWNER TO "10083";

--
-- TOC entry 11309 (class 0 OID 0)
-- Dependencies: 1853
-- Name: TransportersAddress_TransportersAddressId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."TransportersAddress_TransportersAddressId_seq" OWNED BY "10083_10833"."TransportersAddress"."TransportersAddressId";


--
-- TOC entry 1856 (class 1259 OID 185017)
-- Name: TransportersVehicles; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."TransportersVehicles" (
    "TransportersVehiclesId" smallint NOT NULL,
    "TransportersId" smallint NOT NULL,
    "VehicleNumber" character varying(20) NOT NULL,
    "TypeName" character varying(30) NOT NULL,
    "TypeCode" character varying(3) NOT NULL,
    "IsDefault" boolean NOT NULL,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."TransportersVehicles" OWNER TO "10083";

--
-- TOC entry 1855 (class 1259 OID 185016)
-- Name: TransportersVehicles_TransportersVehiclesId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."TransportersVehicles_TransportersVehiclesId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."TransportersVehicles_TransportersVehiclesId_seq" OWNER TO "10083";

--
-- TOC entry 11310 (class 0 OID 0)
-- Dependencies: 1855
-- Name: TransportersVehicles_TransportersVehiclesId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."TransportersVehicles_TransportersVehiclesId_seq" OWNED BY "10083_10833"."TransportersVehicles"."TransportersVehiclesId";


--
-- TOC entry 1851 (class 1259 OID 184995)
-- Name: Transporters_TransportersId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."Transporters_TransportersId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."Transporters_TransportersId_seq" OWNER TO "10083";

--
-- TOC entry 11311 (class 0 OID 0)
-- Dependencies: 1851
-- Name: Transporters_TransportersId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."Transporters_TransportersId_seq" OWNED BY "10083_10833"."Transporters"."TransportersId";


--
-- TOC entry 1836 (class 1259 OID 184911)
-- Name: WareHouse; Type: TABLE; Schema: 10083_10833; Owner: 10083
--

CREATE TABLE "10083_10833"."WareHouse" (
    "WareHouseId" smallint NOT NULL,
    "Name" public.citext,
    "Address" character varying(1000) NOT NULL,
    "City" character varying(100),
    "StateCode" character varying(3),
    "StateName" character varying(100),
    "Pincode" character varying(10),
    "CountryCode" character varying(3),
    "CountryName" character varying(100),
    "Location" character varying(1000),
    "ActiveStatus" boolean DEFAULT true,
    "IsPrimary" boolean DEFAULT false,
    "Code" public.citext,
    "CreatedAt" timestamp without time zone DEFAULT now(),
    "UpdatedAt" timestamp without time zone DEFAULT now()
);


ALTER TABLE "10083_10833"."WareHouse" OWNER TO "10083";

--
-- TOC entry 1835 (class 1259 OID 184910)
-- Name: WareHouse_WareHouseId_seq; Type: SEQUENCE; Schema: 10083_10833; Owner: 10083
--

CREATE SEQUENCE "10083_10833"."WareHouse_WareHouseId_seq"
    AS smallint
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE "10083_10833"."WareHouse_WareHouseId_seq" OWNER TO "10083";

--
-- TOC entry 11312 (class 0 OID 0)
-- Dependencies: 1835
-- Name: WareHouse_WareHouseId_seq; Type: SEQUENCE OWNED BY; Schema: 10083_10833; Owner: 10083
--

ALTER SEQUENCE "10083_10833"."WareHouse_WareHouseId_seq" OWNED BY "10083_10833"."WareHouse"."WareHouseId";


--
-- TOC entry 9575 (class 2604 OID 187203)
-- Name: AuditDocuments AuditDocumentId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."AuditDocuments" ALTER COLUMN "AuditDocumentId" SET DEFAULT nextval('"10083_10833"."AuditDocuments_AuditDocumentId_seq"'::regclass);


--
-- TOC entry 9572 (class 2604 OID 187194)
-- Name: AuditLogs LogId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."AuditLogs" ALTER COLUMN "LogId" SET DEFAULT nextval('"10083_10833"."AuditLogs_LogId_seq"'::regclass);


--
-- TOC entry 9088 (class 2604 OID 184982)
-- Name: AutoNumbering AutoNumberingId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."AutoNumbering" ALTER COLUMN "AutoNumberingId" SET DEFAULT nextval('"10083_10833"."AutoNumbering_AutoNumberingId_seq"'::regclass);


--
-- TOC entry 8988 (class 2604 OID 184733)
-- Name: Bank BankId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Bank" ALTER COLUMN "BankId" SET DEFAULT nextval('"10083_10833"."Bank_BankId_seq"'::regclass);


--
-- TOC entry 8993 (class 2604 OID 184743)
-- Name: BankAddress BankAddressId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."BankAddress" ALTER COLUMN "BankAddressId" SET DEFAULT nextval('"10083_10833"."BankAddress_BankAddressId_seq"'::regclass);


--
-- TOC entry 8975 (class 2604 OID 184663)
-- Name: Company Id; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Company" ALTER COLUMN "Id" SET DEFAULT nextval('"10083_10833"."Company_Id_seq"'::regclass);


--
-- TOC entry 8978 (class 2604 OID 184679)
-- Name: CompanyContactDetails CompanyContactId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CompanyContactDetails" ALTER COLUMN "CompanyContactId" SET DEFAULT nextval('"10083_10833"."CompanyContactDetails_CompanyContactId_seq"'::regclass);


--
-- TOC entry 9001 (class 2604 OID 184762)
-- Name: CompoundUnit CompoundUnitId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CompoundUnit" ALTER COLUMN "CompoundUnitId" SET DEFAULT nextval('"10083_10833"."CompoundUnit_CompoundUnitId_seq"'::regclass);


--
-- TOC entry 9518 (class 2604 OID 186063)
-- Name: ConnectionSettings ConnectionSettingId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ConnectionSettings" ALTER COLUMN "ConnectionSettingId" SET DEFAULT nextval('"10083_10833"."ConnectionSettings_ConnectionSettingId_seq"'::regclass);


--
-- TOC entry 9005 (class 2604 OID 184770)
-- Name: Currency CurrencyId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Currency" ALTER COLUMN "CurrencyId" SET DEFAULT nextval('"10083_10833"."Currency_CurrencyId_seq"'::regclass);


--
-- TOC entry 9014 (class 2604 OID 184791)
-- Name: Customer CustomerId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Customer" ALTER COLUMN "CustomerId" SET DEFAULT nextval('"10083_10833"."Customer_CustomerId_seq"'::regclass);


--
-- TOC entry 9019 (class 2604 OID 184801)
-- Name: CustomerBillingAddress CustomerBillingAddressId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerBillingAddress" ALTER COLUMN "CustomerBillingAddressId" SET DEFAULT nextval('"10083_10833"."CustomerBillingAddress_CustomerBillingAddressId_seq"'::regclass);


--
-- TOC entry 9027 (class 2604 OID 184821)
-- Name: CustomerContactPerson CustomerContactPersonId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerContactPerson" ALTER COLUMN "CustomerContactPersonId" SET DEFAULT nextval('"10083_10833"."CustomerContactPerson_CustomerContactPersonId_seq"'::regclass);


--
-- TOC entry 9009 (class 2604 OID 184780)
-- Name: CustomerGroup CustomerGroupId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerGroup" ALTER COLUMN "CustomerGroupId" SET DEFAULT nextval('"10083_10833"."CustomerGroup_CustomerGroupId_seq"'::regclass);


--
-- TOC entry 9111 (class 2604 OID 185041)
-- Name: CustomerSettings CustomerSettingsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerSettings" ALTER COLUMN "CustomerSettingsId" SET DEFAULT nextval('"10083_10833"."CustomerSettings_CustomerSettingsId_seq"'::regclass);


--
-- TOC entry 9022 (class 2604 OID 184810)
-- Name: CustomerShippingAddress CustomerShippingAddressId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerShippingAddress" ALTER COLUMN "CustomerShippingAddressId" SET DEFAULT nextval('"10083_10833"."CustomerShippingAddress_CustomerShippingAddressId_seq"'::regclass);


--
-- TOC entry 9568 (class 2604 OID 187175)
-- Name: CustomerTurnOver CustomerTurnOverId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerTurnOver" ALTER COLUMN "CustomerTurnOverId" SET DEFAULT nextval('"10083_10833"."CustomerTurnOver_CustomerTurnOverId_seq"'::regclass);


--
-- TOC entry 9445 (class 2604 OID 185903)
-- Name: DeliveryNote DeliveryNoteId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNote" ALTER COLUMN "DeliveryNoteId" SET DEFAULT nextval('"10083_10833"."DeliveryNote_DeliveryNoteId_seq"'::regclass);


--
-- TOC entry 9469 (class 2604 OID 185973)
-- Name: DeliveryNoteBatchDetails DeliveryNoteBatchDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteBatchDetails" ALTER COLUMN "DeliveryNoteBatchDetailsId" SET DEFAULT nextval('"10083_10833"."DeliveryNoteBatchDetails_DeliveryNoteBatchDetailsId_seq"'::regclass);


--
-- TOC entry 9448 (class 2604 OID 185910)
-- Name: DeliveryNoteBillTo DeliveryNoteBillToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteBillTo" ALTER COLUMN "DeliveryNoteBillToId" SET DEFAULT nextval('"10083_10833"."DeliveryNoteBillTo_DeliveryNoteBillToId_seq"'::regclass);


--
-- TOC entry 9454 (class 2604 OID 185928)
-- Name: DeliveryNoteDetails DeliveryNoteDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteDetails" ALTER COLUMN "DeliveryNoteDetailsId" SET DEFAULT nextval('"10083_10833"."DeliveryNoteDetails_DeliveryNoteDetailsId_seq"'::regclass);


--
-- TOC entry 9457 (class 2604 OID 185937)
-- Name: DeliveryNoteDispatchFrom DeliveryNoteDispatchFromId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteDispatchFrom" ALTER COLUMN "DeliveryNoteDispatchFromId" SET DEFAULT nextval('"10083_10833"."DeliveryNoteDispatchFrom_DeliveryNoteDispatchFromId_seq"'::regclass);


--
-- TOC entry 9463 (class 2604 OID 185955)
-- Name: DeliveryNoteExportDetails DeliveryNoteExportDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteExportDetails" ALTER COLUMN "DeliveryNoteExportDetailsId" SET DEFAULT nextval('"10083_10833"."DeliveryNoteExportDetails_DeliveryNoteExportDetailsId_seq"'::regclass);


--
-- TOC entry 9460 (class 2604 OID 185946)
-- Name: DeliveryNoteItems DeliveryNoteItemsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteItems" ALTER COLUMN "DeliveryNoteItemsId" SET DEFAULT nextval('"10083_10833"."DeliveryNoteItems_DeliveryNoteItemsId_seq"'::regclass);


--
-- TOC entry 9451 (class 2604 OID 185919)
-- Name: DeliveryNoteShipTo DeliveryNoteShipToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteShipTo" ALTER COLUMN "DeliveryNoteShipToId" SET DEFAULT nextval('"10083_10833"."DeliveryNoteShipTo_DeliveryNoteShipToId_seq"'::regclass);


--
-- TOC entry 9466 (class 2604 OID 185964)
-- Name: DeliveryNoteValueDetails DeliveryNoteValueDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteValueDetails" ALTER COLUMN "DeliveryNoteValueDetailsId" SET DEFAULT nextval('"10083_10833"."DeliveryNoteValueDetails_DeliveryNoteValueDetailsId_seq"'::regclass);


--
-- TOC entry 9083 (class 2604 OID 184971)
-- Name: Document DocumentId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Document" ALTER COLUMN "DocumentId" SET DEFAULT nextval('"10083_10833"."Document_DocumentId_seq"'::regclass);


--
-- TOC entry 9105 (class 2604 OID 185027)
-- Name: DocumentLastEntry DocumentLastEntryId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DocumentLastEntry" ALTER COLUMN "DocumentLastEntryId" SET DEFAULT nextval('"10083_10833"."DocumentLastEntry_DocumentLastEntryId_seq"'::regclass);


--
-- TOC entry 9091 (class 2604 OID 184989)
-- Name: DocumentSettings DocumentSettingsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DocumentSettings" ALTER COLUMN "DocumentSettingsId" SET DEFAULT nextval('"10083_10833"."DocumentSettings_DocumentSettingsId_seq"'::regclass);


--
-- TOC entry 9492 (class 2604 OID 186006)
-- Name: EinvoiceAndEwaylogs LogId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EinvoiceAndEwaylogs" ALTER COLUMN "LogId" SET DEFAULT nextval('"10083_10833"."EinvoiceAndEwaylogs_LogId_seq"'::regclass);


--
-- TOC entry 9406 (class 2604 OID 185786)
-- Name: EinvoiceDetails EinvoiceDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EinvoiceDetails" ALTER COLUMN "EinvoiceDetailsId" SET DEFAULT nextval('"10083_10833"."EinvoiceDetails_EinvoiceDetailsId_seq"'::regclass);


--
-- TOC entry 9598 (class 2604 OID 187400)
-- Name: EinvoiceEwayDispatchDetails EinvoiceEwayDispatchDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EinvoiceEwayDispatchDetails" ALTER COLUMN "EinvoiceEwayDispatchDetailsId" SET DEFAULT nextval('"10083_10833"."EinvoiceEwayDispatchDetails_EinvoiceEwayDispatchDetailsId_seq"'::regclass);


--
-- TOC entry 9601 (class 2604 OID 187409)
-- Name: EinvoiceEwayExportDetails EinvoiceEwayExportDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EinvoiceEwayExportDetails" ALTER COLUMN "EinvoiceEwayExportDetailsId" SET DEFAULT nextval('"10083_10833"."EinvoiceEwayExportDetails_EinvoiceEwayExportDetailsId_seq"'::regclass);


--
-- TOC entry 8982 (class 2604 OID 184713)
-- Name: EinvoiceSettings EinvoiceSettingsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EinvoiceSettings" ALTER COLUMN "EinvoiceSettingsId" SET DEFAULT nextval('"10083_10833"."EinvoiceSettings_EinvoiceSettingsId_seq"'::regclass);


--
-- TOC entry 9409 (class 2604 OID 185797)
-- Name: EwayBillDetails EwayBillDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EwayBillDetails" ALTER COLUMN "EwayBillDetailsId" SET DEFAULT nextval('"10083_10833"."EwayBillDetails_EwayBillDetailsId_seq"'::regclass);


--
-- TOC entry 9643 (class 2604 OID 187840)
-- Name: EwayDetails EwayDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EwayDetails" ALTER COLUMN "EwayDetailsId" SET DEFAULT nextval('"10083_10833"."EwayDetails_EwayDetailsId_seq"'::regclass);


--
-- TOC entry 9495 (class 2604 OID 186015)
-- Name: EwayLogs EwayLogsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EwayLogs" ALTER COLUMN "EwayLogsId" SET DEFAULT nextval('"10083_10833"."EwayLogs_EwayLogsId_seq"'::regclass);


--
-- TOC entry 8985 (class 2604 OID 184723)
-- Name: EwaySettings EwaySettingsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EwaySettings" ALTER COLUMN "EwaySettingsId" SET DEFAULT nextval('"10083_10833"."EwaySettings_EwaySettingsId_seq"'::regclass);


--
-- TOC entry 9646 (class 2604 OID 187849)
-- Name: EwayTransportationDetails EwayTransportationDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EwayTransportationDetails" ALTER COLUMN "EwayTransportationDetailsId" SET DEFAULT nextval('"10083_10833"."EwayTransportationDetails_EwayTransportationDetailsId_seq"'::regclass);


--
-- TOC entry 8979 (class 2604 OID 184698)
-- Name: GSTSettings GSTSettingsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."GSTSettings" ALTER COLUMN "GSTSettingsId" SET DEFAULT nextval('"10083_10833"."GSTSettings_GSTSettingsId_seq"'::regclass);


--
-- TOC entry 9412 (class 2604 OID 185806)
-- Name: GridLayout GridLayoutId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."GridLayout" ALTER COLUMN "GridLayoutId" SET DEFAULT nextval('"10083_10833"."GridLayout_GridLayoutId_seq"'::regclass);


--
-- TOC entry 9108 (class 2604 OID 185034)
-- Name: InventorySettings InventorySettingsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."InventorySettings" ALTER COLUMN "InventorySettingsId" SET DEFAULT nextval('"10083_10833"."InventorySettings_InventorySettingsId_seq"'::regclass);


--
-- TOC entry 9523 (class 2604 OID 186072)
-- Name: LUTMaster LUTMasterId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."LUTMaster" ALTER COLUMN "LUTMasterId" SET DEFAULT nextval('"10083_10833"."LUTMaster_LUTMasterId_seq"'::regclass);


--
-- TOC entry 9503 (class 2604 OID 186032)
-- Name: LastDocumentDate LastDocumentDateId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."LastDocumentDate" ALTER COLUMN "LastDocumentDateId" SET DEFAULT nextval('"10083_10833"."LastDocumentDate_LastDocumentDateId_seq"'::regclass);


--
-- TOC entry 9631 (class 2604 OID 187714)
-- Name: MasterAuditLogs LogId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."MasterAuditLogs" ALTER COLUMN "LogId" SET DEFAULT nextval('"10083_10833"."MasterAuditLogs_LogId_seq"'::regclass);


--
-- TOC entry 9510 (class 2604 OID 186049)
-- Name: OtherCharges OtherChargeId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."OtherCharges" ALTER COLUMN "OtherChargeId" SET DEFAULT nextval('"10083_10833"."OtherCharges_OtherChargeId_seq"'::regclass);


--
-- TOC entry 9549 (class 2604 OID 186144)
-- Name: PCNBatchDetails PCNBatchId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PCNBatchDetails" ALTER COLUMN "PCNBatchId" SET DEFAULT nextval('"10083_10833"."PCNBatchDetails_PCNBatchId_seq"'::regclass);


--
-- TOC entry 9565 (class 2604 OID 186184)
-- Name: PCNItemWareHouse PCNItemWHId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PCNItemWareHouse" ALTER COLUMN "PCNItemWHId" SET DEFAULT nextval('"10083_10833"."PCNItemWareHouse_PCNItemWHId_seq"'::regclass);


--
-- TOC entry 9116 (class 2604 OID 185050)
-- Name: PrintSettings PrintSettingsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PrintSettings" ALTER COLUMN "PrintSettingsId" SET DEFAULT nextval('"10083_10833"."PrintSettings_PrintSettingsId_seq"'::regclass);


--
-- TOC entry 9415 (class 2604 OID 185815)
-- Name: PrintTemplate PrintTemplateId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PrintTemplate" ALTER COLUMN "PrintTemplateId" SET DEFAULT nextval('"10083_10833"."PrintTemplate_PrintTemplateId_seq"'::regclass);


--
-- TOC entry 9169 (class 2604 OID 185173)
-- Name: Purchase PurchaseId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Purchase" ALTER COLUMN "PurchaseId" SET DEFAULT nextval('"10083_10833"."Purchase_PurchaseId_seq"'::regclass);


--
-- TOC entry 9198 (class 2604 OID 185256)
-- Name: PurchaseBatchDetails PurchaseBatchDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseBatchDetails" ALTER COLUMN "PurchaseBatchDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseBatchDetails_PurchaseBatchDetailsId_seq"'::regclass);


--
-- TOC entry 9174 (class 2604 OID 185184)
-- Name: PurchaseBillFrom PurchaseBillFromId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseBillFrom" ALTER COLUMN "PurchaseBillFromId" SET DEFAULT nextval('"10083_10833"."PurchaseBillFrom_PurchaseBillFromId_seq"'::regclass);


--
-- TOC entry 9536 (class 2604 OID 186107)
-- Name: PurchaseCreditNote PurchaseCreditNoteId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNote" ALTER COLUMN "PurchaseCreditNoteId" SET DEFAULT nextval('"10083_10833"."PurchaseCreditNote_PurchaseCreditNoteId_seq"'::regclass);


--
-- TOC entry 9543 (class 2604 OID 186126)
-- Name: PurchaseCreditNoteBillFrom PurchaseCreditNoteBillFromId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteBillFrom" ALTER COLUMN "PurchaseCreditNoteBillFromId" SET DEFAULT nextval('"10083_10833"."PurchaseCreditNoteBillFrom_PurchaseCreditNoteBillFromId_seq"'::regclass);


--
-- TOC entry 9527 (class 2604 OID 186080)
-- Name: PurchaseCreditNoteDispatchFrom PurchaseCreditNoteDispatchFromId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteDispatchFrom" ALTER COLUMN "PurchaseCreditNoteDispatchFromId" SET DEFAULT nextval('"10083_10833"."PurchaseCreditNoteDispatchFro_PurchaseCreditNoteDispatchFro_seq"'::regclass);


--
-- TOC entry 9562 (class 2604 OID 186175)
-- Name: PurchaseCreditNoteEwayBillsDetails PurchaseCreditNoteEwayBillsDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteEwayBillsDetails" ALTER COLUMN "PurchaseCreditNoteEwayBillsDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseCreditNoteEwayBillsDe_PurchaseCreditNoteEwayBillsDe_seq"'::regclass);


--
-- TOC entry 9540 (class 2604 OID 186117)
-- Name: PurchaseCreditNoteExportDetails PurchaseCreditNoteExportDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteExportDetails" ALTER COLUMN "PurchaseCreditNoteExportDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseCreditNoteExportDetai_PurchaseCreditNoteExportDetai_seq"'::regclass);


--
-- TOC entry 9530 (class 2604 OID 186089)
-- Name: PurchaseCreditNoteItems PurchaseCreditNoteItemsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteItems" ALTER COLUMN "PurchaseCreditNoteItemsId" SET DEFAULT nextval('"10083_10833"."PurchaseCreditNoteItems_PurchaseCreditNoteItemsId_seq"'::regclass);


--
-- TOC entry 9555 (class 2604 OID 186162)
-- Name: PurchaseCreditNoteOtherCharges PurchaseCreditNoteOtherChargeId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteOtherCharges" ALTER COLUMN "PurchaseCreditNoteOtherChargeId" SET DEFAULT nextval('"10083_10833"."PurchaseCreditNoteOtherCharge_PurchaseCreditNoteOtherCharge_seq"'::regclass);


--
-- TOC entry 9552 (class 2604 OID 186153)
-- Name: PurchaseCreditNoteOtherDetails PurchaseCreditNoteOtherDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteOtherDetails" ALTER COLUMN "PurchaseCreditNoteOtherDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseCreditNoteOtherDetail_PurchaseCreditNoteOtherDetail_seq"'::regclass);


--
-- TOC entry 9546 (class 2604 OID 186135)
-- Name: PurchaseCreditNoteShipTo PurchaseCreditNoteShipToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteShipTo" ALTER COLUMN "PurchaseCreditNoteShipToId" SET DEFAULT nextval('"10083_10833"."PurchaseCreditNoteShipTo_PurchaseCreditNoteShipToId_seq"'::regclass);


--
-- TOC entry 9533 (class 2604 OID 186098)
-- Name: PurchaseCreditNoteValueDetails PurchaseCreditNoteValueDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteValueDetails" ALTER COLUMN "PurchaseCreditNoteValueDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseCreditNoteValueDetail_PurchaseCreditNoteValueDetail_seq"'::regclass);


--
-- TOC entry 9195 (class 2604 OID 185247)
-- Name: PurchaseEwayBillsDetails PurchaseEwayBillsDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseEwayBillsDetails" ALTER COLUMN "PurchaseEwayBillsDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseEwayBillsDetails_PurchaseEwayBillsDetailsId_seq"'::regclass);


--
-- TOC entry 9189 (class 2604 OID 185229)
-- Name: PurchaseImportDetails PurchaseImportDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseImportDetails" ALTER COLUMN "PurchaseImportDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseImportDetails_PurchaseImportDetailsId_seq"'::regclass);


--
-- TOC entry 9208 (class 2604 OID 185278)
-- Name: PurchaseItemWareHouse PurchaseItemWareHouseId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseItemWareHouse" ALTER COLUMN "PurchaseItemWareHouseId" SET DEFAULT nextval('"10083_10833"."PurchaseItemWareHouse_PurchaseItemWareHouseId_seq"'::regclass);


--
-- TOC entry 9186 (class 2604 OID 185220)
-- Name: PurchaseItems PurchaseItemsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseItems" ALTER COLUMN "PurchaseItemsId" SET DEFAULT nextval('"10083_10833"."PurchaseItems_PurchaseItemsId_seq"'::regclass);


--
-- TOC entry 9238 (class 2604 OID 185366)
-- Name: PurchaseOrder PurchaseOrderId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrder" ALTER COLUMN "PurchaseOrderId" SET DEFAULT nextval('"10083_10833"."PurchaseOrder_PurchaseOrderId_seq"'::regclass);


--
-- TOC entry 9262 (class 2604 OID 185436)
-- Name: PurchaseOrderBatchDetails PurchaseOrderBatchDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderBatchDetails" ALTER COLUMN "PurchaseOrderBatchDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseOrderBatchDetails_PurchaseOrderBatchDetailsId_seq"'::regclass);


--
-- TOC entry 9241 (class 2604 OID 185373)
-- Name: PurchaseOrderBillTo PurchaseOrderBillToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderBillTo" ALTER COLUMN "PurchaseOrderBillToId" SET DEFAULT nextval('"10083_10833"."PurchaseOrderBillTo_PurchaseOrderBillToId_seq"'::regclass);


--
-- TOC entry 9247 (class 2604 OID 185391)
-- Name: PurchaseOrderDetails PurchaseOrderDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderDetails" ALTER COLUMN "PurchaseOrderDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseOrderDetails_PurchaseOrderDetailsId_seq"'::regclass);


--
-- TOC entry 9250 (class 2604 OID 185400)
-- Name: PurchaseOrderDispatchFrom PurchaseOrderDispatchFromId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderDispatchFrom" ALTER COLUMN "PurchaseOrderDispatchFromId" SET DEFAULT nextval('"10083_10833"."PurchaseOrderDispatchFrom_PurchaseOrderDispatchFromId_seq"'::regclass);


--
-- TOC entry 9256 (class 2604 OID 185418)
-- Name: PurchaseOrderExportDetails PurchaseOrderExportDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderExportDetails" ALTER COLUMN "PurchaseOrderExportDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseOrderExportDetails_PurchaseOrderExportDetailsId_seq"'::regclass);


--
-- TOC entry 9253 (class 2604 OID 185409)
-- Name: PurchaseOrderItems PurchaseOrderItemsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderItems" ALTER COLUMN "PurchaseOrderItemsId" SET DEFAULT nextval('"10083_10833"."PurchaseOrderItems_PurchaseOrderItemsId_seq"'::regclass);


--
-- TOC entry 9244 (class 2604 OID 185382)
-- Name: PurchaseOrderShipTo PurchaseOrderShipToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderShipTo" ALTER COLUMN "PurchaseOrderShipToId" SET DEFAULT nextval('"10083_10833"."PurchaseOrderShipTo_PurchaseOrderShipToId_seq"'::regclass);


--
-- TOC entry 9259 (class 2604 OID 185427)
-- Name: PurchaseOrderValueDetails PurchaseOrderValueDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderValueDetails" ALTER COLUMN "PurchaseOrderValueDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseOrderValueDetails_PurchaseOrderValueDetailsId_seq"'::regclass);


--
-- TOC entry 9201 (class 2604 OID 185265)
-- Name: PurchaseOtherCharges PurchaseOtherChargeId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOtherCharges" ALTER COLUMN "PurchaseOtherChargeId" SET DEFAULT nextval('"10083_10833"."PurchaseOtherCharges_PurchaseOtherChargeId_seq"'::regclass);


--
-- TOC entry 9180 (class 2604 OID 185202)
-- Name: PurchaseOtherDetails PurchaseOtherDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOtherDetails" ALTER COLUMN "PurchaseOtherDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseOtherDetails_PurchaseOtherDetailsId_seq"'::regclass);


--
-- TOC entry 9183 (class 2604 OID 185211)
-- Name: PurchaseReceiptDetails PurchaseReceiptDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReceiptDetails" ALTER COLUMN "PurchaseReceiptDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseReceiptDetails_PurchaseReceiptDetailsId_seq"'::regclass);


--
-- TOC entry 9374 (class 2604 OID 185700)
-- Name: PurchaseReturn PurchaseReturnId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturn" ALTER COLUMN "PurchaseReturnId" SET DEFAULT nextval('"10083_10833"."PurchaseReturn_PurchaseReturnId_seq"'::regclass);


--
-- TOC entry 9387 (class 2604 OID 185737)
-- Name: PurchaseReturnBatchDetails BatchDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnBatchDetails" ALTER COLUMN "BatchDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseReturnBatchDetails_BatchDetailsId_seq"'::regclass);


--
-- TOC entry 9381 (class 2604 OID 185719)
-- Name: PurchaseReturnBillFrom PurchaseReturnBillFromId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnBillFrom" ALTER COLUMN "PurchaseReturnBillFromId" SET DEFAULT nextval('"10083_10833"."PurchaseReturnBillFrom_PurchaseReturnBillFromId_seq"'::regclass);


--
-- TOC entry 9365 (class 2604 OID 185673)
-- Name: PurchaseReturnDispatchFrom PurchaseReturnDispatchFromId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnDispatchFrom" ALTER COLUMN "PurchaseReturnDispatchFromId" SET DEFAULT nextval('"10083_10833"."PurchaseReturnDispatchFrom_PurchaseReturnDispatchFromId_seq"'::regclass);


--
-- TOC entry 9400 (class 2604 OID 185768)
-- Name: PurchaseReturnEwayBillsDetails PurchaseReturnEwayBillsDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnEwayBillsDetails" ALTER COLUMN "PurchaseReturnEwayBillsDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseReturnEwayBillsDetail_PurchaseReturnEwayBillsDetail_seq"'::regclass);


--
-- TOC entry 9378 (class 2604 OID 185710)
-- Name: PurchaseReturnExportDetails PurchaseReturnExportDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnExportDetails" ALTER COLUMN "PurchaseReturnExportDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseReturnExportDetails_PurchaseReturnExportDetailsId_seq"'::regclass);


--
-- TOC entry 9403 (class 2604 OID 185777)
-- Name: PurchaseReturnItemWareHouse PRItemWHId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnItemWareHouse" ALTER COLUMN "PRItemWHId" SET DEFAULT nextval('"10083_10833"."PurchaseReturnItemWareHouse_PRItemWHId_seq"'::regclass);


--
-- TOC entry 9368 (class 2604 OID 185682)
-- Name: PurchaseReturnItems PurchaseReturnItemsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnItems" ALTER COLUMN "PurchaseReturnItemsId" SET DEFAULT nextval('"10083_10833"."PurchaseReturnItems_PurchaseReturnItemsId_seq"'::regclass);


--
-- TOC entry 9393 (class 2604 OID 185755)
-- Name: PurchaseReturnOtherCharges PurchaseReturnOtherChargeId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnOtherCharges" ALTER COLUMN "PurchaseReturnOtherChargeId" SET DEFAULT nextval('"10083_10833"."PurchaseReturnOtherCharges_PurchaseReturnOtherChargeId_seq"'::regclass);


--
-- TOC entry 9390 (class 2604 OID 185746)
-- Name: PurchaseReturnOtherDetails PurchaseReturnOtherDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnOtherDetails" ALTER COLUMN "PurchaseReturnOtherDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseReturnOtherDetails_PurchaseReturnOtherDetailsId_seq"'::regclass);


--
-- TOC entry 9384 (class 2604 OID 185728)
-- Name: PurchaseReturnShipTo PurchaseReturnShipToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnShipTo" ALTER COLUMN "PurchaseReturnShipToId" SET DEFAULT nextval('"10083_10833"."PurchaseReturnShipTo_PurchaseReturnShipToId_seq"'::regclass);


--
-- TOC entry 9371 (class 2604 OID 185691)
-- Name: PurchaseReturnValueDetails PurchaseReturnValueDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnValueDetails" ALTER COLUMN "PurchaseReturnValueDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseReturnValueDetails_PurchaseReturnValueDetailsId_seq"'::regclass);


--
-- TOC entry 9472 (class 2604 OID 185982)
-- Name: PurchaseSettings PurchaseSettingsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseSettings" ALTER COLUMN "PurchaseSettingsId" SET DEFAULT nextval('"10083_10833"."PurchaseSettings_PurchaseSettingsId_seq"'::regclass);


--
-- TOC entry 9177 (class 2604 OID 185193)
-- Name: PurchaseShipTo PurchaseShipToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseShipTo" ALTER COLUMN "PurchaseShipToId" SET DEFAULT nextval('"10083_10833"."PurchaseShipTo_PurchaseShipToId_seq"'::regclass);


--
-- TOC entry 9192 (class 2604 OID 185238)
-- Name: PurchaseValueDetails PurchaseValueDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseValueDetails" ALTER COLUMN "PurchaseValueDetailsId" SET DEFAULT nextval('"10083_10833"."PurchaseValueDetails_PurchaseValueDetailsId_seq"'::regclass);


--
-- TOC entry 9578 (class 2604 OID 187220)
-- Name: Quotation QuotationId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Quotation" ALTER COLUMN "QuotationId" SET DEFAULT nextval('"10083_10833"."Quotation_QuotationId_seq"'::regclass);


--
-- TOC entry 9592 (class 2604 OID 187252)
-- Name: QuotationItems QuotationItemsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."QuotationItems" ALTER COLUMN "QuotationItemsId" SET DEFAULT nextval('"10083_10833"."QuotationItems_QuotationItemsId_seq"'::regclass);


--
-- TOC entry 9585 (class 2604 OID 187239)
-- Name: QuotationOtherCharges QuotationOtherChargeId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."QuotationOtherCharges" ALTER COLUMN "QuotationOtherChargeId" SET DEFAULT nextval('"10083_10833"."QuotationOtherCharges_QuotationOtherChargeId_seq"'::regclass);


--
-- TOC entry 9582 (class 2604 OID 187230)
-- Name: QuotationTo QuotationToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."QuotationTo" ALTER COLUMN "QuotationToId" SET DEFAULT nextval('"10083_10833"."QuotationTo_QuotationToId_seq"'::regclass);


--
-- TOC entry 9595 (class 2604 OID 187261)
-- Name: QuotationValueDetails QuotationValueDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."QuotationValueDetails" ALTER COLUMN "QuotationValueDetailsId" SET DEFAULT nextval('"10083_10833"."QuotationValueDetails_QuotationValueDetailsId_seq"'::regclass);


--
-- TOC entry 9418 (class 2604 OID 185824)
-- Name: ReceiptNote ReceiptNoteId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNote" ALTER COLUMN "ReceiptNoteId" SET DEFAULT nextval('"10083_10833"."ReceiptNote_ReceiptNoteId_seq"'::regclass);


--
-- TOC entry 9442 (class 2604 OID 185894)
-- Name: ReceiptNoteBatchDetails ReceiptNoteBatchDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteBatchDetails" ALTER COLUMN "ReceiptNoteBatchDetailsId" SET DEFAULT nextval('"10083_10833"."ReceiptNoteBatchDetails_ReceiptNoteBatchDetailsId_seq"'::regclass);


--
-- TOC entry 9421 (class 2604 OID 185831)
-- Name: ReceiptNoteBillTo ReceiptNoteBillToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteBillTo" ALTER COLUMN "ReceiptNoteBillToId" SET DEFAULT nextval('"10083_10833"."ReceiptNoteBillTo_ReceiptNoteBillToId_seq"'::regclass);


--
-- TOC entry 9427 (class 2604 OID 185849)
-- Name: ReceiptNoteDetails ReceiptNoteDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteDetails" ALTER COLUMN "ReceiptNoteDetailsId" SET DEFAULT nextval('"10083_10833"."ReceiptNoteDetails_ReceiptNoteDetailsId_seq"'::regclass);


--
-- TOC entry 9430 (class 2604 OID 185858)
-- Name: ReceiptNoteDispatchFrom ReceiptNoteDispatchFromId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteDispatchFrom" ALTER COLUMN "ReceiptNoteDispatchFromId" SET DEFAULT nextval('"10083_10833"."ReceiptNoteDispatchFrom_ReceiptNoteDispatchFromId_seq"'::regclass);


--
-- TOC entry 9436 (class 2604 OID 185876)
-- Name: ReceiptNoteExportDetails ReceiptNoteExportDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteExportDetails" ALTER COLUMN "ReceiptNoteExportDetailsId" SET DEFAULT nextval('"10083_10833"."ReceiptNoteExportDetails_ReceiptNoteExportDetailsId_seq"'::regclass);


--
-- TOC entry 9433 (class 2604 OID 185867)
-- Name: ReceiptNoteItems ReceiptNoteItemsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteItems" ALTER COLUMN "ReceiptNoteItemsId" SET DEFAULT nextval('"10083_10833"."ReceiptNoteItems_ReceiptNoteItemsId_seq"'::regclass);


--
-- TOC entry 9424 (class 2604 OID 185840)
-- Name: ReceiptNoteShipTo ReceiptNoteShipToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteShipTo" ALTER COLUMN "ReceiptNoteShipToId" SET DEFAULT nextval('"10083_10833"."ReceiptNoteShipTo_ReceiptNoteShipToId_seq"'::regclass);


--
-- TOC entry 9439 (class 2604 OID 185885)
-- Name: ReceiptNoteValueDetails ReceiptNoteValueDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteValueDetails" ALTER COLUMN "ReceiptNoteValueDetailsId" SET DEFAULT nextval('"10083_10833"."ReceiptNoteValueDetails_ReceiptNoteValueDetailsId_seq"'::regclass);


--
-- TOC entry 9119 (class 2604 OID 185059)
-- Name: Sales SaleId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Sales" ALTER COLUMN "SaleId" SET DEFAULT nextval('"10083_10833"."Sales_SaleId_seq"'::regclass);


--
-- TOC entry 9634 (class 2604 OID 187791)
-- Name: SalesAuditLogs LogId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesAuditLogs" ALTER COLUMN "LogId" SET DEFAULT nextval('"10083_10833"."SalesAuditLogs_LogId_seq"'::regclass);


--
-- TOC entry 9163 (class 2604 OID 185155)
-- Name: SalesBatchDetails SalesBatchDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesBatchDetails" ALTER COLUMN "SalesBatchDetailsId" SET DEFAULT nextval('"10083_10833"."SalesBatchDetails_SalesBatchDetailsId_seq"'::regclass);


--
-- TOC entry 9125 (class 2604 OID 185070)
-- Name: SalesBillTo SalesBillToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesBillTo" ALTER COLUMN "SalesBillToId" SET DEFAULT nextval('"10083_10833"."SalesBillTo_SalesBillToId_seq"'::regclass);


--
-- TOC entry 9604 (class 2604 OID 188782)
-- Name: SalesContainerList SalesContainerListId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesContainerList" ALTER COLUMN "SalesContainerListId" SET DEFAULT nextval('"10083_10833"."SalesContainerList_SalesContainerListId_seq"'::regclass);


--
-- TOC entry 9315 (class 2604 OID 185559)
-- Name: SalesDebitNote SaleDebitNoteId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNote" ALTER COLUMN "SaleDebitNoteId" SET DEFAULT nextval('"10083_10833"."SalesDebitNote_SaleDebitNoteId_seq"'::regclass);


--
-- TOC entry 9640 (class 2604 OID 187809)
-- Name: SalesDebitNoteAuditLogs LogId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteAuditLogs" ALTER COLUMN "LogId" SET DEFAULT nextval('"10083_10833"."SalesDebitNoteAuditLogs_LogId_seq"'::regclass);


--
-- TOC entry 9348 (class 2604 OID 185642)
-- Name: SalesDebitNoteBatchDetails SDNBatchId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteBatchDetails" ALTER COLUMN "SDNBatchId" SET DEFAULT nextval('"10083_10833"."SalesDebitNoteBatchDetails_SDNBatchId_seq"'::regclass);


--
-- TOC entry 9321 (class 2604 OID 185570)
-- Name: SalesDebitNoteBillTo SalesDebitNoteBillToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteBillTo" ALTER COLUMN "SalesDebitNoteBillToId" SET DEFAULT nextval('"10083_10833"."SalesDebitNoteBillTo_SalesDebitNoteBillToId_seq"'::regclass);


--
-- TOC entry 9610 (class 2604 OID 188934)
-- Name: SalesDebitNoteContainerList SalesDebitNoteContainerListId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteContainerList" ALTER COLUMN "SalesDebitNoteContainerListId" SET DEFAULT nextval('"10083_10833"."SalesDebitNoteContainerList_SalesDebitNoteContainerListId_seq"'::regclass);


--
-- TOC entry 9345 (class 2604 OID 188988)
-- Name: SalesDebitNoteEwayBillsDetails SalesDebitNoteEwayBillsDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteEwayBillsDetails" ALTER COLUMN "SalesDebitNoteEwayBillsDetailsId" SET DEFAULT nextval('"10083_10833"."SalesDebitNoteEwayBillsDetail_SalesDebitNoteEwayBillsDetail_seq"'::regclass);


--
-- TOC entry 9653 (class 2604 OID 188977)
-- Name: SalesDebitNoteHSNSummary SaleDebitNoteHSNId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteHSNSummary" ALTER COLUMN "SaleDebitNoteHSNId" SET DEFAULT nextval('"10083_10833"."SalesDebitNoteHSNSummary_SaleDebitNoteHSNId_seq"'::regclass);


--
-- TOC entry 9339 (class 2604 OID 185615)
-- Name: SalesDebitNoteImportDetails SalesDebitNoteImportDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteImportDetails" ALTER COLUMN "SalesDebitNoteImportDetailsId" SET DEFAULT nextval('"10083_10833"."SalesDebitNoteImportDetails_SalesDebitNoteImportDetailsId_seq"'::regclass);


--
-- TOC entry 9362 (class 2604 OID 185664)
-- Name: SalesDebitNoteItemWareHouse SDNItemWHId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteItemWareHouse" ALTER COLUMN "SDNItemWHId" SET DEFAULT nextval('"10083_10833"."SalesDebitNoteItemWareHouse_SDNItemWHId_seq"'::regclass);


--
-- TOC entry 9334 (class 2604 OID 188943)
-- Name: SalesDebitNoteItems SalesDebitNoteItemsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteItems" ALTER COLUMN "SalesDebitNoteItemsId" SET DEFAULT nextval('"10083_10833"."SalesDebitNoteItems_SalesDebitNoteItemsId_seq"'::regclass);


--
-- TOC entry 9661 (class 2604 OID 188641)
-- Name: SalesDebitNoteMain SaleDebitNoteId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteMain" ALTER COLUMN "SaleDebitNoteId" SET DEFAULT nextval('"10083_10833"."SalesDebitNoteMain_SaleDebitNoteId_seq"'::regclass);


--
-- TOC entry 9351 (class 2604 OID 188965)
-- Name: SalesDebitNoteOtherCharges SalesDebitNoteOtherChargeId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteOtherCharges" ALTER COLUMN "SalesDebitNoteOtherChargeId" SET DEFAULT nextval('"10083_10833"."SalesDebitNoteOtherCharges_SalesDebitNoteOtherChargeId_seq"'::regclass);


--
-- TOC entry 9328 (class 2604 OID 185588)
-- Name: SalesDebitNoteOtherDetails SalesDebitNoteOtherDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteOtherDetails" ALTER COLUMN "SalesDebitNoteOtherDetailsId" SET DEFAULT nextval('"10083_10833"."SalesDebitNoteOtherDetails_SalesDebitNoteOtherDetailsId_seq"'::regclass);


--
-- TOC entry 9613 (class 2604 OID 188923)
-- Name: SalesDebitNotePackingList SalesDebitNotePackingListId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNotePackingList" ALTER COLUMN "SalesDebitNotePackingListId" SET DEFAULT nextval('"10083_10833"."SalesDebitNotePackingList_SalesDebitNotePackingListId_seq"'::regclass);


--
-- TOC entry 9331 (class 2604 OID 185597)
-- Name: SalesDebitNoteReceiptDetails SalesDebitNoteReceiptDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteReceiptDetails" ALTER COLUMN "SalesDebitNoteReceiptDetailsId" SET DEFAULT nextval('"10083_10833"."SalesDebitNoteReceiptDetails_SalesDebitNoteReceiptDetailsId_seq"'::regclass);


--
-- TOC entry 9325 (class 2604 OID 185579)
-- Name: SalesDebitNoteShipTo SalesDebitNoteShipToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteShipTo" ALTER COLUMN "SalesDebitNoteShipToId" SET DEFAULT nextval('"10083_10833"."SalesDebitNoteShipTo_SalesDebitNoteShipToId_seq"'::regclass);


--
-- TOC entry 9342 (class 2604 OID 185624)
-- Name: SalesDebitNoteValueDetails SalesDebitNoteValueDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteValueDetails" ALTER COLUMN "SalesDebitNoteValueDetailsId" SET DEFAULT nextval('"10083_10833"."SalesDebitNoteValueDetails_SalesDebitNoteValueDetailsId_seq"'::regclass);


--
-- TOC entry 9146 (class 2604 OID 185110)
-- Name: SalesDispatchDetails SalesDispatchDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDispatchDetails" ALTER COLUMN "SalesDispatchDetailsId" SET DEFAULT nextval('"10083_10833"."SalesDispatchDetails_SalesDispatchDetailsId_seq"'::regclass);


--
-- TOC entry 9160 (class 2604 OID 188836)
-- Name: SalesEwayBillsDetails SalesEwayBillsDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesEwayBillsDetails" ALTER COLUMN "SalesEwayBillsDetailsId" SET DEFAULT nextval('"10083_10833"."SalesEwayBillsDetails_SalesEwayBillsDetailsId_seq"'::regclass);


--
-- TOC entry 9154 (class 2604 OID 185128)
-- Name: SalesExportDetails SalesExportDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesExportDetails" ALTER COLUMN "SalesExportDetailsId" SET DEFAULT nextval('"10083_10833"."SalesExportDetails_SalesExportDetailsId_seq"'::regclass);


--
-- TOC entry 9652 (class 2604 OID 188825)
-- Name: SalesHSNSummary SaleHSNId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesHSNSummary" ALTER COLUMN "SaleHSNId" SET DEFAULT nextval('"10083_10833"."SalesHSNSummary_SaleHSNId_seq"'::regclass);


--
-- TOC entry 9166 (class 2604 OID 185164)
-- Name: SalesItemWareHouse SalesItemWareHouseId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesItemWareHouse" ALTER COLUMN "SalesItemWareHouseId" SET DEFAULT nextval('"10083_10833"."SalesItemWareHouse_SalesItemWareHouseId_seq"'::regclass);


--
-- TOC entry 9149 (class 2604 OID 188791)
-- Name: SalesItems SalesItemsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesItems" ALTER COLUMN "SalesItemsId" SET DEFAULT nextval('"10083_10833"."SalesItems_SalesItemsId_seq"'::regclass);


--
-- TOC entry 9655 (class 2604 OID 188523)
-- Name: SalesMain SaleId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesMain" ALTER COLUMN "SaleId" SET DEFAULT nextval('"10083_10833"."SalesMain_SaleId_seq"'::regclass);


--
-- TOC entry 9211 (class 2604 OID 185287)
-- Name: SalesOrder SaleOrderId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrder" ALTER COLUMN "SaleOrderId" SET DEFAULT nextval('"10083_10833"."SalesOrder_SaleOrderId_seq"'::regclass);


--
-- TOC entry 9235 (class 2604 OID 185357)
-- Name: SalesOrderBatchDetails SalesOrderBatchDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderBatchDetails" ALTER COLUMN "SalesOrderBatchDetailsId" SET DEFAULT nextval('"10083_10833"."SalesOrderBatchDetails_SalesOrderBatchDetailsId_seq"'::regclass);


--
-- TOC entry 9214 (class 2604 OID 185294)
-- Name: SalesOrderBillTo SalesOrderBillToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderBillTo" ALTER COLUMN "SalesOrderBillToId" SET DEFAULT nextval('"10083_10833"."SalesOrderBillTo_SalesOrderBillToId_seq"'::regclass);


--
-- TOC entry 9220 (class 2604 OID 185312)
-- Name: SalesOrderDetails SalesOrderDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderDetails" ALTER COLUMN "SalesOrderDetailsId" SET DEFAULT nextval('"10083_10833"."SalesOrderDetails_SalesOrderDetailsId_seq"'::regclass);


--
-- TOC entry 9223 (class 2604 OID 185321)
-- Name: SalesOrderDispatchFrom SalesOrderDispatchFromId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderDispatchFrom" ALTER COLUMN "SalesOrderDispatchFromId" SET DEFAULT nextval('"10083_10833"."SalesOrderDispatchFrom_SalesOrderDispatchFromId_seq"'::regclass);


--
-- TOC entry 9229 (class 2604 OID 185339)
-- Name: SalesOrderExportDetails SalesOrderExportDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderExportDetails" ALTER COLUMN "SalesOrderExportDetailsId" SET DEFAULT nextval('"10083_10833"."SalesOrderExportDetails_SalesOrderExportDetailsId_seq"'::regclass);


--
-- TOC entry 9226 (class 2604 OID 185330)
-- Name: SalesOrderItems SalesOrderItemsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderItems" ALTER COLUMN "SalesOrderItemsId" SET DEFAULT nextval('"10083_10833"."SalesOrderItems_SalesOrderItemsId_seq"'::regclass);


--
-- TOC entry 9217 (class 2604 OID 185303)
-- Name: SalesOrderShipTo SalesOrderShipToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderShipTo" ALTER COLUMN "SalesOrderShipToId" SET DEFAULT nextval('"10083_10833"."SalesOrderShipTo_SalesOrderShipToId_seq"'::regclass);


--
-- TOC entry 9232 (class 2604 OID 185348)
-- Name: SalesOrderValueDetails SalesOrderValueDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderValueDetails" ALTER COLUMN "SalesOrderValueDetailsId" SET DEFAULT nextval('"10083_10833"."SalesOrderValueDetails_SalesOrderValueDetailsId_seq"'::regclass);


--
-- TOC entry 9135 (class 2604 OID 188813)
-- Name: SalesOtherCharges SalesOtherChargeId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOtherCharges" ALTER COLUMN "SalesOtherChargeId" SET DEFAULT nextval('"10083_10833"."SalesOtherCharges_SalesOtherChargeId_seq"'::regclass);


--
-- TOC entry 9132 (class 2604 OID 185088)
-- Name: SalesOtherDetails SalesOtherDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOtherDetails" ALTER COLUMN "SalesOtherDetailsId" SET DEFAULT nextval('"10083_10833"."SalesOtherDetails_SalesOtherDetailsId_seq"'::regclass);


--
-- TOC entry 9607 (class 2604 OID 188771)
-- Name: SalesPackingList SalesPackingListId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesPackingList" ALTER COLUMN "SalesPackingListId" SET DEFAULT nextval('"10083_10833"."SalesPackingList_SalesPackingListId_seq"'::regclass);


--
-- TOC entry 9498 (class 2604 OID 186024)
-- Name: SalesPerson SalesPersonId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesPerson" ALTER COLUMN "SalesPersonId" SET DEFAULT nextval('"10083_10833"."SalesPerson_SalesPersonId_seq"'::regclass);


--
-- TOC entry 9265 (class 2604 OID 185445)
-- Name: SalesReturn SaleReturnId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturn" ALTER COLUMN "SaleReturnId" SET DEFAULT nextval('"10083_10833"."SalesReturn_SaleReturnId_seq"'::regclass);


--
-- TOC entry 9637 (class 2604 OID 187800)
-- Name: SalesReturnAuditLogs LogId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnAuditLogs" ALTER COLUMN "LogId" SET DEFAULT nextval('"10083_10833"."SalesReturnAuditLogs_LogId_seq"'::regclass);


--
-- TOC entry 9298 (class 2604 OID 185528)
-- Name: SalesReturnBatchDetails SalesReturnBtchDtlsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnBatchDetails" ALTER COLUMN "SalesReturnBtchDtlsId" SET DEFAULT nextval('"10083_10833"."SalesReturnBatchDetails_SalesReturnBtchDtlsId_seq"'::regclass);


--
-- TOC entry 9271 (class 2604 OID 185456)
-- Name: SalesReturnBillTo SalesReturnBillToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnBillTo" ALTER COLUMN "SalesReturnBillToId" SET DEFAULT nextval('"10083_10833"."SalesReturnBillTo_SalesReturnBillToId_seq"'::regclass);


--
-- TOC entry 9616 (class 2604 OID 188858)
-- Name: SalesReturnContainerList SalesReturnContainerListId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnContainerList" ALTER COLUMN "SalesReturnContainerListId" SET DEFAULT nextval('"10083_10833"."SalesReturnContainerList_SalesReturnContainerListId_seq"'::regclass);


--
-- TOC entry 9295 (class 2604 OID 188912)
-- Name: SalesReturnEwayBillsDetails SalesReturnEwayBillsDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnEwayBillsDetails" ALTER COLUMN "SalesReturnEwayBillsDetailsId" SET DEFAULT nextval('"10083_10833"."SalesReturnEwayBillsDetails_SalesReturnEwayBillsDetailsId_seq"'::regclass);


--
-- TOC entry 9654 (class 2604 OID 188901)
-- Name: SalesReturnHSNSummary SaleReturnHSNId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnHSNSummary" ALTER COLUMN "SaleReturnHSNId" SET DEFAULT nextval('"10083_10833"."SalesReturnHSNSummary_SaleReturnHSNId_seq"'::regclass);


--
-- TOC entry 9289 (class 2604 OID 185501)
-- Name: SalesReturnImportDetails SalesReturnImportDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnImportDetails" ALTER COLUMN "SalesReturnImportDetailsId" SET DEFAULT nextval('"10083_10833"."SalesReturnImportDetails_SalesReturnImportDetailsId_seq"'::regclass);


--
-- TOC entry 9312 (class 2604 OID 185550)
-- Name: SalesReturnItemWareHouse SRItemWHId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnItemWareHouse" ALTER COLUMN "SRItemWHId" SET DEFAULT nextval('"10083_10833"."SalesReturnItemWareHouse_SRItemWHId_seq"'::regclass);


--
-- TOC entry 9284 (class 2604 OID 188867)
-- Name: SalesReturnItems SalesReturnItemsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnItems" ALTER COLUMN "SalesReturnItemsId" SET DEFAULT nextval('"10083_10833"."SalesReturnItems_SalesReturnItemsId_seq"'::regclass);


--
-- TOC entry 9658 (class 2604 OID 188582)
-- Name: SalesReturnMain SaleReturnId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnMain" ALTER COLUMN "SaleReturnId" SET DEFAULT nextval('"10083_10833"."SalesReturnMain_SaleReturnId_seq"'::regclass);


--
-- TOC entry 9301 (class 2604 OID 188889)
-- Name: SalesReturnOtherCharges SalesReturnOtherChargeId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnOtherCharges" ALTER COLUMN "SalesReturnOtherChargeId" SET DEFAULT nextval('"10083_10833"."SalesReturnOtherCharges_SalesReturnOtherChargeId_seq"'::regclass);


--
-- TOC entry 9278 (class 2604 OID 185474)
-- Name: SalesReturnOtherDetails SalesReturnOtherDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnOtherDetails" ALTER COLUMN "SalesReturnOtherDetailsId" SET DEFAULT nextval('"10083_10833"."SalesReturnOtherDetails_SalesReturnOtherDetailsId_seq"'::regclass);


--
-- TOC entry 9619 (class 2604 OID 188847)
-- Name: SalesReturnPackingList SalesReturnPackingListId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnPackingList" ALTER COLUMN "SalesReturnPackingListId" SET DEFAULT nextval('"10083_10833"."SalesReturnPackingList_SalesReturnPackingListId_seq"'::regclass);


--
-- TOC entry 9281 (class 2604 OID 185483)
-- Name: SalesReturnReceiptDetails SalesReturnReceiptDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnReceiptDetails" ALTER COLUMN "SalesReturnReceiptDetailsId" SET DEFAULT nextval('"10083_10833"."SalesReturnReceiptDetails_SalesReturnReceiptDetailsId_seq"'::regclass);


--
-- TOC entry 9275 (class 2604 OID 185465)
-- Name: SalesReturnShipTo SalesReturnShipToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnShipTo" ALTER COLUMN "SalesReturnShipToId" SET DEFAULT nextval('"10083_10833"."SalesReturnShipTo_SalesReturnShipToId_seq"'::regclass);


--
-- TOC entry 9292 (class 2604 OID 185510)
-- Name: SalesReturnValueDetails SalesReturnValueDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnValueDetails" ALTER COLUMN "SalesReturnValueDetailsId" SET DEFAULT nextval('"10083_10833"."SalesReturnValueDetails_SalesReturnValueDetailsId_seq"'::regclass);


--
-- TOC entry 9129 (class 2604 OID 185079)
-- Name: SalesShipTo SalesShipToId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesShipTo" ALTER COLUMN "SalesShipToId" SET DEFAULT nextval('"10083_10833"."SalesShipTo_SalesShipToId_seq"'::regclass);


--
-- TOC entry 9157 (class 2604 OID 185137)
-- Name: SalesValueDetails SalesValueDetailsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesValueDetails" ALTER COLUMN "SalesValueDetailsId" SET DEFAULT nextval('"10083_10833"."SalesValueDetails_SalesValueDetailsId_seq"'::regclass);


--
-- TOC entry 9067 (class 2604 OID 184927)
-- Name: Shipping ShippingId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Shipping" ALTER COLUMN "ShippingId" SET DEFAULT nextval('"10083_10833"."Shipping_ShippingId_seq"'::regclass);


--
-- TOC entry 9058 (class 2604 OID 184902)
-- Name: SimpleUnit SimpleUnitId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SimpleUnit" ALTER COLUMN "SimpleUnitId" SET DEFAULT nextval('"10083_10833"."SimpleUnit_SimpleUnitId_seq"'::regclass);


--
-- TOC entry 9047 (class 2604 OID 184871)
-- Name: StockCategory StockCategoryId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockCategory" ALTER COLUMN "StockCategoryId" SET DEFAULT nextval('"10083_10833"."StockCategory_StockCategoryId_seq"'::regclass);


--
-- TOC entry 9034 (class 2604 OID 184840)
-- Name: StockGroup StockGroupId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockGroup" ALTER COLUMN "StockGroupId" SET DEFAULT nextval('"10083_10833"."StockGroup_StockGroupId_seq"'::regclass);


--
-- TOC entry 9055 (class 2604 OID 184893)
-- Name: StockGroupGSTInfo StockGroupGSTInfoId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockGroupGSTInfo" ALTER COLUMN "StockGroupGSTInfoId" SET DEFAULT nextval('"10083_10833"."StockGroupGSTInfo_StockGroupGSTInfoId_seq"'::regclass);


--
-- TOC entry 9030 (class 2604 OID 184830)
-- Name: StockItem StockItemId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItem" ALTER COLUMN "StockItemId" SET DEFAULT nextval('"10083_10833"."StockItem_StockItemId_seq"'::regclass);


--
-- TOC entry 9506 (class 2604 OID 186039)
-- Name: StockItemBalance StockItemBalanceId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemBalance" ALTER COLUMN "StockItemBalanceId" SET DEFAULT nextval('"10083_10833"."StockItemBalance_StockItemBalanceId_seq"'::regclass);


--
-- TOC entry 9040 (class 2604 OID 184852)
-- Name: StockItemDescription StockItemDescriptionId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemDescription" ALTER COLUMN "StockItemDescriptionId" SET DEFAULT nextval('"10083_10833"."StockItemDescription_StockItemDescriptionId_seq"'::regclass);


--
-- TOC entry 9052 (class 2604 OID 184884)
-- Name: StockItemGSTInfo StockItemGSTInfoId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemGSTInfo" ALTER COLUMN "StockItemGSTInfoId" SET DEFAULT nextval('"10083_10833"."StockItemGSTInfo_StockItemGSTInfoId_seq"'::regclass);


--
-- TOC entry 9044 (class 2604 OID 184862)
-- Name: StockItemOpeningBalance StockItemOpeningBalanceId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemOpeningBalance" ALTER COLUMN "StockItemOpeningBalanceId" SET DEFAULT nextval('"10083_10833"."StockItemOpeningBalance_StockItemOpeningBalanceId_seq"'::regclass);


--
-- TOC entry 9076 (class 2604 OID 184952)
-- Name: Supplier SupplierId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Supplier" ALTER COLUMN "SupplierId" SET DEFAULT nextval('"10083_10833"."Supplier_SupplierId_seq"'::regclass);


--
-- TOC entry 9080 (class 2604 OID 184962)
-- Name: SupplierAddress SupplierAddressId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SupplierAddress" ALTER COLUMN "SupplierAddressId" SET DEFAULT nextval('"10083_10833"."SupplierAddress_SupplierAddressId_seq"'::regclass);


--
-- TOC entry 9071 (class 2604 OID 184939)
-- Name: SupplierGroup SupplierGroupId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SupplierGroup" ALTER COLUMN "SupplierGroupId" SET DEFAULT nextval('"10083_10833"."SupplierGroup_SupplierGroupId_seq"'::regclass);


--
-- TOC entry 9622 (class 2604 OID 187513)
-- Name: Template TemplateId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Template" ALTER COLUMN "TemplateId" SET DEFAULT nextval('"10083_10833"."Template_TemplateId_seq"'::regclass);


--
-- TOC entry 9627 (class 2604 OID 187524)
-- Name: TemplateSettings TemplateSettingsId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."TemplateSettings" ALTER COLUMN "TemplateSettingsId" SET DEFAULT nextval('"10083_10833"."TemplateSettings_TemplateSettingsId_seq"'::regclass);


--
-- TOC entry 8996 (class 2604 OID 184752)
-- Name: TermAndCondition TermAndConditionId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."TermAndCondition" ALTER COLUMN "TermAndConditionId" SET DEFAULT nextval('"10083_10833"."TermAndCondition_TermAndConditionId_seq"'::regclass);


--
-- TOC entry 9095 (class 2604 OID 184999)
-- Name: Transporters TransportersId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Transporters" ALTER COLUMN "TransportersId" SET DEFAULT nextval('"10083_10833"."Transporters_TransportersId_seq"'::regclass);


--
-- TOC entry 9099 (class 2604 OID 185011)
-- Name: TransportersAddress TransportersAddressId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."TransportersAddress" ALTER COLUMN "TransportersAddressId" SET DEFAULT nextval('"10083_10833"."TransportersAddress_TransportersAddressId_seq"'::regclass);


--
-- TOC entry 9102 (class 2604 OID 185020)
-- Name: TransportersVehicles TransportersVehiclesId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."TransportersVehicles" ALTER COLUMN "TransportersVehiclesId" SET DEFAULT nextval('"10083_10833"."TransportersVehicles_TransportersVehiclesId_seq"'::regclass);


--
-- TOC entry 9062 (class 2604 OID 184914)
-- Name: WareHouse WareHouseId; Type: DEFAULT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."WareHouse" ALTER COLUMN "WareHouseId" SET DEFAULT nextval('"10083_10833"."WareHouse_WareHouseId_seq"'::regclass);


--
-- TOC entry 11048 (class 0 OID 187200)
-- Dependencies: 2112
-- Data for Name: AuditDocuments; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11046 (class 0 OID 187191)
-- Dependencies: 2110
-- Data for Name: AuditLogs; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10784 (class 0 OID 184979)
-- Dependencies: 1848
-- Data for Name: AutoNumbering; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10736 (class 0 OID 184730)
-- Dependencies: 1800
-- Data for Name: Bank; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10738 (class 0 OID 184740)
-- Dependencies: 1802
-- Data for Name: BankAddress; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10725 (class 0 OID 184660)
-- Dependencies: 1789
-- Data for Name: Company; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--

INSERT INTO "10083_10833"."Company" VALUES (1, '10833', 10833, 'Z Square limited', NULL, '10083_10833', 'Cp', 'eikd', 'wodi', '2022-11-02', '2022-12-03', 'BDT', 'Afghan Afghani', 'P', 'L', 343, 1, 'Dot(.)', 'VBORw0KGgoAAAANSUhEUgAAP78AACVZCAYAAABJ4Fx4AAAAAX…IECBAgAABAgQIECDwS2ABjf0orEl0lnQAAAAASUVORK5CYII', true, '09AAFCP0535R003', NULL, NULL, NULL, '2025-07-21 11:27:16.326+05:30', '2025-07-21 11:27:16.326+05:30', false);


--
-- TOC entry 10727 (class 0 OID 184676)
-- Dependencies: 1791
-- Data for Name: CompanyContactDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--

INSERT INTO "10083_10833"."CompanyContactDetails" VALUES (1, 10833, 'Ram Das', 'de-45 Kanpur', 'IN', 'India', '09', 'Uttar Pradesh', '208001', 'Abhishek', '9877292322', '45645645', 'Abc@gmail.com', 'www.wasdede.com', 'Kanpur', '2025-07-21 11:27:16.359+05:30', '2025-07-21 11:27:16.359+05:30');


--
-- TOC entry 10742 (class 0 OID 184759)
-- Dependencies: 1806
-- Data for Name: CompoundUnit; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11016 (class 0 OID 186060)
-- Dependencies: 2080
-- Data for Name: ConnectionSettings; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10744 (class 0 OID 184767)
-- Dependencies: 1808
-- Data for Name: Currency; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--

INSERT INTO "10083_10833"."Currency" VALUES (1, 'BDT', 'Afghan Afghani', '', 2, NULL, NULL, NULL, NULL, NULL, true, NULL, '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');


--
-- TOC entry 10748 (class 0 OID 184788)
-- Dependencies: 1812
-- Data for Name: Customer; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10750 (class 0 OID 184798)
-- Dependencies: 1814
-- Data for Name: CustomerBillingAddress; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10754 (class 0 OID 184818)
-- Dependencies: 1818
-- Data for Name: CustomerContactPerson; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10746 (class 0 OID 184777)
-- Dependencies: 1810
-- Data for Name: CustomerGroup; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--

INSERT INTO "10083_10833"."CustomerGroup" VALUES (1, NULL, 'Sundry Debtors', true, true, NULL, '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');


--
-- TOC entry 10798 (class 0 OID 185038)
-- Dependencies: 1862
-- Data for Name: CustomerSettings; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10752 (class 0 OID 184807)
-- Dependencies: 1816
-- Data for Name: CustomerShippingAddress; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11044 (class 0 OID 187172)
-- Dependencies: 2108
-- Data for Name: CustomerTurnOver; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10984 (class 0 OID 185900)
-- Dependencies: 2048
-- Data for Name: DeliveryNote; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11000 (class 0 OID 185970)
-- Dependencies: 2064
-- Data for Name: DeliveryNoteBatchDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10986 (class 0 OID 185907)
-- Dependencies: 2050
-- Data for Name: DeliveryNoteBillTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10990 (class 0 OID 185925)
-- Dependencies: 2054
-- Data for Name: DeliveryNoteDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10992 (class 0 OID 185934)
-- Dependencies: 2056
-- Data for Name: DeliveryNoteDispatchFrom; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10996 (class 0 OID 185952)
-- Dependencies: 2060
-- Data for Name: DeliveryNoteExportDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10994 (class 0 OID 185943)
-- Dependencies: 2058
-- Data for Name: DeliveryNoteItems; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10988 (class 0 OID 185916)
-- Dependencies: 2052
-- Data for Name: DeliveryNoteShipTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10998 (class 0 OID 185961)
-- Dependencies: 2062
-- Data for Name: DeliveryNoteValueDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10782 (class 0 OID 184968)
-- Dependencies: 1846
-- Data for Name: Document; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--

INSERT INTO "10083_10833"."Document" VALUES (1, 'Sales', 'Sales', 3, 'Manual', true, 1, true, 'S', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."Document" VALUES (2, 'Sales Return', 'Sales Return', 3, 'Manual', true, 2, true, 'SR', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."Document" VALUES (3, 'Purchase', 'Purchase', 3, 'Manual', true, 3, true, 'P', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."Document" VALUES (4, 'Purchase Return', 'Purchase Return', 3, 'Manual', true, 4, true, 'PR', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."Document" VALUES (5, 'Sales Debit Note', 'Sales Debit Note', 3, 'Manual', true, 5, true, 'SDN', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."Document" VALUES (6, 'Purchase Credit Note', 'Purchase Credit Note', 3, 'Manual', true, 6, true, 'PCN', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."Document" VALUES (7, 'Quotation', 'Quotation', 3, 'Manual', true, 7, true, 'Q', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');


--
-- TOC entry 10794 (class 0 OID 185024)
-- Dependencies: 1858
-- Data for Name: DocumentLastEntry; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10786 (class 0 OID 184986)
-- Dependencies: 1850
-- Data for Name: DocumentSettings; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--

INSERT INTO "10083_10833"."DocumentSettings" VALUES (1, 1, '{"General": {"RoundOff": true, "SkipDate": false, "AllowDupInvNo": false, "AlertNegStkBal": true, "RoundingOffMethod": 1, "ShowTurnoverFrmCust": false, "GoBackItmListAftEdit": true, "GoBackItmListAftSave": false, "SeparateBuyerConsignee": false, "ViewEditBuyerConsignee": false}, "GSTDetails": {"TCS": true, "ItmGST": true, "ItmCess": false, "RevChrg": false, "EcomGSTIN": false, "EnableCess": false, "GenEInvAftSave": false, "GenEwayAftSave": false, "GenEwayWithEInv": false, "CalcTaxOnCurrSubTotal": true}, "ItemDetails": {"ItmDiscount": false, "IsItmCodePrefix": false, "DiscountWillApply": false, "ItmNameWithItmCode": false, "EnableDiscountOnInv": false, "SeparateLineItmDesc": false, "ItmSalePriceLastTrans": true, "CustSalePriceLastTrans": false, "AllowSameItmAddMultipleTime": true, "AllowToSelectStkItmFrmMulWarehouse": true, "UseDispatchAdrsSelectSingleWarehouse": false}, "OtherDetails": {"PrintLUTNo": false, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintOtherDetails": false, "PrintExportDetails": false, "PrintInvoiceRemark": false, "PrintDispatchDetails": false, "PrintNumbersOfPackage": false, "PrintTermsAndConditions": false, "PrintMarksOrContainerNumber": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "PrintDetails": {"PageSize": 1, "PrintTitle": "", "Orientation": 1, "PrintAftSave": false, "InvoiceFontSize": 1, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintSignatureText": false, "RepeatHeaderOnAllPages": false, "PrintTermsAndConditions": false, "PrintEWayBillWithInvoice": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "AdditionalDetails": {"NumOfPkgs": false, "OrderDtls": false, "ExportDtls": false, "DispatchDtls": false, "MultipleOthChrg": false, "ContainerDetails": false, "PackagingDetails": false, "EnableEWayDetails": false, "AppropriateOthChrg": false, "MarksOrContainerNo": false, "EnableInvoiceRemark": false, "EnableTermAndConditions": false}}', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."DocumentSettings" VALUES (2, 2, '{"General": {"RoundOff": true, "SkipDate": false, "AllowDupInvNo": false, "AlertNegStkBal": true, "OriginalDocNoDate": false, "RoundingOffMethod": 1, "GoBackItmListAftEdit": true, "GoBackItmListAftSave": false, "SeparateBuyerConsignee": false, "ViewEditBuyerConsignee": false, "OriginalDocNoDateCompulsory": false}, "GSTDetails": {"TCS": true, "ItmGST": true, "ItmCess": false, "RevChrg": false, "EcomGSTIN": false, "EnableCess": false, "GenEInvAftSave": false, "GenEwayAftSave": false, "GenEwayWithEInv": false, "CalcTaxOnCurrSubTotal": true}, "ItemDetails": {"ItmDiscount": false, "IsItmCodePrefix": false, "DiscountWillApply": false, "ItmNameWithItmCode": false, "EnableDiscountOnInv": false, "SeparateLineItmDesc": false, "AllowSameItmAddMultipleTime": true, "AllowToSelectStkItmFrmMulWarehouse": true, "UseDispatchAdrsSelectSingleWarehouse": false}, "OtherDetails": {"PrintLUTNo": false, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintOtherDetails": false, "PrintExportDetails": false, "PrintInvoiceRemark": false, "PrintDispatchDetails": false, "PrintNumbersOfPackage": false, "PrintTermsAndConditions": false, "PrintMarksOrContainerNumber": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "PrintDetails": {"PageSize": 1, "PrintTitle": "smksn", "Orientation": 1, "PrintAftSave": false, "InvoiceFontSize": 1, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintSignatureText": false, "RepeatHeaderOnAllPages": false, "PrintTermsAndConditions": false, "PrintEWayBillWithInvoice": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "AdditionalDetails": {"NumOfPkgs": false, "OrderDtls": false, "ImportDtls": false, "ReceiptDtls": false, "MultipleOthChrg": false, "ContainerDetails": false, "PackagingDetails": false, "EnableEWayDetails": false, "AppropriateOthChrg": false, "MarksOrContainerNo": false, "EnableInvoiceRemark": false, "EnableTermAndConditions": false}}', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."DocumentSettings" VALUES (3, 3, '{"General": {"RoundOff": true, "SkipDate": false, "AllowDupInvNo": true, "ViewEditSupplier": false, "RoundingOffMethod": 1, "SupplierInvNoDate": true, "GoBackItmListAftEdit": true, "GoBackItmListAftSave": false, "ShowTurnoverFromSupp": false, "SupplierInvNoDateCompulsory": true}, "GSTDetails": {"TCS": true, "ItmGST": true, "ItmCess": false, "RevChrg": false, "EcomGSTIN": false, "EnableCess": false, "CalcTaxOnCurrSubTotal": true}, "ItemDetails": {"ItmDiscount": false, "IsItmCodePrefix": false, "ItmNameWithItmCode": false, "SeparateLineItmDesc": false, "ItmPurchPriceLastTrans": true, "SuppPurchPriceLastTrans": false, "AllowSameItmAddMultipleTime": true, "SelectWarehouseFirstThenStockItem": false, "AllowToSelectStkItmFrmMulWarehouse": false, "UseDispatchAdrsSelectSingleWarehouse": false}, "OtherDetails": {"PrintLUTNo": false, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintOtherDetails": false, "PrintExportDetails": false, "PrintInvoiceRemark": false, "PrintDispatchDetails": false, "PrintNumbersOfPackage": false, "PrintTermsAndConditions": false, "PrintMarksOrContainerNumber": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "PrintDetails": {"PageSize": 1, "PrintTitle": "kssnk", "Orientation": 1, "PrintAftSave": false, "InvoiceFontSize": 1, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintSignatureText": false, "RepeatHeaderOnAllPages": false, "PrintTermsAndConditions": false, "PrintEWayBillWithInvoice": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "Communication": {"EmailInvAftSave": false, "SelectEmailTemplate": "hhhgh"}, "AdditionalDetails": {"NumOfPkgs": false, "OrderDtls": false, "ImportDtls": false, "ReceiptDtls": false, "MultipleOthChrg": false, "ContainerDetails": false, "PackagingDetails": false, "EnableEWayDetails": false, "EnableSalesPerson": false, "AppropriateOthChrg": false, "MarksOrContainerNo": false, "EnableInvoiceRemark": false, "SeparateExchangeRate": false, "EnableTermAndConditions": false}}', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."DocumentSettings" VALUES (4, 4, '{"General": {"RoundOff": true, "SkipDate": false, "AllowDupInvNo": true, "ViewEditSupplier": false, "OriginalDocNoDate": false, "RoundingOffMethod": 1, "GoBackItmListAftEdit": true, "GoBackItmListAftSave": false, "OriginalDocNoDateCompulsory": false}, "GSTDetails": {"TCS": true, "ItmGST": true, "ItmCess": false, "RevChrg": false, "EcomGSTIN": false, "EnableCess": false, "CalcTaxOnCurrSubTotal": true}, "ItemDetails": {"ItmDiscount": false, "IsItmCodePrefix": false, "ItmNameWithItmCode": false, "SeparateLineItmDesc": false, "AllowSameItmAddMultipleTime": true, "SelectWarehouseFirstThenStockItem": false, "AllowToSelectStkItmFrmMulWarehouse": false, "UseDispatchAdrsSelectSingleWarehouse": false}, "OtherDetails": {"PrintLUTNo": false, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintOtherDetails": false, "PrintExportDetails": false, "PrintInvoiceRemark": false, "PrintDispatchDetails": false, "PrintNumbersOfPackage": false, "PrintTermsAndConditions": false, "PrintMarksOrContainerNumber": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "PrintDetails": {"PageSize": 1, "PrintTitle": "snks", "Orientation": 1, "PrintAftSave": false, "InvoiceFontSize": 1, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintSignatureText": false, "RepeatHeaderOnAllPages": false, "PrintTermsAndConditions": false, "PrintEWayBillWithInvoice": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "Communication": {"EmailInvAftSave": false, "SelectEmailTemplate": "hhhgh"}, "AdditionalDetails": {"NumOfPkgs": false, "OrderDtls": false, "ExportDtls": false, "DispatchDtls": false, "MultipleOthChrg": false, "ContainerDetails": false, "PackagingDetails": false, "EnableEWayDetails": false, "EnableSalesPerson": false, "AppropriateOthChrg": false, "MarksOrContainerNo": false, "EnableInvoiceRemark": false, "SeparateExchangeRate": false, "EnableTermAndConditions": false}}', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."DocumentSettings" VALUES (5, 5, '{"General": {"RoundOff": true, "SkipDate": false, "AllowDupInvNo": false, "AlertNegStkBal": true, "OriginalDocNoDate": false, "RoundingOffMethod": 1, "GoBackItmListAftEdit": true, "GoBackItmListAftSave": false, "SeparateBuyerConsignee": false, "ViewEditBuyerConsignee": false, "OriginalDocNoDateCompulsory": false}, "GSTDetails": {"TCS": true, "ItmGST": true, "ItmCess": false, "RevChrg": false, "EcomGSTIN": false, "EnableCess": false, "GenEInvAftSave": false, "GenEwayAftSave": false, "GenEwayWithEInv": false, "CalcTaxOnCurrSubTotal": true}, "ItemDetails": {"ItmDiscount": false, "IsItmCodePrefix": false, "ItmNameWithItmCode": false, "SeparateLineItmDesc": false, "AllowSameItmAddMultipleTime": true, "SelectWarehouseFirstThenStockItem": false, "AllowToSelectStkItmFrmMulWarehouse": false, "UseDispatchAdrsSelectSingleWarehouse": false}, "OtherDetails": {"PrintLUTNo": false, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintOtherDetails": false, "PrintExportDetails": false, "PrintInvoiceRemark": false, "PrintDispatchDetails": false, "PrintNumbersOfPackage": false, "PrintTermsAndConditions": false, "PrintMarksOrContainerNumber": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "PrintDetails": {"PageSize": 1, "PrintTitle": "smksn", "Orientation": 1, "PrintAftSave": false, "InvoiceFontSize": 1, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintSignatureText": false, "RepeatHeaderOnAllPages": false, "PrintTermsAndConditions": false, "PrintEWayBillWithInvoice": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "Communication": {"EmailInvAftSave": false, "SelecteEmailTemlate": "hhhgh"}, "AdditionalDetails": {"NumOfPkgs": false, "OrderDtls": false, "ImportDtls": false, "ReceiptDtls": false, "MultipleOthChrg": false, "ContainerDetails": false, "PackagingDetails": false, "EnableEWayDetails": false, "EnableSalesPerson": false, "AppropriateOthChrg": false, "MarksOrContainerNo": false, "EnableInvoiceRemark": false, "SeparateExchangeRate": false, "EnableTermAndConditions": false}}', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."DocumentSettings" VALUES (6, 6, '{"General": {"RoundOff": true, "SkipDate": false, "AllowDupInvNo": true, "ViewEditSupplier": false, "OriginalDocNoDate": false, "RoundingOffMethod": 1, "GoBackItmListAftEdit": true, "GoBackItmListAftSave": false, "OriginalDocNoDateCompulsory": false}, "GSTDetails": {"TCS": true, "ItmGST": true, "ItmCess": false, "RevChrg": false, "EcomGSTIN": false, "EnableCess": false, "CalcTaxOnCurrSubTotal": true}, "ItemDetails": {"ItmDiscount": false, "IsItmCodePrefix": false, "ItmNameWithItmCode": false, "SeparateLineItmDesc": false, "AllowSameItmAddMultipleTime": true, "SelectWarehouseFirstThenStockItem": false, "AllowToSelectStkItmFrmMulWarehouse": false, "UseDispatchAdrsSelectSingleWarehouse": false}, "OtherDetails": {"PrintLUTNo": false, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintOtherDetails": false, "PrintExportDetails": false, "PrintInvoiceRemark": false, "PrintDispatchDetails": false, "PrintNumbersOfPackage": false, "PrintTermsAndConditions": false, "PrintMarksOrContainerNumber": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "PrintDetails": {"PageSize": 1, "PrintTitle": "snks", "Orientation": 1, "PrintAftSave": false, "InvoiceFontSize": 1, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintSignatureText": false, "RepeatHeaderOnAllPages": false, "PrintTermsAndConditions": false, "PrintEWayBillWithInvoice": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "Communication": {"EmailInvAftSave": false, "SelectEmailTemplate": "hhhgh"}, "AdditionalDetails": {"NumOfPkgs": false, "OrderDtls": false, "ExportDtls": false, "DispatchDtls": false, "MultipleOthChrg": false, "ContainerDetails": false, "PackagingDetails": false, "EnableEWayDetails": false, "EnableSalesPerson": false, "AppropriateOthChrg": false, "MarksOrContainerNo": false, "EnableInvoiceRemark": false, "SeparateExchangeRate": false, "EnableTermAndConditions": false}}', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."DocumentSettings" VALUES (7, 7, '{"General": {"RoundOff": true, "SkipDate": false, "ViewEditBuyer": false, "RoundingOffMethod": 1, "GoBackItemListAfterEdit": true, "GoBackItemListAfterSave": false}, "GSTDetails": {"ItmGST": true, "ItmCess": false, "EnableCess": false}, "ItemDetails": {"ItmDiscount": false, "IsItmCodePrefix": false, "ItmNameWithItmCode": false, "SeparateLineItmDesc": false, "AllowSameItmAddMultipleTime": true}, "OtherDetails": {"PrintLUTNo": false, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintOtherDetails": false, "PrintExportDetails": false, "PrintInvoiceRemark": false, "PrintDispatchDetails": false, "PrintNumbersOfPackage": false, "PrintTermsAndConditions": false, "PrintMarksOrContainerNumber": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "PrintGeneral": {"Declaration": "We declare that Quotation shows the actual price of the goods described and that all particulars are true and correct. E & O.", "PrintAftSave": false, "SubTitleIfAny": null, "GeneralFontSize": 1, "GeneralPageSize": 1, "GeneralPageTitle": "Tax Quotation", "PrintDeclaration": true, "GeneralOrientation": 1, "PrintSignatureText": false}, "PrintItemDetails": {"PrintHsn": false, "PrintGstRate": false, "PrintItemCode": false, "PrintItemRate": false, "PrintQuantity": false, "PrintSerialNo": false, "PrintDescription": false, "PrintAlternateUnit": false, "PrintDiscountPercent": false, "PrintItemWiseGstDetail": false, "PrintAlternateUnitInSeparateColumn": true}, "AdditionalDetails": {"MultipleOthChrg": false, "ContainerDetails": false, "PackagingDetails": false, "EnableEWayDetails": false, "EnableSalesPerson": false, "EnableInvoiceRemark": false, "EnableTermAndConditions": false, "EnableSeparateExchangeRate": false}, "PrintCompanyDetails": {"PrintLogo": false, "PrintEmail": false, "PrintGstNo": false, "PrintPanNo": false, "PrintPhoneNo": false, "PrintMobileNo": false, "CompanyNameTextSize": 1, "PrintTaxRegistrationNo": false, "RepeatHeaderOnAllPages": false, "CompanyDetailsAlignment": 1}, "CommunicationDetails": {"EmailTemplate": "abc", "EmailAfterSave": false}}', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');


--
-- TOC entry 11004 (class 0 OID 186003)
-- Dependencies: 2068
-- Data for Name: EinvoiceAndEwaylogs; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10958 (class 0 OID 185783)
-- Dependencies: 2022
-- Data for Name: EinvoiceDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11060 (class 0 OID 187397)
-- Dependencies: 2124
-- Data for Name: EinvoiceEwayDispatchDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11062 (class 0 OID 187406)
-- Dependencies: 2126
-- Data for Name: EinvoiceEwayExportDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10732 (class 0 OID 184710)
-- Dependencies: 1796
-- Data for Name: EinvoiceSettings; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10960 (class 0 OID 185794)
-- Dependencies: 2024
-- Data for Name: EwayBillDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11088 (class 0 OID 187837)
-- Dependencies: 2152
-- Data for Name: EwayDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11006 (class 0 OID 186012)
-- Dependencies: 2070
-- Data for Name: EwayLogs; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10734 (class 0 OID 184720)
-- Dependencies: 1798
-- Data for Name: EwaySettings; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11090 (class 0 OID 187846)
-- Dependencies: 2154
-- Data for Name: EwayTransportationDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10730 (class 0 OID 184695)
-- Dependencies: 1794
-- Data for Name: GSTSettings; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10962 (class 0 OID 185803)
-- Dependencies: 2026
-- Data for Name: GridLayout; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10796 (class 0 OID 185031)
-- Dependencies: 1860
-- Data for Name: InventorySettings; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11018 (class 0 OID 186069)
-- Dependencies: 2082
-- Data for Name: LUTMaster; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11010 (class 0 OID 186029)
-- Dependencies: 2074
-- Data for Name: LastDocumentDate; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11080 (class 0 OID 187711)
-- Dependencies: 2144
-- Data for Name: MasterAuditLogs; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11091 (class 0 OID 187875)
-- Dependencies: 2155
-- Data for Name: NICCredentials; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11014 (class 0 OID 186046)
-- Dependencies: 2078
-- Data for Name: OtherCharges; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11034 (class 0 OID 186141)
-- Dependencies: 2098
-- Data for Name: PCNBatchDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11042 (class 0 OID 186181)
-- Dependencies: 2106
-- Data for Name: PCNItemWareHouse; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10800 (class 0 OID 185047)
-- Dependencies: 1864
-- Data for Name: PrintSettings; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10964 (class 0 OID 185812)
-- Dependencies: 2028
-- Data for Name: PrintTemplate; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10826 (class 0 OID 185170)
-- Dependencies: 1890
-- Data for Name: Purchase; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10844 (class 0 OID 185253)
-- Dependencies: 1908
-- Data for Name: PurchaseBatchDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10828 (class 0 OID 185181)
-- Dependencies: 1892
-- Data for Name: PurchaseBillFrom; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11026 (class 0 OID 186104)
-- Dependencies: 2090
-- Data for Name: PurchaseCreditNote; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11030 (class 0 OID 186123)
-- Dependencies: 2094
-- Data for Name: PurchaseCreditNoteBillFrom; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11020 (class 0 OID 186077)
-- Dependencies: 2084
-- Data for Name: PurchaseCreditNoteDispatchFrom; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11040 (class 0 OID 186172)
-- Dependencies: 2104
-- Data for Name: PurchaseCreditNoteEwayBillsDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11028 (class 0 OID 186114)
-- Dependencies: 2092
-- Data for Name: PurchaseCreditNoteExportDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11022 (class 0 OID 186086)
-- Dependencies: 2086
-- Data for Name: PurchaseCreditNoteItems; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11038 (class 0 OID 186159)
-- Dependencies: 2102
-- Data for Name: PurchaseCreditNoteOtherCharges; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11036 (class 0 OID 186150)
-- Dependencies: 2100
-- Data for Name: PurchaseCreditNoteOtherDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11032 (class 0 OID 186132)
-- Dependencies: 2096
-- Data for Name: PurchaseCreditNoteShipTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11024 (class 0 OID 186095)
-- Dependencies: 2088
-- Data for Name: PurchaseCreditNoteValueDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10842 (class 0 OID 185244)
-- Dependencies: 1906
-- Data for Name: PurchaseEwayBillsDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10838 (class 0 OID 185226)
-- Dependencies: 1902
-- Data for Name: PurchaseImportDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10848 (class 0 OID 185275)
-- Dependencies: 1912
-- Data for Name: PurchaseItemWareHouse; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10836 (class 0 OID 185217)
-- Dependencies: 1900
-- Data for Name: PurchaseItems; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10868 (class 0 OID 185363)
-- Dependencies: 1932
-- Data for Name: PurchaseOrder; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10884 (class 0 OID 185433)
-- Dependencies: 1948
-- Data for Name: PurchaseOrderBatchDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10870 (class 0 OID 185370)
-- Dependencies: 1934
-- Data for Name: PurchaseOrderBillTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10874 (class 0 OID 185388)
-- Dependencies: 1938
-- Data for Name: PurchaseOrderDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10876 (class 0 OID 185397)
-- Dependencies: 1940
-- Data for Name: PurchaseOrderDispatchFrom; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10880 (class 0 OID 185415)
-- Dependencies: 1944
-- Data for Name: PurchaseOrderExportDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10878 (class 0 OID 185406)
-- Dependencies: 1942
-- Data for Name: PurchaseOrderItems; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10872 (class 0 OID 185379)
-- Dependencies: 1936
-- Data for Name: PurchaseOrderShipTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10882 (class 0 OID 185424)
-- Dependencies: 1946
-- Data for Name: PurchaseOrderValueDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10846 (class 0 OID 185262)
-- Dependencies: 1910
-- Data for Name: PurchaseOtherCharges; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10832 (class 0 OID 185199)
-- Dependencies: 1896
-- Data for Name: PurchaseOtherDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10834 (class 0 OID 185208)
-- Dependencies: 1898
-- Data for Name: PurchaseReceiptDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10940 (class 0 OID 185697)
-- Dependencies: 2004
-- Data for Name: PurchaseReturn; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10948 (class 0 OID 185734)
-- Dependencies: 2012
-- Data for Name: PurchaseReturnBatchDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10944 (class 0 OID 185716)
-- Dependencies: 2008
-- Data for Name: PurchaseReturnBillFrom; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10934 (class 0 OID 185670)
-- Dependencies: 1998
-- Data for Name: PurchaseReturnDispatchFrom; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10954 (class 0 OID 185765)
-- Dependencies: 2018
-- Data for Name: PurchaseReturnEwayBillsDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10942 (class 0 OID 185707)
-- Dependencies: 2006
-- Data for Name: PurchaseReturnExportDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10956 (class 0 OID 185774)
-- Dependencies: 2020
-- Data for Name: PurchaseReturnItemWareHouse; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10936 (class 0 OID 185679)
-- Dependencies: 2000
-- Data for Name: PurchaseReturnItems; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10952 (class 0 OID 185752)
-- Dependencies: 2016
-- Data for Name: PurchaseReturnOtherCharges; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10950 (class 0 OID 185743)
-- Dependencies: 2014
-- Data for Name: PurchaseReturnOtherDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10946 (class 0 OID 185725)
-- Dependencies: 2010
-- Data for Name: PurchaseReturnShipTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10938 (class 0 OID 185688)
-- Dependencies: 2002
-- Data for Name: PurchaseReturnValueDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11002 (class 0 OID 185979)
-- Dependencies: 2066
-- Data for Name: PurchaseSettings; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10830 (class 0 OID 185190)
-- Dependencies: 1894
-- Data for Name: PurchaseShipTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10840 (class 0 OID 185235)
-- Dependencies: 1904
-- Data for Name: PurchaseValueDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11050 (class 0 OID 187217)
-- Dependencies: 2114
-- Data for Name: Quotation; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11056 (class 0 OID 187249)
-- Dependencies: 2120
-- Data for Name: QuotationItems; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11054 (class 0 OID 187236)
-- Dependencies: 2118
-- Data for Name: QuotationOtherCharges; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11052 (class 0 OID 187227)
-- Dependencies: 2116
-- Data for Name: QuotationTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11058 (class 0 OID 187258)
-- Dependencies: 2122
-- Data for Name: QuotationValueDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10966 (class 0 OID 185821)
-- Dependencies: 2030
-- Data for Name: ReceiptNote; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10982 (class 0 OID 185891)
-- Dependencies: 2046
-- Data for Name: ReceiptNoteBatchDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10968 (class 0 OID 185828)
-- Dependencies: 2032
-- Data for Name: ReceiptNoteBillTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10972 (class 0 OID 185846)
-- Dependencies: 2036
-- Data for Name: ReceiptNoteDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10974 (class 0 OID 185855)
-- Dependencies: 2038
-- Data for Name: ReceiptNoteDispatchFrom; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10978 (class 0 OID 185873)
-- Dependencies: 2042
-- Data for Name: ReceiptNoteExportDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10976 (class 0 OID 185864)
-- Dependencies: 2040
-- Data for Name: ReceiptNoteItems; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10970 (class 0 OID 185837)
-- Dependencies: 2034
-- Data for Name: ReceiptNoteShipTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10980 (class 0 OID 185882)
-- Dependencies: 2044
-- Data for Name: ReceiptNoteValueDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10802 (class 0 OID 185056)
-- Dependencies: 1866
-- Data for Name: Sales; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11082 (class 0 OID 187788)
-- Dependencies: 2146
-- Data for Name: SalesAuditLogs; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10822 (class 0 OID 185152)
-- Dependencies: 1886
-- Data for Name: SalesBatchDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10804 (class 0 OID 185067)
-- Dependencies: 1868
-- Data for Name: SalesBillTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11064 (class 0 OID 187428)
-- Dependencies: 2128
-- Data for Name: SalesContainerList; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10910 (class 0 OID 185556)
-- Dependencies: 1974
-- Data for Name: SalesDebitNote; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11086 (class 0 OID 187806)
-- Dependencies: 2150
-- Data for Name: SalesDebitNoteAuditLogs; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10928 (class 0 OID 185639)
-- Dependencies: 1992
-- Data for Name: SalesDebitNoteBatchDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10912 (class 0 OID 185567)
-- Dependencies: 1976
-- Data for Name: SalesDebitNoteBillTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11068 (class 0 OID 187444)
-- Dependencies: 2132
-- Data for Name: SalesDebitNoteContainerList; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10926 (class 0 OID 185630)
-- Dependencies: 1990
-- Data for Name: SalesDebitNoteEwayBillsDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11095 (class 0 OID 188292)
-- Dependencies: 2159
-- Data for Name: SalesDebitNoteHSNSummary; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10922 (class 0 OID 185612)
-- Dependencies: 1986
-- Data for Name: SalesDebitNoteImportDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10932 (class 0 OID 185661)
-- Dependencies: 1996
-- Data for Name: SalesDebitNoteItemWareHouse; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10920 (class 0 OID 185603)
-- Dependencies: 1984
-- Data for Name: SalesDebitNoteItems; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11103 (class 0 OID 188638)
-- Dependencies: 2167
-- Data for Name: SalesDebitNoteMain; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10930 (class 0 OID 185648)
-- Dependencies: 1994
-- Data for Name: SalesDebitNoteOtherCharges; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10916 (class 0 OID 185585)
-- Dependencies: 1980
-- Data for Name: SalesDebitNoteOtherDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11070 (class 0 OID 187451)
-- Dependencies: 2134
-- Data for Name: SalesDebitNotePackingList; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10918 (class 0 OID 185594)
-- Dependencies: 1982
-- Data for Name: SalesDebitNoteReceiptDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10914 (class 0 OID 185576)
-- Dependencies: 1978
-- Data for Name: SalesDebitNoteShipTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10924 (class 0 OID 185621)
-- Dependencies: 1988
-- Data for Name: SalesDebitNoteValueDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10812 (class 0 OID 185107)
-- Dependencies: 1876
-- Data for Name: SalesDispatchDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10820 (class 0 OID 185143)
-- Dependencies: 1884
-- Data for Name: SalesEwayBillsDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10816 (class 0 OID 185125)
-- Dependencies: 1880
-- Data for Name: SalesExportDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11093 (class 0 OID 188278)
-- Dependencies: 2157
-- Data for Name: SalesHSNSummary; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10824 (class 0 OID 185161)
-- Dependencies: 1888
-- Data for Name: SalesItemWareHouse; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10814 (class 0 OID 185116)
-- Dependencies: 1878
-- Data for Name: SalesItems; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11099 (class 0 OID 188520)
-- Dependencies: 2163
-- Data for Name: SalesMain; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10850 (class 0 OID 185284)
-- Dependencies: 1914
-- Data for Name: SalesOrder; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10866 (class 0 OID 185354)
-- Dependencies: 1930
-- Data for Name: SalesOrderBatchDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10852 (class 0 OID 185291)
-- Dependencies: 1916
-- Data for Name: SalesOrderBillTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10856 (class 0 OID 185309)
-- Dependencies: 1920
-- Data for Name: SalesOrderDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10858 (class 0 OID 185318)
-- Dependencies: 1922
-- Data for Name: SalesOrderDispatchFrom; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10862 (class 0 OID 185336)
-- Dependencies: 1926
-- Data for Name: SalesOrderExportDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10860 (class 0 OID 185327)
-- Dependencies: 1924
-- Data for Name: SalesOrderItems; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10854 (class 0 OID 185300)
-- Dependencies: 1918
-- Data for Name: SalesOrderShipTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10864 (class 0 OID 185345)
-- Dependencies: 1928
-- Data for Name: SalesOrderValueDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10810 (class 0 OID 185094)
-- Dependencies: 1874
-- Data for Name: SalesOtherCharges; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10808 (class 0 OID 185085)
-- Dependencies: 1872
-- Data for Name: SalesOtherDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11066 (class 0 OID 187435)
-- Dependencies: 2130
-- Data for Name: SalesPackingList; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11008 (class 0 OID 186021)
-- Dependencies: 2072
-- Data for Name: SalesPerson; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--

INSERT INTO "10083_10833"."SalesPerson" VALUES (1, 'Primary SalesPerson', NULL, NULL, NULL, true, '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735', true);


--
-- TOC entry 10886 (class 0 OID 185442)
-- Dependencies: 1950
-- Data for Name: SalesReturn; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11084 (class 0 OID 187797)
-- Dependencies: 2148
-- Data for Name: SalesReturnAuditLogs; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10904 (class 0 OID 185525)
-- Dependencies: 1968
-- Data for Name: SalesReturnBatchDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10888 (class 0 OID 185453)
-- Dependencies: 1952
-- Data for Name: SalesReturnBillTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11072 (class 0 OID 187482)
-- Dependencies: 2136
-- Data for Name: SalesReturnContainerList; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10902 (class 0 OID 185516)
-- Dependencies: 1966
-- Data for Name: SalesReturnEwayBillsDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11097 (class 0 OID 188306)
-- Dependencies: 2161
-- Data for Name: SalesReturnHSNSummary; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10898 (class 0 OID 185498)
-- Dependencies: 1962
-- Data for Name: SalesReturnImportDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10908 (class 0 OID 185547)
-- Dependencies: 1972
-- Data for Name: SalesReturnItemWareHouse; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10896 (class 0 OID 185489)
-- Dependencies: 1960
-- Data for Name: SalesReturnItems; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11101 (class 0 OID 188579)
-- Dependencies: 2165
-- Data for Name: SalesReturnMain; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10906 (class 0 OID 185534)
-- Dependencies: 1970
-- Data for Name: SalesReturnOtherCharges; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10892 (class 0 OID 185471)
-- Dependencies: 1956
-- Data for Name: SalesReturnOtherDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11074 (class 0 OID 187489)
-- Dependencies: 2138
-- Data for Name: SalesReturnPackingList; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10894 (class 0 OID 185480)
-- Dependencies: 1958
-- Data for Name: SalesReturnReceiptDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10890 (class 0 OID 185462)
-- Dependencies: 1954
-- Data for Name: SalesReturnShipTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10900 (class 0 OID 185507)
-- Dependencies: 1964
-- Data for Name: SalesReturnValueDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10806 (class 0 OID 185076)
-- Dependencies: 1870
-- Data for Name: SalesShipTo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10818 (class 0 OID 185134)
-- Dependencies: 1882
-- Data for Name: SalesValueDetails; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10774 (class 0 OID 184924)
-- Dependencies: 1838
-- Data for Name: Shipping; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10770 (class 0 OID 184899)
-- Dependencies: 1834
-- Data for Name: SimpleUnit; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10764 (class 0 OID 184868)
-- Dependencies: 1828
-- Data for Name: StockCategory; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--

INSERT INTO "10083_10833"."StockCategory" VALUES (1, NULL, 'Primary Category', true, true, NULL, '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');


--
-- TOC entry 10758 (class 0 OID 184837)
-- Dependencies: 1822
-- Data for Name: StockGroup; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--

INSERT INTO "10083_10833"."StockGroup" VALUES (1, NULL, 'Primary Group', true, true, NULL, false, '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');


--
-- TOC entry 10768 (class 0 OID 184890)
-- Dependencies: 1832
-- Data for Name: StockGroupGSTInfo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10756 (class 0 OID 184827)
-- Dependencies: 1820
-- Data for Name: StockItem; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 11012 (class 0 OID 186036)
-- Dependencies: 2076
-- Data for Name: StockItemBalance; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10760 (class 0 OID 184849)
-- Dependencies: 1824
-- Data for Name: StockItemDescription; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10766 (class 0 OID 184881)
-- Dependencies: 1830
-- Data for Name: StockItemGSTInfo; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10762 (class 0 OID 184859)
-- Dependencies: 1826
-- Data for Name: StockItemOpeningBalance; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10778 (class 0 OID 184949)
-- Dependencies: 1842
-- Data for Name: Supplier; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10780 (class 0 OID 184959)
-- Dependencies: 1844
-- Data for Name: SupplierAddress; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10776 (class 0 OID 184936)
-- Dependencies: 1840
-- Data for Name: SupplierGroup; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--

INSERT INTO "10083_10833"."SupplierGroup" VALUES (1, NULL, 'Sundry Creditors', true, true, NULL, '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');


--
-- TOC entry 11076 (class 0 OID 187510)
-- Dependencies: 2140
-- Data for Name: Template; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--

INSERT INTO "10083_10833"."Template" VALUES (1, 'Sales', 'Sales', 3, 'Manual', true, 1, true, 'S', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."Template" VALUES (2, 'Sales Return', 'Sales Return', 3, 'Manual', true, 2, true, 'SR', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."Template" VALUES (3, 'Purchase', 'Purchase', 3, 'Manual', true, 3, true, 'P', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."Template" VALUES (4, 'Purchase Return', 'Purchase Return', 3, 'Manual', true, 4, true, 'PR', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."Template" VALUES (5, 'Sales Debit Note', 'Sales Debit Note', 3, 'Manual', true, 5, true, 'SDN', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."Template" VALUES (6, 'Purchase Credit Note', 'Purchase Credit Note', 3, 'Manual', true, 6, true, 'PCN', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."Template" VALUES (7, 'Quotation', 'Quotation', 3, 'Manual', true, 7, true, 'Q', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');


--
-- TOC entry 11078 (class 0 OID 187521)
-- Dependencies: 2142
-- Data for Name: TemplateSettings; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--

INSERT INTO "10083_10833"."TemplateSettings" VALUES (3, 3, '{"General": {"RoundOff": true, "SkipDate": false, "AllowDupInvNo": true, "ViewEditSupplier": false, "RoundingOffMethod": 1, "SupplierInvNoDate": true, "GoBackItmListAftEdit": true, "GoBackItmListAftSave": false, "ShowTurnoverFromSupp": false, "SupplierInvNoDateCompulsory": true}, "GSTDetails": {"TCS": true, "ItmGST": true, "ItmCess": false, "RevChrg": false, "EcomGSTIN": false, "EnableCess": false, "CalcTaxOnCurrSubTotal": true}, "ItemDetails": {"ItmDiscount": false, "IsItmCodePrefix": false, "ItmNameWithItmCode": false, "SeparateLineItmDesc": false, "ItmPurchPriceLastTrans": true, "SuppPurchPriceLastTrans": false, "AllowSameItmAddMultipleTime": true, "SelectWarehouseFirstThenStockItem": false, "AllowToSelectStkItmFrmMulWarehouse": false, "UseDispatchAdrsSelectSingleWarehouse": false}, "OtherDetails": {"PrintLUTNo": false, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintOtherDetails": false, "PrintExportDetails": false, "PrintInvoiceRemark": false, "PrintDispatchDetails": false, "PrintNumbersOfPackage": false, "PrintTermsAndConditions": false, "PrintMarksOrContainerNumber": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "PrintDetails": {"PageSize": 1, "PrintTitle": "kssnk", "Orientation": 1, "PrintAftSave": false, "InvoiceFontSize": 1, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintSignatureText": false, "RepeatHeaderOnAllPages": false, "PrintTermsAndConditions": false, "PrintEWayBillWithInvoice": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "Communication": {"EmailInvAftSave": false, "SelectEmailTemplate": "hhhgh"}, "AdditionalDetails": {"NumOfPkgs": false, "OrderDtls": false, "ImportDtls": false, "ReceiptDtls": false, "MultipleOthChrg": false, "ContainerDetails": false, "PackagingDetails": false, "EnableEWayDetails": false, "EnableSalesPerson": false, "AppropriateOthChrg": false, "MarksOrContainerNo": false, "EnableInvoiceRemark": false, "SeparateExchangeRate": false, "EnableTermAndConditions": false}}', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."TemplateSettings" VALUES (4, 4, '{"General": {"RoundOff": true, "SkipDate": false, "AllowDupInvNo": true, "ViewEditSupplier": false, "OriginalDocNoDate": false, "RoundingOffMethod": 1, "GoBackItmListAftEdit": true, "GoBackItmListAftSave": false, "OriginalDocNoDateCompulsory": false}, "GSTDetails": {"TCS": true, "ItmGST": true, "ItmCess": false, "RevChrg": false, "EcomGSTIN": false, "EnableCess": false, "CalcTaxOnCurrSubTotal": true}, "ItemDetails": {"ItmDiscount": false, "IsItmCodePrefix": false, "ItmNameWithItmCode": false, "SeparateLineItmDesc": false, "AllowSameItmAddMultipleTime": true, "SelectWarehouseFirstThenStockItem": false, "AllowToSelectStkItmFrmMulWarehouse": false, "UseDispatchAdrsSelectSingleWarehouse": false}, "OtherDetails": {"PrintLUTNo": false, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintOtherDetails": false, "PrintExportDetails": false, "PrintInvoiceRemark": false, "PrintDispatchDetails": false, "PrintNumbersOfPackage": false, "PrintTermsAndConditions": false, "PrintMarksOrContainerNumber": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "PrintDetails": {"PageSize": 1, "PrintTitle": "snks", "Orientation": 1, "PrintAftSave": false, "InvoiceFontSize": 1, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintSignatureText": false, "RepeatHeaderOnAllPages": false, "PrintTermsAndConditions": false, "PrintEWayBillWithInvoice": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "Communication": {"EmailInvAftSave": false, "SelectEmailTemplate": "hhhgh"}, "AdditionalDetails": {"NumOfPkgs": false, "OrderDtls": false, "ExportDtls": false, "DispatchDtls": false, "MultipleOthChrg": false, "ContainerDetails": false, "PackagingDetails": false, "EnableEWayDetails": false, "EnableSalesPerson": false, "AppropriateOthChrg": false, "MarksOrContainerNo": false, "EnableInvoiceRemark": false, "SeparateExchangeRate": false, "EnableTermAndConditions": false}}', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."TemplateSettings" VALUES (6, 6, '{"General": {"RoundOff": true, "SkipDate": false, "AllowDupInvNo": true, "ViewEditSupplier": false, "OriginalDocNoDate": false, "RoundingOffMethod": 1, "GoBackItmListAftEdit": true, "GoBackItmListAftSave": false, "OriginalDocNoDateCompulsory": false}, "GSTDetails": {"TCS": true, "ItmGST": true, "ItmCess": false, "RevChrg": false, "EcomGSTIN": false, "EnableCess": false, "CalcTaxOnCurrSubTotal": true}, "ItemDetails": {"ItmDiscount": false, "IsItmCodePrefix": false, "ItmNameWithItmCode": false, "SeparateLineItmDesc": false, "AllowSameItmAddMultipleTime": true, "SelectWarehouseFirstThenStockItem": false, "AllowToSelectStkItmFrmMulWarehouse": false, "UseDispatchAdrsSelectSingleWarehouse": false}, "OtherDetails": {"PrintLUTNo": false, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintOtherDetails": false, "PrintExportDetails": false, "PrintInvoiceRemark": false, "PrintDispatchDetails": false, "PrintNumbersOfPackage": false, "PrintTermsAndConditions": false, "PrintMarksOrContainerNumber": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "PrintDetails": {"PageSize": 1, "PrintTitle": "snks", "Orientation": 1, "PrintAftSave": false, "InvoiceFontSize": 1, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintSignatureText": false, "RepeatHeaderOnAllPages": false, "PrintTermsAndConditions": false, "PrintEWayBillWithInvoice": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "Communication": {"EmailInvAftSave": false, "SelectEmailTemplate": "hhhgh"}, "AdditionalDetails": {"NumOfPkgs": false, "OrderDtls": false, "ExportDtls": false, "DispatchDtls": false, "MultipleOthChrg": false, "ContainerDetails": false, "PackagingDetails": false, "EnableEWayDetails": false, "EnableSalesPerson": false, "AppropriateOthChrg": false, "MarksOrContainerNo": false, "EnableInvoiceRemark": false, "SeparateExchangeRate": false, "EnableTermAndConditions": false}}', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."TemplateSettings" VALUES (7, 7, '{"General": {"RoundOff": true, "SkipDate": false, "ViewEditBuyer": false, "RoundingOffMethod": 1, "GoBackItemListAfterEdit": true, "GoBackItemListAfterSave": false}, "GSTDetails": {"ItmGST": true, "ItmCess": false, "EnableCess": false}, "ItemDetails": {"ItmDiscount": false, "IsItmCodePrefix": false, "ItmNameWithItmCode": false, "SeparateLineItmDesc": false, "AllowSameItmAddMultipleTime": true}, "OtherDetails": {"PrintLUTNo": false, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintOtherDetails": false, "PrintExportDetails": false, "PrintInvoiceRemark": false, "PrintDispatchDetails": false, "PrintNumbersOfPackage": false, "PrintTermsAndConditions": false, "PrintMarksOrContainerNumber": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "PrintGeneral": {"Declaration": "We declare that Quotation shows the actual price of the goods described and that all particulars are true and correct. E & O.", "PrintAftSave": false, "SubTitleIfAny": null, "GeneralFontSize": 1, "GeneralPageSize": 1, "GeneralPageTitle": "Tax Quotation", "PrintDeclaration": true, "GeneralOrientation": 1, "PrintSignatureText": false}, "PrintItemDetails": {"PrintHsn": false, "PrintGstRate": false, "PrintItemCode": false, "PrintItemRate": false, "PrintQuantity": false, "PrintSerialNo": false, "PrintDescription": false, "PrintAlternateUnit": false, "PrintDiscountPercent": false, "PrintItemWiseGstDetail": false, "PrintAlternateUnitInSeparateColumn": true}, "AdditionalDetails": {"MultipleOthChrg": false, "ContainerDetails": false, "PackagingDetails": false, "EnableEWayDetails": false, "EnableSalesPerson": false, "EnableInvoiceRemark": false, "EnableTermAndConditions": false, "EnableSeparateExchangeRate": false}, "PrintCompanyDetails": {"PrintLogo": false, "PrintEmail": false, "PrintGstNo": false, "PrintPanNo": false, "PrintPhoneNo": false, "PrintMobileNo": false, "CompanyNameTextSize": 1, "PrintTaxRegistrationNo": false, "RepeatHeaderOnAllPages": false, "CompanyDetailsAlignment": 1}, "CommunicationDetails": {"EmailTemplate": "abc", "EmailAfterSave": false}}', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."TemplateSettings" VALUES (1, 1, '{"General": {"RoundOff": true, "SkipDate": false, "AllowDupInvNo": false, "AlertNegStkBal": true, "RoundingOffMethod": 1, "ShowTurnoverFrmCust": false, "GoBackItmListAftEdit": true, "GoBackItmListAftSave": false, "SeparateBuyerConsignee": false, "ViewEditBuyerConsignee": false}, "GSTDetails": {"TCS": true, "ItmGST": true, "ItmCess": false, "RevChrg": false, "EcomGSTIN": false, "EnableCess": false, "GenEInvAftSave": false, "GenEwayAftSave": false, "GenEwayWithEInv": false, "CalcTaxOnCurrSubTotal": true}, "ItemDetails": {"ItmDiscount": false, "IsItmCodePrefix": false, "DiscountWillApply": false, "ItmNameWithItmCode": false, "EnableDiscountOnInv": false, "SeparateLineItmDesc": false, "ItmSalePriceLastTrans": true, "CustSalePriceLastTrans": false, "AllowSameItmAddMultipleTime": true, "AllowToSelectStkItmFrmMulWarehouse": true, "UseDispatchAdrsSelectSingleWarehouse": false}, "OtherDetails": {"PrintUPI": true, "PrintIFSC": true, "PrintLUTNo": false, "PrintSwift": false, "PrintNostro": false, "PrintAddress": false, "PrintHSNSummary": false, "PrintBankDetails": true, "PrintOtherDetails": false, "PrintExportDetails": false, "PrintInvoiceRemark": false, "PrintDispatchDetails": false, "PrintNumbersOfPackage": false, "PrintTermsAndConditions": false, "PrintMarksOrContainerNumber": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "PrintDetails": {"PageSize": 1, "PrintTitle": "", "Orientation": 1, "PrintAftSave": false, "InvoiceFontSize": 1, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintSignatureText": false, "RepeatHeaderOnAllPages": false, "PrintTermsAndConditions": false, "PrintEWayBillWithInvoice": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "AdditionalDetails": {"NumOfPkgs": false, "OrderDtls": false, "ExportDtls": false, "DispatchDtls": false, "MultipleOthChrg": false, "ContainerDetails": false, "PackagingDetails": false, "EnableEWayDetails": false, "AppropriateOthChrg": false, "MarksOrContainerNo": false, "EnableInvoiceRemark": false, "EnableTermAndConditions": false}}', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."TemplateSettings" VALUES (2, 2, '{"General": {"RoundOff": true, "SkipDate": false, "AllowDupInvNo": false, "AlertNegStkBal": true, "OriginalDocNoDate": false, "RoundingOffMethod": 1, "GoBackItmListAftEdit": true, "GoBackItmListAftSave": false, "SeparateBuyerConsignee": false, "ViewEditBuyerConsignee": false, "OriginalDocNoDateCompulsory": false}, "GSTDetails": {"TCS": true, "ItmGST": true, "ItmCess": false, "RevChrg": false, "EcomGSTIN": false, "EnableCess": false, "GenEInvAftSave": false, "GenEwayAftSave": false, "GenEwayWithEInv": false, "CalcTaxOnCurrSubTotal": true}, "ItemDetails": {"ItmDiscount": false, "IsItmCodePrefix": false, "DiscountWillApply": false, "ItmNameWithItmCode": false, "EnableDiscountOnInv": false, "SeparateLineItmDesc": false, "AllowSameItmAddMultipleTime": true, "AllowToSelectStkItmFrmMulWarehouse": true, "UseDispatchAdrsSelectSingleWarehouse": false}, "OtherDetails": {"PrintUPI": true, "PrintIFSC": true, "PrintLUTNo": false, "PrintSwift": false, "PrintNostro": false, "PrintAddress": false, "PrintHSNSummary": false, "PrintBankDetails": true, "PrintOtherDetails": false, "PrintExportDetails": false, "PrintInvoiceRemark": false, "PrintDispatchDetails": false, "PrintNumbersOfPackage": false, "PrintTermsAndConditions": false, "PrintMarksOrContainerNumber": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "PrintDetails": {"PageSize": 1, "PrintTitle": "smksn", "Orientation": 1, "PrintAftSave": false, "InvoiceFontSize": 1, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintSignatureText": false, "RepeatHeaderOnAllPages": false, "PrintTermsAndConditions": false, "PrintEWayBillWithInvoice": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "AdditionalDetails": {"NumOfPkgs": false, "OrderDtls": false, "ImportDtls": false, "ReceiptDtls": false, "MultipleOthChrg": false, "ContainerDetails": false, "PackagingDetails": false, "EnableEWayDetails": false, "AppropriateOthChrg": false, "MarksOrContainerNo": false, "EnableInvoiceRemark": false, "EnableTermAndConditions": false}}', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');
INSERT INTO "10083_10833"."TemplateSettings" VALUES (5, 5, '{"General": {"RoundOff": true, "SkipDate": false, "AllowDupInvNo": false, "AlertNegStkBal": true, "OriginalDocNoDate": false, "RoundingOffMethod": 1, "GoBackItmListAftEdit": true, "GoBackItmListAftSave": false, "SeparateBuyerConsignee": false, "ViewEditBuyerConsignee": false, "OriginalDocNoDateCompulsory": false}, "GSTDetails": {"TCS": true, "ItmGST": true, "ItmCess": false, "RevChrg": false, "EcomGSTIN": false, "EnableCess": false, "GenEInvAftSave": false, "GenEwayAftSave": false, "GenEwayWithEInv": false, "CalcTaxOnCurrSubTotal": true}, "ItemDetails": {"ItmDiscount": false, "IsItmCodePrefix": false, "ItmNameWithItmCode": false, "SeparateLineItmDesc": false, "AllowSameItmAddMultipleTime": true, "SelectWarehouseFirstThenStockItem": false, "AllowToSelectStkItmFrmMulWarehouse": false, "UseDispatchAdrsSelectSingleWarehouse": false}, "OtherDetails": {"PrintUPI": true, "PrintIFSC": true, "PrintLUTNo": false, "PrintSwift": false, "PrintNostro": false, "PrintAddress": false, "PrintHSNSummary": false, "PrintBankDetails": true, "PrintOtherDetails": false, "PrintExportDetails": false, "PrintInvoiceRemark": false, "PrintDispatchDetails": false, "PrintNumbersOfPackage": false, "PrintTermsAndConditions": false, "PrintMarksOrContainerNumber": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "PrintDetails": {"PageSize": 1, "PrintTitle": "smksn", "Orientation": 1, "PrintAftSave": false, "InvoiceFontSize": 1, "PrintHSNSummary": false, "PrintBankDetails": false, "PrintSignatureText": false, "RepeatHeaderOnAllPages": false, "PrintTermsAndConditions": false, "PrintEWayBillWithInvoice": false, "PrintOriginalDuplicateOnSaleInvoice": false}, "Communication": {"EmailInvAftSave": false, "SelecteEmailTemlate": "hhhgh"}, "AdditionalDetails": {"NumOfPkgs": false, "OrderDtls": false, "ImportDtls": false, "ReceiptDtls": false, "MultipleOthChrg": false, "ContainerDetails": false, "PackagingDetails": false, "EnableEWayDetails": false, "EnableSalesPerson": false, "AppropriateOthChrg": false, "MarksOrContainerNo": false, "EnableInvoiceRemark": false, "SeparateExchangeRate": false, "EnableTermAndConditions": false}}', '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');


--
-- TOC entry 10728 (class 0 OID 184689)
-- Dependencies: 1792
-- Data for Name: Tenant_Migrations; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--

INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20230610092012-migration_0_0_1.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240701110318-migration_0_0_2.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240731051151-migration_0_0_3.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240808050919-migration_0_0_4.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240808064939-migration_0_0_5.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240813052841-migration_0_0_6.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240813132647-migration_0_0_7.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240814104611-migration_0_0_8.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240821062608-migration_0_0_9.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240822053955-migration_0_0_10.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240822095313-migration_0_0_11.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240823100902-migration_0_0_12.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240824062323-migration_0_0_13.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240826060307-migration_0_0_14.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240827052000-migration_0_0_15.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240827111025-migration_0_0_16.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240828063515-migration_0_0_17.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240828093534-migration_0_0_18.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240829104042-migration_0_0_19.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240830060955-migration_0_0_20.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240831064600-migration_0_0_21.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240831105217-migration_0_0_22.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240902054608-migration_0_0_23.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240903070843-migration_0_0_24.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240912060646-migration_0_0_25.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240913131409-migration_0_0_26.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240916065006-migration_0_0_27.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240920072519-migration_0_0_28.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20240927094012-migration_0_0_29.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20241104121522-migration_0_0_30.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20241114052732-migration_0_0_31.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20241114061815-migration_0_0_32.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20241114061826-migration_0_0_33.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20241116061617-migration_0_0_34.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20241122130453-migration_0_0_35.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20241218105216-migration_0_0_36.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20241218111536-migration_0_0_37.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20241218111557-migration_0_0_38.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20241231102711-migration_0_0_39.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250305073859-migration_0_0_40.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250305073859-migration_0_0_41.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250315055950-migration_0_0_42.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250317061755-migration_0_0_43.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250317061800-migration_0_0_44.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250317061800-migration_0_0_45.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250317061800-migration_0_0_46.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250317061800-migration_0_0_47.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250327092744-migration_0_0_48.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250401055517-migration_0_0_49.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250402101558-migration_0_0_50.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250407062535-migration_0_0_51.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250408091802-migration_0_0_52.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250411114345-migration_0_0_53.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250415060546-migration_0_0_54.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250417064730-migration_0_0_55.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250419095659-migration_0_0_56.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250421095208-migration_0_0_57.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250423053749-migration_0_0_58.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250424080938-migration_0_0_59.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250424082056-migration_0_0_60.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250426080757-migration_0_0_61.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250426125208-migration_0_0_62.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250428071224-migration_0_0_63.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250428085733-migration_0_0_64.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250428091707-migration_0_0_65.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250428102417-migration_0_0_66.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250429065432-migration_0_0_67.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250430050730-migration_0_0_68.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250430071709-migration_0_0_69.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250430075702-migration_0_0_70.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250501070833-migration_0_0_71.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250502122520-migration_0_0_72.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250503094816-migration_0_0_73.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250505132136-migration_0_0_74.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250506103243-migration_0_0_75.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250510063152-migration_0_0_76.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250510082241-migration_0_0_77.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250515053639-migration_0_0_78.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250516054659-migration_0_0_79.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250520100758-migration_0_0_80.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250521091914-migration_0_0_81.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250527082718-migration_0_0_82.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250530101211-migration_0_0_83.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250602053948-migration_0_0_84.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250617112037-migration_0_0_85.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250617124119-migration_0_0_86.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250619064332-migration_0_0_87.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250620112255-migration_0_0_88.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250624060338-migration_0_0_89.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250625102830-migration_0_0_90.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250705081128-migration_0_0_91.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250705102546-migration_0_0_92.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250707112121-migration_0_0_93.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250708070458-migration_0_0_94.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250711055124-migration_0_0_95.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250712052825-migration_0_0_96.ts');
INSERT INTO "10083_10833"."Tenant_Migrations" VALUES ('20250718113309-migration_0_0_97.ts');


--
-- TOC entry 11104 (class 0 OID 189268)
-- Dependencies: 2168
-- Data for Name: Tenant_Seeders; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--

INSERT INTO "10083_10833"."Tenant_Seeders" VALUES ('20230809122910-seeder_0_0_1.ts');
INSERT INTO "10083_10833"."Tenant_Seeders" VALUES ('20240702100454-seeder_0_0_2.ts');
INSERT INTO "10083_10833"."Tenant_Seeders" VALUES ('20240808072311-seeder_0_0_3.ts');
INSERT INTO "10083_10833"."Tenant_Seeders" VALUES ('20240913111607-seeder_0_0_4.ts');
INSERT INTO "10083_10833"."Tenant_Seeders" VALUES ('20240914121420-seeder_0_0_5.ts');
INSERT INTO "10083_10833"."Tenant_Seeders" VALUES ('20240918055218-seeder_0_0_6.ts');
INSERT INTO "10083_10833"."Tenant_Seeders" VALUES ('20240921075533-seeder_0_0_7.ts');
INSERT INTO "10083_10833"."Tenant_Seeders" VALUES ('20241113110023-seeder_0_0_8.ts');
INSERT INTO "10083_10833"."Tenant_Seeders" VALUES ('20250719071953-seeder_0_0_9.ts');


--
-- TOC entry 10740 (class 0 OID 184749)
-- Dependencies: 1804
-- Data for Name: TermAndCondition; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10788 (class 0 OID 184996)
-- Dependencies: 1852
-- Data for Name: Transporters; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10790 (class 0 OID 185008)
-- Dependencies: 1854
-- Data for Name: TransportersAddress; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10792 (class 0 OID 185017)
-- Dependencies: 1856
-- Data for Name: TransportersVehicles; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--



--
-- TOC entry 10772 (class 0 OID 184911)
-- Dependencies: 1836
-- Data for Name: WareHouse; Type: TABLE DATA; Schema: 10083_10833; Owner: 10083
--

INSERT INTO "10083_10833"."WareHouse" VALUES (1, 'Primary Warehouse', '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, true, true, NULL, '2025-07-21 11:27:45.695735', '2025-07-21 11:27:45.695735');


--
-- TOC entry 11313 (class 0 OID 0)
-- Dependencies: 2111
-- Name: AuditDocuments_AuditDocumentId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."AuditDocuments_AuditDocumentId_seq"', 1, false);


--
-- TOC entry 11314 (class 0 OID 0)
-- Dependencies: 2109
-- Name: AuditLogs_LogId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."AuditLogs_LogId_seq"', 1, false);


--
-- TOC entry 11315 (class 0 OID 0)
-- Dependencies: 1847
-- Name: AutoNumbering_AutoNumberingId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."AutoNumbering_AutoNumberingId_seq"', 1, false);


--
-- TOC entry 11316 (class 0 OID 0)
-- Dependencies: 1801
-- Name: BankAddress_BankAddressId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."BankAddress_BankAddressId_seq"', 1, false);


--
-- TOC entry 11317 (class 0 OID 0)
-- Dependencies: 1799
-- Name: Bank_BankId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Bank_BankId_seq"', 1, false);


--
-- TOC entry 11318 (class 0 OID 0)
-- Dependencies: 1790
-- Name: CompanyContactDetails_CompanyContactId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."CompanyContactDetails_CompanyContactId_seq"', 1, true);


--
-- TOC entry 11319 (class 0 OID 0)
-- Dependencies: 1788
-- Name: Company_Id_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Company_Id_seq"', 1, true);


--
-- TOC entry 11320 (class 0 OID 0)
-- Dependencies: 1805
-- Name: CompoundUnit_CompoundUnitId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."CompoundUnit_CompoundUnitId_seq"', 1, false);


--
-- TOC entry 11321 (class 0 OID 0)
-- Dependencies: 2079
-- Name: ConnectionSettings_ConnectionSettingId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."ConnectionSettings_ConnectionSettingId_seq"', 1, false);


--
-- TOC entry 11322 (class 0 OID 0)
-- Dependencies: 1807
-- Name: Currency_CurrencyId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Currency_CurrencyId_seq"', 1, true);


--
-- TOC entry 11323 (class 0 OID 0)
-- Dependencies: 1813
-- Name: CustomerBillingAddress_CustomerBillingAddressId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."CustomerBillingAddress_CustomerBillingAddressId_seq"', 1, false);


--
-- TOC entry 11324 (class 0 OID 0)
-- Dependencies: 1817
-- Name: CustomerContactPerson_CustomerContactPersonId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."CustomerContactPerson_CustomerContactPersonId_seq"', 1, false);


--
-- TOC entry 11325 (class 0 OID 0)
-- Dependencies: 1809
-- Name: CustomerGroup_CustomerGroupId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."CustomerGroup_CustomerGroupId_seq"', 1, true);


--
-- TOC entry 11326 (class 0 OID 0)
-- Dependencies: 1861
-- Name: CustomerSettings_CustomerSettingsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."CustomerSettings_CustomerSettingsId_seq"', 1, false);


--
-- TOC entry 11327 (class 0 OID 0)
-- Dependencies: 1815
-- Name: CustomerShippingAddress_CustomerShippingAddressId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."CustomerShippingAddress_CustomerShippingAddressId_seq"', 1, false);


--
-- TOC entry 11328 (class 0 OID 0)
-- Dependencies: 2107
-- Name: CustomerTurnOver_CustomerTurnOverId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."CustomerTurnOver_CustomerTurnOverId_seq"', 1, false);


--
-- TOC entry 11329 (class 0 OID 0)
-- Dependencies: 1811
-- Name: Customer_CustomerId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Customer_CustomerId_seq"', 1, false);


--
-- TOC entry 11330 (class 0 OID 0)
-- Dependencies: 2063
-- Name: DeliveryNoteBatchDetails_DeliveryNoteBatchDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."DeliveryNoteBatchDetails_DeliveryNoteBatchDetailsId_seq"', 1, false);


--
-- TOC entry 11331 (class 0 OID 0)
-- Dependencies: 2049
-- Name: DeliveryNoteBillTo_DeliveryNoteBillToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."DeliveryNoteBillTo_DeliveryNoteBillToId_seq"', 1, false);


--
-- TOC entry 11332 (class 0 OID 0)
-- Dependencies: 2053
-- Name: DeliveryNoteDetails_DeliveryNoteDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."DeliveryNoteDetails_DeliveryNoteDetailsId_seq"', 1, false);


--
-- TOC entry 11333 (class 0 OID 0)
-- Dependencies: 2055
-- Name: DeliveryNoteDispatchFrom_DeliveryNoteDispatchFromId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."DeliveryNoteDispatchFrom_DeliveryNoteDispatchFromId_seq"', 1, false);


--
-- TOC entry 11334 (class 0 OID 0)
-- Dependencies: 2059
-- Name: DeliveryNoteExportDetails_DeliveryNoteExportDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."DeliveryNoteExportDetails_DeliveryNoteExportDetailsId_seq"', 1, false);


--
-- TOC entry 11335 (class 0 OID 0)
-- Dependencies: 2057
-- Name: DeliveryNoteItems_DeliveryNoteItemsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."DeliveryNoteItems_DeliveryNoteItemsId_seq"', 1, false);


--
-- TOC entry 11336 (class 0 OID 0)
-- Dependencies: 2051
-- Name: DeliveryNoteShipTo_DeliveryNoteShipToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."DeliveryNoteShipTo_DeliveryNoteShipToId_seq"', 1, false);


--
-- TOC entry 11337 (class 0 OID 0)
-- Dependencies: 2061
-- Name: DeliveryNoteValueDetails_DeliveryNoteValueDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."DeliveryNoteValueDetails_DeliveryNoteValueDetailsId_seq"', 1, false);


--
-- TOC entry 11338 (class 0 OID 0)
-- Dependencies: 2047
-- Name: DeliveryNote_DeliveryNoteId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."DeliveryNote_DeliveryNoteId_seq"', 1, false);


--
-- TOC entry 11339 (class 0 OID 0)
-- Dependencies: 1857
-- Name: DocumentLastEntry_DocumentLastEntryId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."DocumentLastEntry_DocumentLastEntryId_seq"', 1, false);


--
-- TOC entry 11340 (class 0 OID 0)
-- Dependencies: 1849
-- Name: DocumentSettings_DocumentSettingsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."DocumentSettings_DocumentSettingsId_seq"', 7, true);


--
-- TOC entry 11341 (class 0 OID 0)
-- Dependencies: 1845
-- Name: Document_DocumentId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Document_DocumentId_seq"', 7, true);


--
-- TOC entry 11342 (class 0 OID 0)
-- Dependencies: 2174
-- Name: Document_Purchase_Credit_Note_Seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Document_Purchase_Credit_Note_Seq"', 1, false);


--
-- TOC entry 11343 (class 0 OID 0)
-- Dependencies: 2172
-- Name: Document_Purchase_Return_Seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Document_Purchase_Return_Seq"', 1, false);


--
-- TOC entry 11344 (class 0 OID 0)
-- Dependencies: 2171
-- Name: Document_Purchase_Seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Document_Purchase_Seq"', 1, false);


--
-- TOC entry 11345 (class 0 OID 0)
-- Dependencies: 2175
-- Name: Document_Quotation_Seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Document_Quotation_Seq"', 1, false);


--
-- TOC entry 11346 (class 0 OID 0)
-- Dependencies: 2173
-- Name: Document_Sales_Debit_Note_Seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Document_Sales_Debit_Note_Seq"', 1, false);


--
-- TOC entry 11347 (class 0 OID 0)
-- Dependencies: 2170
-- Name: Document_Sales_Return_Seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Document_Sales_Return_Seq"', 1, false);


--
-- TOC entry 11348 (class 0 OID 0)
-- Dependencies: 2169
-- Name: Document_Sales_Seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Document_Sales_Seq"', 1, false);


--
-- TOC entry 11349 (class 0 OID 0)
-- Dependencies: 2067
-- Name: EinvoiceAndEwaylogs_LogId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."EinvoiceAndEwaylogs_LogId_seq"', 1, false);


--
-- TOC entry 11350 (class 0 OID 0)
-- Dependencies: 2021
-- Name: EinvoiceDetails_EinvoiceDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."EinvoiceDetails_EinvoiceDetailsId_seq"', 1, false);


--
-- TOC entry 11351 (class 0 OID 0)
-- Dependencies: 2123
-- Name: EinvoiceEwayDispatchDetails_EinvoiceEwayDispatchDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."EinvoiceEwayDispatchDetails_EinvoiceEwayDispatchDetailsId_seq"', 1, false);


--
-- TOC entry 11352 (class 0 OID 0)
-- Dependencies: 2125
-- Name: EinvoiceEwayExportDetails_EinvoiceEwayExportDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."EinvoiceEwayExportDetails_EinvoiceEwayExportDetailsId_seq"', 1, false);


--
-- TOC entry 11353 (class 0 OID 0)
-- Dependencies: 1795
-- Name: EinvoiceSettings_EinvoiceSettingsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."EinvoiceSettings_EinvoiceSettingsId_seq"', 1, false);


--
-- TOC entry 11354 (class 0 OID 0)
-- Dependencies: 2023
-- Name: EwayBillDetails_EwayBillDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."EwayBillDetails_EwayBillDetailsId_seq"', 1, false);


--
-- TOC entry 11355 (class 0 OID 0)
-- Dependencies: 2151
-- Name: EwayDetails_EwayDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."EwayDetails_EwayDetailsId_seq"', 1, false);


--
-- TOC entry 11356 (class 0 OID 0)
-- Dependencies: 2069
-- Name: EwayLogs_EwayLogsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."EwayLogs_EwayLogsId_seq"', 1, false);


--
-- TOC entry 11357 (class 0 OID 0)
-- Dependencies: 1797
-- Name: EwaySettings_EwaySettingsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."EwaySettings_EwaySettingsId_seq"', 1, false);


--
-- TOC entry 11358 (class 0 OID 0)
-- Dependencies: 2153
-- Name: EwayTransportationDetails_EwayTransportationDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."EwayTransportationDetails_EwayTransportationDetailsId_seq"', 1, false);


--
-- TOC entry 11359 (class 0 OID 0)
-- Dependencies: 1793
-- Name: GSTSettings_GSTSettingsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."GSTSettings_GSTSettingsId_seq"', 1, false);


--
-- TOC entry 11360 (class 0 OID 0)
-- Dependencies: 2025
-- Name: GridLayout_GridLayoutId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."GridLayout_GridLayoutId_seq"', 1, false);


--
-- TOC entry 11361 (class 0 OID 0)
-- Dependencies: 1859
-- Name: InventorySettings_InventorySettingsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."InventorySettings_InventorySettingsId_seq"', 1, false);


--
-- TOC entry 11362 (class 0 OID 0)
-- Dependencies: 2081
-- Name: LUTMaster_LUTMasterId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."LUTMaster_LUTMasterId_seq"', 1, false);


--
-- TOC entry 11363 (class 0 OID 0)
-- Dependencies: 2073
-- Name: LastDocumentDate_LastDocumentDateId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."LastDocumentDate_LastDocumentDateId_seq"', 1, false);


--
-- TOC entry 11364 (class 0 OID 0)
-- Dependencies: 2143
-- Name: MasterAuditLogs_LogId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."MasterAuditLogs_LogId_seq"', 1, false);


--
-- TOC entry 11365 (class 0 OID 0)
-- Dependencies: 2077
-- Name: OtherCharges_OtherChargeId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."OtherCharges_OtherChargeId_seq"', 1, false);


--
-- TOC entry 11366 (class 0 OID 0)
-- Dependencies: 2097
-- Name: PCNBatchDetails_PCNBatchId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PCNBatchDetails_PCNBatchId_seq"', 1, false);


--
-- TOC entry 11367 (class 0 OID 0)
-- Dependencies: 2105
-- Name: PCNItemWareHouse_PCNItemWHId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PCNItemWareHouse_PCNItemWHId_seq"', 1, false);


--
-- TOC entry 11368 (class 0 OID 0)
-- Dependencies: 1863
-- Name: PrintSettings_PrintSettingsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PrintSettings_PrintSettingsId_seq"', 1, false);


--
-- TOC entry 11369 (class 0 OID 0)
-- Dependencies: 2027
-- Name: PrintTemplate_PrintTemplateId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PrintTemplate_PrintTemplateId_seq"', 1, false);


--
-- TOC entry 11370 (class 0 OID 0)
-- Dependencies: 1907
-- Name: PurchaseBatchDetails_PurchaseBatchDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseBatchDetails_PurchaseBatchDetailsId_seq"', 1, false);


--
-- TOC entry 11371 (class 0 OID 0)
-- Dependencies: 1891
-- Name: PurchaseBillFrom_PurchaseBillFromId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseBillFrom_PurchaseBillFromId_seq"', 1, false);


--
-- TOC entry 11372 (class 0 OID 0)
-- Dependencies: 2093
-- Name: PurchaseCreditNoteBillFrom_PurchaseCreditNoteBillFromId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseCreditNoteBillFrom_PurchaseCreditNoteBillFromId_seq"', 1, false);


--
-- TOC entry 11373 (class 0 OID 0)
-- Dependencies: 2083
-- Name: PurchaseCreditNoteDispatchFro_PurchaseCreditNoteDispatchFro_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseCreditNoteDispatchFro_PurchaseCreditNoteDispatchFro_seq"', 1, false);


--
-- TOC entry 11374 (class 0 OID 0)
-- Dependencies: 2103
-- Name: PurchaseCreditNoteEwayBillsDe_PurchaseCreditNoteEwayBillsDe_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseCreditNoteEwayBillsDe_PurchaseCreditNoteEwayBillsDe_seq"', 1, false);


--
-- TOC entry 11375 (class 0 OID 0)
-- Dependencies: 2091
-- Name: PurchaseCreditNoteExportDetai_PurchaseCreditNoteExportDetai_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseCreditNoteExportDetai_PurchaseCreditNoteExportDetai_seq"', 1, false);


--
-- TOC entry 11376 (class 0 OID 0)
-- Dependencies: 2085
-- Name: PurchaseCreditNoteItems_PurchaseCreditNoteItemsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseCreditNoteItems_PurchaseCreditNoteItemsId_seq"', 1, false);


--
-- TOC entry 11377 (class 0 OID 0)
-- Dependencies: 2101
-- Name: PurchaseCreditNoteOtherCharge_PurchaseCreditNoteOtherCharge_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseCreditNoteOtherCharge_PurchaseCreditNoteOtherCharge_seq"', 1, false);


--
-- TOC entry 11378 (class 0 OID 0)
-- Dependencies: 2099
-- Name: PurchaseCreditNoteOtherDetail_PurchaseCreditNoteOtherDetail_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseCreditNoteOtherDetail_PurchaseCreditNoteOtherDetail_seq"', 1, false);


--
-- TOC entry 11379 (class 0 OID 0)
-- Dependencies: 2095
-- Name: PurchaseCreditNoteShipTo_PurchaseCreditNoteShipToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseCreditNoteShipTo_PurchaseCreditNoteShipToId_seq"', 1, false);


--
-- TOC entry 11380 (class 0 OID 0)
-- Dependencies: 2087
-- Name: PurchaseCreditNoteValueDetail_PurchaseCreditNoteValueDetail_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseCreditNoteValueDetail_PurchaseCreditNoteValueDetail_seq"', 1, false);


--
-- TOC entry 11381 (class 0 OID 0)
-- Dependencies: 2089
-- Name: PurchaseCreditNote_PurchaseCreditNoteId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseCreditNote_PurchaseCreditNoteId_seq"', 1, false);


--
-- TOC entry 11382 (class 0 OID 0)
-- Dependencies: 1905
-- Name: PurchaseEwayBillsDetails_PurchaseEwayBillsDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseEwayBillsDetails_PurchaseEwayBillsDetailsId_seq"', 1, false);


--
-- TOC entry 11383 (class 0 OID 0)
-- Dependencies: 1901
-- Name: PurchaseImportDetails_PurchaseImportDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseImportDetails_PurchaseImportDetailsId_seq"', 1, false);


--
-- TOC entry 11384 (class 0 OID 0)
-- Dependencies: 1911
-- Name: PurchaseItemWareHouse_PurchaseItemWareHouseId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseItemWareHouse_PurchaseItemWareHouseId_seq"', 1, false);


--
-- TOC entry 11385 (class 0 OID 0)
-- Dependencies: 1899
-- Name: PurchaseItems_PurchaseItemsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseItems_PurchaseItemsId_seq"', 1, false);


--
-- TOC entry 11386 (class 0 OID 0)
-- Dependencies: 1947
-- Name: PurchaseOrderBatchDetails_PurchaseOrderBatchDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseOrderBatchDetails_PurchaseOrderBatchDetailsId_seq"', 1, false);


--
-- TOC entry 11387 (class 0 OID 0)
-- Dependencies: 1933
-- Name: PurchaseOrderBillTo_PurchaseOrderBillToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseOrderBillTo_PurchaseOrderBillToId_seq"', 1, false);


--
-- TOC entry 11388 (class 0 OID 0)
-- Dependencies: 1937
-- Name: PurchaseOrderDetails_PurchaseOrderDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseOrderDetails_PurchaseOrderDetailsId_seq"', 1, false);


--
-- TOC entry 11389 (class 0 OID 0)
-- Dependencies: 1939
-- Name: PurchaseOrderDispatchFrom_PurchaseOrderDispatchFromId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseOrderDispatchFrom_PurchaseOrderDispatchFromId_seq"', 1, false);


--
-- TOC entry 11390 (class 0 OID 0)
-- Dependencies: 1943
-- Name: PurchaseOrderExportDetails_PurchaseOrderExportDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseOrderExportDetails_PurchaseOrderExportDetailsId_seq"', 1, false);


--
-- TOC entry 11391 (class 0 OID 0)
-- Dependencies: 1941
-- Name: PurchaseOrderItems_PurchaseOrderItemsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseOrderItems_PurchaseOrderItemsId_seq"', 1, false);


--
-- TOC entry 11392 (class 0 OID 0)
-- Dependencies: 1935
-- Name: PurchaseOrderShipTo_PurchaseOrderShipToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseOrderShipTo_PurchaseOrderShipToId_seq"', 1, false);


--
-- TOC entry 11393 (class 0 OID 0)
-- Dependencies: 1945
-- Name: PurchaseOrderValueDetails_PurchaseOrderValueDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseOrderValueDetails_PurchaseOrderValueDetailsId_seq"', 1, false);


--
-- TOC entry 11394 (class 0 OID 0)
-- Dependencies: 1931
-- Name: PurchaseOrder_PurchaseOrderId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseOrder_PurchaseOrderId_seq"', 1, false);


--
-- TOC entry 11395 (class 0 OID 0)
-- Dependencies: 1909
-- Name: PurchaseOtherCharges_PurchaseOtherChargeId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseOtherCharges_PurchaseOtherChargeId_seq"', 1, false);


--
-- TOC entry 11396 (class 0 OID 0)
-- Dependencies: 1895
-- Name: PurchaseOtherDetails_PurchaseOtherDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseOtherDetails_PurchaseOtherDetailsId_seq"', 1, false);


--
-- TOC entry 11397 (class 0 OID 0)
-- Dependencies: 1897
-- Name: PurchaseReceiptDetails_PurchaseReceiptDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseReceiptDetails_PurchaseReceiptDetailsId_seq"', 1, false);


--
-- TOC entry 11398 (class 0 OID 0)
-- Dependencies: 2011
-- Name: PurchaseReturnBatchDetails_BatchDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseReturnBatchDetails_BatchDetailsId_seq"', 1, false);


--
-- TOC entry 11399 (class 0 OID 0)
-- Dependencies: 2007
-- Name: PurchaseReturnBillFrom_PurchaseReturnBillFromId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseReturnBillFrom_PurchaseReturnBillFromId_seq"', 1, false);


--
-- TOC entry 11400 (class 0 OID 0)
-- Dependencies: 1997
-- Name: PurchaseReturnDispatchFrom_PurchaseReturnDispatchFromId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseReturnDispatchFrom_PurchaseReturnDispatchFromId_seq"', 1, false);


--
-- TOC entry 11401 (class 0 OID 0)
-- Dependencies: 2017
-- Name: PurchaseReturnEwayBillsDetail_PurchaseReturnEwayBillsDetail_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseReturnEwayBillsDetail_PurchaseReturnEwayBillsDetail_seq"', 1, false);


--
-- TOC entry 11402 (class 0 OID 0)
-- Dependencies: 2005
-- Name: PurchaseReturnExportDetails_PurchaseReturnExportDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseReturnExportDetails_PurchaseReturnExportDetailsId_seq"', 1, false);


--
-- TOC entry 11403 (class 0 OID 0)
-- Dependencies: 2019
-- Name: PurchaseReturnItemWareHouse_PRItemWHId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseReturnItemWareHouse_PRItemWHId_seq"', 1, false);


--
-- TOC entry 11404 (class 0 OID 0)
-- Dependencies: 1999
-- Name: PurchaseReturnItems_PurchaseReturnItemsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseReturnItems_PurchaseReturnItemsId_seq"', 1, false);


--
-- TOC entry 11405 (class 0 OID 0)
-- Dependencies: 2015
-- Name: PurchaseReturnOtherCharges_PurchaseReturnOtherChargeId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseReturnOtherCharges_PurchaseReturnOtherChargeId_seq"', 1, false);


--
-- TOC entry 11406 (class 0 OID 0)
-- Dependencies: 2013
-- Name: PurchaseReturnOtherDetails_PurchaseReturnOtherDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseReturnOtherDetails_PurchaseReturnOtherDetailsId_seq"', 1, false);


--
-- TOC entry 11407 (class 0 OID 0)
-- Dependencies: 2009
-- Name: PurchaseReturnShipTo_PurchaseReturnShipToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseReturnShipTo_PurchaseReturnShipToId_seq"', 1, false);


--
-- TOC entry 11408 (class 0 OID 0)
-- Dependencies: 2001
-- Name: PurchaseReturnValueDetails_PurchaseReturnValueDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseReturnValueDetails_PurchaseReturnValueDetailsId_seq"', 1, false);


--
-- TOC entry 11409 (class 0 OID 0)
-- Dependencies: 2003
-- Name: PurchaseReturn_PurchaseReturnId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseReturn_PurchaseReturnId_seq"', 1, false);


--
-- TOC entry 11410 (class 0 OID 0)
-- Dependencies: 2065
-- Name: PurchaseSettings_PurchaseSettingsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseSettings_PurchaseSettingsId_seq"', 1, false);


--
-- TOC entry 11411 (class 0 OID 0)
-- Dependencies: 1893
-- Name: PurchaseShipTo_PurchaseShipToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseShipTo_PurchaseShipToId_seq"', 1, false);


--
-- TOC entry 11412 (class 0 OID 0)
-- Dependencies: 1903
-- Name: PurchaseValueDetails_PurchaseValueDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."PurchaseValueDetails_PurchaseValueDetailsId_seq"', 1, false);


--
-- TOC entry 11413 (class 0 OID 0)
-- Dependencies: 1889
-- Name: Purchase_PurchaseId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Purchase_PurchaseId_seq"', 1, false);


--
-- TOC entry 11414 (class 0 OID 0)
-- Dependencies: 2119
-- Name: QuotationItems_QuotationItemsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."QuotationItems_QuotationItemsId_seq"', 1, false);


--
-- TOC entry 11415 (class 0 OID 0)
-- Dependencies: 2117
-- Name: QuotationOtherCharges_QuotationOtherChargeId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."QuotationOtherCharges_QuotationOtherChargeId_seq"', 1, false);


--
-- TOC entry 11416 (class 0 OID 0)
-- Dependencies: 2115
-- Name: QuotationTo_QuotationToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."QuotationTo_QuotationToId_seq"', 1, false);


--
-- TOC entry 11417 (class 0 OID 0)
-- Dependencies: 2121
-- Name: QuotationValueDetails_QuotationValueDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."QuotationValueDetails_QuotationValueDetailsId_seq"', 1, false);


--
-- TOC entry 11418 (class 0 OID 0)
-- Dependencies: 2113
-- Name: Quotation_QuotationId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Quotation_QuotationId_seq"', 1, false);


--
-- TOC entry 11419 (class 0 OID 0)
-- Dependencies: 2045
-- Name: ReceiptNoteBatchDetails_ReceiptNoteBatchDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."ReceiptNoteBatchDetails_ReceiptNoteBatchDetailsId_seq"', 1, false);


--
-- TOC entry 11420 (class 0 OID 0)
-- Dependencies: 2031
-- Name: ReceiptNoteBillTo_ReceiptNoteBillToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."ReceiptNoteBillTo_ReceiptNoteBillToId_seq"', 1, false);


--
-- TOC entry 11421 (class 0 OID 0)
-- Dependencies: 2035
-- Name: ReceiptNoteDetails_ReceiptNoteDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."ReceiptNoteDetails_ReceiptNoteDetailsId_seq"', 1, false);


--
-- TOC entry 11422 (class 0 OID 0)
-- Dependencies: 2037
-- Name: ReceiptNoteDispatchFrom_ReceiptNoteDispatchFromId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."ReceiptNoteDispatchFrom_ReceiptNoteDispatchFromId_seq"', 1, false);


--
-- TOC entry 11423 (class 0 OID 0)
-- Dependencies: 2041
-- Name: ReceiptNoteExportDetails_ReceiptNoteExportDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."ReceiptNoteExportDetails_ReceiptNoteExportDetailsId_seq"', 1, false);


--
-- TOC entry 11424 (class 0 OID 0)
-- Dependencies: 2039
-- Name: ReceiptNoteItems_ReceiptNoteItemsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."ReceiptNoteItems_ReceiptNoteItemsId_seq"', 1, false);


--
-- TOC entry 11425 (class 0 OID 0)
-- Dependencies: 2033
-- Name: ReceiptNoteShipTo_ReceiptNoteShipToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."ReceiptNoteShipTo_ReceiptNoteShipToId_seq"', 1, false);


--
-- TOC entry 11426 (class 0 OID 0)
-- Dependencies: 2043
-- Name: ReceiptNoteValueDetails_ReceiptNoteValueDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."ReceiptNoteValueDetails_ReceiptNoteValueDetailsId_seq"', 1, false);


--
-- TOC entry 11427 (class 0 OID 0)
-- Dependencies: 2029
-- Name: ReceiptNote_ReceiptNoteId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."ReceiptNote_ReceiptNoteId_seq"', 1, false);


--
-- TOC entry 11428 (class 0 OID 0)
-- Dependencies: 2145
-- Name: SalesAuditLogs_LogId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesAuditLogs_LogId_seq"', 1, false);


--
-- TOC entry 11429 (class 0 OID 0)
-- Dependencies: 1885
-- Name: SalesBatchDetails_SalesBatchDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesBatchDetails_SalesBatchDetailsId_seq"', 1, false);


--
-- TOC entry 11430 (class 0 OID 0)
-- Dependencies: 1867
-- Name: SalesBillTo_SalesBillToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesBillTo_SalesBillToId_seq"', 1, false);


--
-- TOC entry 11431 (class 0 OID 0)
-- Dependencies: 2127
-- Name: SalesContainerList_SalesContainerListId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesContainerList_SalesContainerListId_seq"', 1, false);


--
-- TOC entry 11432 (class 0 OID 0)
-- Dependencies: 2149
-- Name: SalesDebitNoteAuditLogs_LogId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNoteAuditLogs_LogId_seq"', 1, false);


--
-- TOC entry 11433 (class 0 OID 0)
-- Dependencies: 1991
-- Name: SalesDebitNoteBatchDetails_SDNBatchId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNoteBatchDetails_SDNBatchId_seq"', 1, false);


--
-- TOC entry 11434 (class 0 OID 0)
-- Dependencies: 1975
-- Name: SalesDebitNoteBillTo_SalesDebitNoteBillToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNoteBillTo_SalesDebitNoteBillToId_seq"', 1, false);


--
-- TOC entry 11435 (class 0 OID 0)
-- Dependencies: 2131
-- Name: SalesDebitNoteContainerList_SalesDebitNoteContainerListId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNoteContainerList_SalesDebitNoteContainerListId_seq"', 1, false);


--
-- TOC entry 11436 (class 0 OID 0)
-- Dependencies: 1989
-- Name: SalesDebitNoteEwayBillsDetail_SalesDebitNoteEwayBillsDetail_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNoteEwayBillsDetail_SalesDebitNoteEwayBillsDetail_seq"', 1, false);


--
-- TOC entry 11437 (class 0 OID 0)
-- Dependencies: 2158
-- Name: SalesDebitNoteHSNSummary_SaleDebitNoteHSNId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNoteHSNSummary_SaleDebitNoteHSNId_seq"', 1, false);


--
-- TOC entry 11438 (class 0 OID 0)
-- Dependencies: 1985
-- Name: SalesDebitNoteImportDetails_SalesDebitNoteImportDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNoteImportDetails_SalesDebitNoteImportDetailsId_seq"', 1, false);


--
-- TOC entry 11439 (class 0 OID 0)
-- Dependencies: 1995
-- Name: SalesDebitNoteItemWareHouse_SDNItemWHId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNoteItemWareHouse_SDNItemWHId_seq"', 1, false);


--
-- TOC entry 11440 (class 0 OID 0)
-- Dependencies: 1983
-- Name: SalesDebitNoteItems_SalesDebitNoteItemsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNoteItems_SalesDebitNoteItemsId_seq"', 1, false);


--
-- TOC entry 11441 (class 0 OID 0)
-- Dependencies: 2166
-- Name: SalesDebitNoteMain_SaleDebitNoteId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNoteMain_SaleDebitNoteId_seq"', 5, true);


--
-- TOC entry 11442 (class 0 OID 0)
-- Dependencies: 1993
-- Name: SalesDebitNoteOtherCharges_SalesDebitNoteOtherChargeId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNoteOtherCharges_SalesDebitNoteOtherChargeId_seq"', 1, false);


--
-- TOC entry 11443 (class 0 OID 0)
-- Dependencies: 1979
-- Name: SalesDebitNoteOtherDetails_SalesDebitNoteOtherDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNoteOtherDetails_SalesDebitNoteOtherDetailsId_seq"', 1, false);


--
-- TOC entry 11444 (class 0 OID 0)
-- Dependencies: 2133
-- Name: SalesDebitNotePackingList_SalesDebitNotePackingListId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNotePackingList_SalesDebitNotePackingListId_seq"', 1, false);


--
-- TOC entry 11445 (class 0 OID 0)
-- Dependencies: 1981
-- Name: SalesDebitNoteReceiptDetails_SalesDebitNoteReceiptDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNoteReceiptDetails_SalesDebitNoteReceiptDetailsId_seq"', 1, false);


--
-- TOC entry 11446 (class 0 OID 0)
-- Dependencies: 1977
-- Name: SalesDebitNoteShipTo_SalesDebitNoteShipToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNoteShipTo_SalesDebitNoteShipToId_seq"', 1, false);


--
-- TOC entry 11447 (class 0 OID 0)
-- Dependencies: 1987
-- Name: SalesDebitNoteValueDetails_SalesDebitNoteValueDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNoteValueDetails_SalesDebitNoteValueDetailsId_seq"', 1, false);


--
-- TOC entry 11448 (class 0 OID 0)
-- Dependencies: 1973
-- Name: SalesDebitNote_SaleDebitNoteId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDebitNote_SaleDebitNoteId_seq"', 1, false);


--
-- TOC entry 11449 (class 0 OID 0)
-- Dependencies: 1875
-- Name: SalesDispatchDetails_SalesDispatchDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesDispatchDetails_SalesDispatchDetailsId_seq"', 1, false);


--
-- TOC entry 11450 (class 0 OID 0)
-- Dependencies: 1883
-- Name: SalesEwayBillsDetails_SalesEwayBillsDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesEwayBillsDetails_SalesEwayBillsDetailsId_seq"', 1, false);


--
-- TOC entry 11451 (class 0 OID 0)
-- Dependencies: 1879
-- Name: SalesExportDetails_SalesExportDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesExportDetails_SalesExportDetailsId_seq"', 1, false);


--
-- TOC entry 11452 (class 0 OID 0)
-- Dependencies: 2156
-- Name: SalesHSNSummary_SaleHSNId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesHSNSummary_SaleHSNId_seq"', 1, false);


--
-- TOC entry 11453 (class 0 OID 0)
-- Dependencies: 1887
-- Name: SalesItemWareHouse_SalesItemWareHouseId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesItemWareHouse_SalesItemWareHouseId_seq"', 1, false);


--
-- TOC entry 11454 (class 0 OID 0)
-- Dependencies: 1877
-- Name: SalesItems_SalesItemsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesItems_SalesItemsId_seq"', 1, false);


--
-- TOC entry 11455 (class 0 OID 0)
-- Dependencies: 2162
-- Name: SalesMain_SaleId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesMain_SaleId_seq"', 5, true);


--
-- TOC entry 11456 (class 0 OID 0)
-- Dependencies: 1929
-- Name: SalesOrderBatchDetails_SalesOrderBatchDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesOrderBatchDetails_SalesOrderBatchDetailsId_seq"', 1, false);


--
-- TOC entry 11457 (class 0 OID 0)
-- Dependencies: 1915
-- Name: SalesOrderBillTo_SalesOrderBillToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesOrderBillTo_SalesOrderBillToId_seq"', 1, false);


--
-- TOC entry 11458 (class 0 OID 0)
-- Dependencies: 1919
-- Name: SalesOrderDetails_SalesOrderDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesOrderDetails_SalesOrderDetailsId_seq"', 1, false);


--
-- TOC entry 11459 (class 0 OID 0)
-- Dependencies: 1921
-- Name: SalesOrderDispatchFrom_SalesOrderDispatchFromId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesOrderDispatchFrom_SalesOrderDispatchFromId_seq"', 1, false);


--
-- TOC entry 11460 (class 0 OID 0)
-- Dependencies: 1925
-- Name: SalesOrderExportDetails_SalesOrderExportDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesOrderExportDetails_SalesOrderExportDetailsId_seq"', 1, false);


--
-- TOC entry 11461 (class 0 OID 0)
-- Dependencies: 1923
-- Name: SalesOrderItems_SalesOrderItemsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesOrderItems_SalesOrderItemsId_seq"', 1, false);


--
-- TOC entry 11462 (class 0 OID 0)
-- Dependencies: 1917
-- Name: SalesOrderShipTo_SalesOrderShipToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesOrderShipTo_SalesOrderShipToId_seq"', 1, false);


--
-- TOC entry 11463 (class 0 OID 0)
-- Dependencies: 1927
-- Name: SalesOrderValueDetails_SalesOrderValueDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesOrderValueDetails_SalesOrderValueDetailsId_seq"', 1, false);


--
-- TOC entry 11464 (class 0 OID 0)
-- Dependencies: 1913
-- Name: SalesOrder_SaleOrderId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesOrder_SaleOrderId_seq"', 1, false);


--
-- TOC entry 11465 (class 0 OID 0)
-- Dependencies: 1873
-- Name: SalesOtherCharges_SalesOtherChargeId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesOtherCharges_SalesOtherChargeId_seq"', 1, false);


--
-- TOC entry 11466 (class 0 OID 0)
-- Dependencies: 1871
-- Name: SalesOtherDetails_SalesOtherDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesOtherDetails_SalesOtherDetailsId_seq"', 1, false);


--
-- TOC entry 11467 (class 0 OID 0)
-- Dependencies: 2129
-- Name: SalesPackingList_SalesPackingListId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesPackingList_SalesPackingListId_seq"', 1, false);


--
-- TOC entry 11468 (class 0 OID 0)
-- Dependencies: 2071
-- Name: SalesPerson_SalesPersonId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesPerson_SalesPersonId_seq"', 1, true);


--
-- TOC entry 11469 (class 0 OID 0)
-- Dependencies: 2147
-- Name: SalesReturnAuditLogs_LogId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnAuditLogs_LogId_seq"', 1, false);


--
-- TOC entry 11470 (class 0 OID 0)
-- Dependencies: 1967
-- Name: SalesReturnBatchDetails_SalesReturnBtchDtlsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnBatchDetails_SalesReturnBtchDtlsId_seq"', 1, false);


--
-- TOC entry 11471 (class 0 OID 0)
-- Dependencies: 1951
-- Name: SalesReturnBillTo_SalesReturnBillToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnBillTo_SalesReturnBillToId_seq"', 1, false);


--
-- TOC entry 11472 (class 0 OID 0)
-- Dependencies: 2135
-- Name: SalesReturnContainerList_SalesReturnContainerListId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnContainerList_SalesReturnContainerListId_seq"', 1, false);


--
-- TOC entry 11473 (class 0 OID 0)
-- Dependencies: 1965
-- Name: SalesReturnEwayBillsDetails_SalesReturnEwayBillsDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnEwayBillsDetails_SalesReturnEwayBillsDetailsId_seq"', 1, false);


--
-- TOC entry 11474 (class 0 OID 0)
-- Dependencies: 2160
-- Name: SalesReturnHSNSummary_SaleReturnHSNId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnHSNSummary_SaleReturnHSNId_seq"', 1, false);


--
-- TOC entry 11475 (class 0 OID 0)
-- Dependencies: 1961
-- Name: SalesReturnImportDetails_SalesReturnImportDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnImportDetails_SalesReturnImportDetailsId_seq"', 1, false);


--
-- TOC entry 11476 (class 0 OID 0)
-- Dependencies: 1971
-- Name: SalesReturnItemWareHouse_SRItemWHId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnItemWareHouse_SRItemWHId_seq"', 1, false);


--
-- TOC entry 11477 (class 0 OID 0)
-- Dependencies: 1959
-- Name: SalesReturnItems_SalesReturnItemsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnItems_SalesReturnItemsId_seq"', 1, false);


--
-- TOC entry 11478 (class 0 OID 0)
-- Dependencies: 2164
-- Name: SalesReturnMain_SaleReturnId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnMain_SaleReturnId_seq"', 5, true);


--
-- TOC entry 11479 (class 0 OID 0)
-- Dependencies: 1969
-- Name: SalesReturnOtherCharges_SalesReturnOtherChargeId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnOtherCharges_SalesReturnOtherChargeId_seq"', 1, false);


--
-- TOC entry 11480 (class 0 OID 0)
-- Dependencies: 1955
-- Name: SalesReturnOtherDetails_SalesReturnOtherDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnOtherDetails_SalesReturnOtherDetailsId_seq"', 1, false);


--
-- TOC entry 11481 (class 0 OID 0)
-- Dependencies: 2137
-- Name: SalesReturnPackingList_SalesReturnPackingListId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnPackingList_SalesReturnPackingListId_seq"', 1, false);


--
-- TOC entry 11482 (class 0 OID 0)
-- Dependencies: 1957
-- Name: SalesReturnReceiptDetails_SalesReturnReceiptDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnReceiptDetails_SalesReturnReceiptDetailsId_seq"', 1, false);


--
-- TOC entry 11483 (class 0 OID 0)
-- Dependencies: 1953
-- Name: SalesReturnShipTo_SalesReturnShipToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnShipTo_SalesReturnShipToId_seq"', 1, false);


--
-- TOC entry 11484 (class 0 OID 0)
-- Dependencies: 1963
-- Name: SalesReturnValueDetails_SalesReturnValueDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturnValueDetails_SalesReturnValueDetailsId_seq"', 1, false);


--
-- TOC entry 11485 (class 0 OID 0)
-- Dependencies: 1949
-- Name: SalesReturn_SaleReturnId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesReturn_SaleReturnId_seq"', 1, false);


--
-- TOC entry 11486 (class 0 OID 0)
-- Dependencies: 1869
-- Name: SalesShipTo_SalesShipToId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesShipTo_SalesShipToId_seq"', 1, false);


--
-- TOC entry 11487 (class 0 OID 0)
-- Dependencies: 1881
-- Name: SalesValueDetails_SalesValueDetailsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SalesValueDetails_SalesValueDetailsId_seq"', 1, false);


--
-- TOC entry 11488 (class 0 OID 0)
-- Dependencies: 1865
-- Name: Sales_SaleId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Sales_SaleId_seq"', 1, false);


--
-- TOC entry 11489 (class 0 OID 0)
-- Dependencies: 1837
-- Name: Shipping_ShippingId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Shipping_ShippingId_seq"', 1, false);


--
-- TOC entry 11490 (class 0 OID 0)
-- Dependencies: 1833
-- Name: SimpleUnit_SimpleUnitId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SimpleUnit_SimpleUnitId_seq"', 1, false);


--
-- TOC entry 11491 (class 0 OID 0)
-- Dependencies: 1827
-- Name: StockCategory_StockCategoryId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."StockCategory_StockCategoryId_seq"', 1, true);


--
-- TOC entry 11492 (class 0 OID 0)
-- Dependencies: 1831
-- Name: StockGroupGSTInfo_StockGroupGSTInfoId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."StockGroupGSTInfo_StockGroupGSTInfoId_seq"', 1, false);


--
-- TOC entry 11493 (class 0 OID 0)
-- Dependencies: 1821
-- Name: StockGroup_StockGroupId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."StockGroup_StockGroupId_seq"', 1, true);


--
-- TOC entry 11494 (class 0 OID 0)
-- Dependencies: 2075
-- Name: StockItemBalance_StockItemBalanceId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."StockItemBalance_StockItemBalanceId_seq"', 1, false);


--
-- TOC entry 11495 (class 0 OID 0)
-- Dependencies: 1823
-- Name: StockItemDescription_StockItemDescriptionId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."StockItemDescription_StockItemDescriptionId_seq"', 1, false);


--
-- TOC entry 11496 (class 0 OID 0)
-- Dependencies: 1829
-- Name: StockItemGSTInfo_StockItemGSTInfoId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."StockItemGSTInfo_StockItemGSTInfoId_seq"', 1, false);


--
-- TOC entry 11497 (class 0 OID 0)
-- Dependencies: 1825
-- Name: StockItemOpeningBalance_StockItemOpeningBalanceId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."StockItemOpeningBalance_StockItemOpeningBalanceId_seq"', 1, false);


--
-- TOC entry 11498 (class 0 OID 0)
-- Dependencies: 1819
-- Name: StockItem_StockItemId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."StockItem_StockItemId_seq"', 1, false);


--
-- TOC entry 11499 (class 0 OID 0)
-- Dependencies: 1843
-- Name: SupplierAddress_SupplierAddressId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SupplierAddress_SupplierAddressId_seq"', 1, false);


--
-- TOC entry 11500 (class 0 OID 0)
-- Dependencies: 1839
-- Name: SupplierGroup_SupplierGroupId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."SupplierGroup_SupplierGroupId_seq"', 1, true);


--
-- TOC entry 11501 (class 0 OID 0)
-- Dependencies: 1841
-- Name: Supplier_SupplierId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Supplier_SupplierId_seq"', 1, false);


--
-- TOC entry 11502 (class 0 OID 0)
-- Dependencies: 2141
-- Name: TemplateSettings_TemplateSettingsId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."TemplateSettings_TemplateSettingsId_seq"', 7, true);


--
-- TOC entry 11503 (class 0 OID 0)
-- Dependencies: 2181
-- Name: Template_Purchase_Credit_Note_Seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Template_Purchase_Credit_Note_Seq"', 1, false);


--
-- TOC entry 11504 (class 0 OID 0)
-- Dependencies: 2179
-- Name: Template_Purchase_Return_Seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Template_Purchase_Return_Seq"', 1, false);


--
-- TOC entry 11505 (class 0 OID 0)
-- Dependencies: 2178
-- Name: Template_Purchase_Seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Template_Purchase_Seq"', 1, false);


--
-- TOC entry 11506 (class 0 OID 0)
-- Dependencies: 2182
-- Name: Template_Quotation_Seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Template_Quotation_Seq"', 1, false);


--
-- TOC entry 11507 (class 0 OID 0)
-- Dependencies: 2180
-- Name: Template_Sales_Debit_Note_Seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Template_Sales_Debit_Note_Seq"', 1, false);


--
-- TOC entry 11508 (class 0 OID 0)
-- Dependencies: 2177
-- Name: Template_Sales_Return_Seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Template_Sales_Return_Seq"', 1, false);


--
-- TOC entry 11509 (class 0 OID 0)
-- Dependencies: 2176
-- Name: Template_Sales_Seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Template_Sales_Seq"', 1, false);


--
-- TOC entry 11510 (class 0 OID 0)
-- Dependencies: 2139
-- Name: Template_TemplateId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Template_TemplateId_seq"', 7, true);


--
-- TOC entry 11511 (class 0 OID 0)
-- Dependencies: 1803
-- Name: TermAndCondition_TermAndConditionId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."TermAndCondition_TermAndConditionId_seq"', 1, false);


--
-- TOC entry 11512 (class 0 OID 0)
-- Dependencies: 1853
-- Name: TransportersAddress_TransportersAddressId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."TransportersAddress_TransportersAddressId_seq"', 1, false);


--
-- TOC entry 11513 (class 0 OID 0)
-- Dependencies: 1855
-- Name: TransportersVehicles_TransportersVehiclesId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."TransportersVehicles_TransportersVehiclesId_seq"', 1, false);


--
-- TOC entry 11514 (class 0 OID 0)
-- Dependencies: 1851
-- Name: Transporters_TransportersId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."Transporters_TransportersId_seq"', 1, false);


--
-- TOC entry 11515 (class 0 OID 0)
-- Dependencies: 1835
-- Name: WareHouse_WareHouseId_seq; Type: SEQUENCE SET; Schema: 10083_10833; Owner: 10083
--

SELECT pg_catalog.setval('"10083_10833"."WareHouse_WareHouseId_seq"', 1, true);


--
-- TOC entry 10195 (class 2606 OID 187205)
-- Name: AuditDocuments AuditDocuments_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."AuditDocuments"
    ADD CONSTRAINT "AuditDocuments_pkey" PRIMARY KEY ("AuditDocumentId");


--
-- TOC entry 10193 (class 2606 OID 187198)
-- Name: AuditLogs AuditLogs_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."AuditLogs"
    ADD CONSTRAINT "AuditLogs_pkey" PRIMARY KEY ("LogId");


--
-- TOC entry 9804 (class 2606 OID 184984)
-- Name: AutoNumbering AutoNumbering_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."AutoNumbering"
    ADD CONSTRAINT "AutoNumbering_pkey" PRIMARY KEY ("AutoNumberingId");


--
-- TOC entry 9683 (class 2606 OID 187679)
-- Name: Bank BANK103; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Bank"
    ADD CONSTRAINT "BANK103" UNIQUE ("Code");


--
-- TOC entry 9689 (class 2606 OID 184747)
-- Name: BankAddress BankAddress_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."BankAddress"
    ADD CONSTRAINT "BankAddress_pkey" PRIMARY KEY ("BankAddressId");


--
-- TOC entry 9686 (class 2606 OID 184738)
-- Name: Bank Bank_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Bank"
    ADD CONSTRAINT "Bank_pkey" PRIMARY KEY ("BankId");


--
-- TOC entry 9700 (class 2606 OID 187749)
-- Name: Currency CURR103; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Currency"
    ADD CONSTRAINT "CURR103" UNIQUE ("CurrencyCode");


--
-- TOC entry 9709 (class 2606 OID 187751)
-- Name: Customer CUST108; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Customer"
    ADD CONSTRAINT "CUST108" UNIQUE ("Code");


--
-- TOC entry 9673 (class 2606 OID 184683)
-- Name: CompanyContactDetails CompanyContactDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CompanyContactDetails"
    ADD CONSTRAINT "CompanyContactDetails_pkey" PRIMARY KEY ("CompanyContactId");


--
-- TOC entry 9665 (class 2606 OID 184672)
-- Name: Company Company_CompanyId_key; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Company"
    ADD CONSTRAINT "Company_CompanyId_key" UNIQUE ("CompanyId");


--
-- TOC entry 9667 (class 2606 OID 184674)
-- Name: Company Company_SchemaName_key; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Company"
    ADD CONSTRAINT "Company_SchemaName_key" UNIQUE ("SchemaName");


--
-- TOC entry 9669 (class 2606 OID 188251)
-- Name: Company Company_UniqueId_key; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Company"
    ADD CONSTRAINT "Company_UniqueId_key" UNIQUE ("UniqueId");


--
-- TOC entry 9671 (class 2606 OID 184668)
-- Name: Company Company_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Company"
    ADD CONSTRAINT "Company_pkey" PRIMARY KEY ("Id");


--
-- TOC entry 9698 (class 2606 OID 184765)
-- Name: CompoundUnit CompoundUnit_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CompoundUnit"
    ADD CONSTRAINT "CompoundUnit_pkey" PRIMARY KEY ("CompoundUnitId");


--
-- TOC entry 10158 (class 2606 OID 186067)
-- Name: ConnectionSettings ConnectionSettings_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ConnectionSettings"
    ADD CONSTRAINT "ConnectionSettings_pkey" PRIMARY KEY ("ConnectionSettingId");


--
-- TOC entry 9703 (class 2606 OID 184775)
-- Name: Currency Currency_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Currency"
    ADD CONSTRAINT "Currency_pkey" PRIMARY KEY ("CurrencyId");


--
-- TOC entry 9717 (class 2606 OID 184805)
-- Name: CustomerBillingAddress CustomerBillingAddress_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerBillingAddress"
    ADD CONSTRAINT "CustomerBillingAddress_pkey" PRIMARY KEY ("CustomerBillingAddressId");


--
-- TOC entry 9723 (class 2606 OID 184825)
-- Name: CustomerContactPerson CustomerContactPerson_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerContactPerson"
    ADD CONSTRAINT "CustomerContactPerson_pkey" PRIMARY KEY ("CustomerContactPersonId");


--
-- TOC entry 9707 (class 2606 OID 184786)
-- Name: CustomerGroup CustomerGroup_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerGroup"
    ADD CONSTRAINT "CustomerGroup_pkey" PRIMARY KEY ("CustomerGroupId");


--
-- TOC entry 9825 (class 2606 OID 185045)
-- Name: CustomerSettings CustomerSettings_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerSettings"
    ADD CONSTRAINT "CustomerSettings_pkey" PRIMARY KEY ("CustomerSettingsId");


--
-- TOC entry 9720 (class 2606 OID 184816)
-- Name: CustomerShippingAddress CustomerShippingAddress_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerShippingAddress"
    ADD CONSTRAINT "CustomerShippingAddress_pkey" PRIMARY KEY ("CustomerShippingAddressId");


--
-- TOC entry 10189 (class 2606 OID 187180)
-- Name: CustomerTurnOver CustomerTurnOver_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerTurnOver"
    ADD CONSTRAINT "CustomerTurnOver_pkey" PRIMARY KEY ("CustomerTurnOverId");


--
-- TOC entry 9714 (class 2606 OID 184796)
-- Name: Customer Customer_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Customer"
    ADD CONSTRAINT "Customer_pkey" PRIMARY KEY ("CustomerId");


--
-- TOC entry 10131 (class 2606 OID 185977)
-- Name: DeliveryNoteBatchDetails DeliveryNoteBatchDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteBatchDetails"
    ADD CONSTRAINT "DeliveryNoteBatchDetails_pkey" PRIMARY KEY ("DeliveryNoteBatchDetailsId");


--
-- TOC entry 10117 (class 2606 OID 185914)
-- Name: DeliveryNoteBillTo DeliveryNoteBillTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteBillTo"
    ADD CONSTRAINT "DeliveryNoteBillTo_pkey" PRIMARY KEY ("DeliveryNoteBillToId");


--
-- TOC entry 10121 (class 2606 OID 185932)
-- Name: DeliveryNoteDetails DeliveryNoteDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteDetails"
    ADD CONSTRAINT "DeliveryNoteDetails_pkey" PRIMARY KEY ("DeliveryNoteDetailsId");


--
-- TOC entry 10123 (class 2606 OID 185941)
-- Name: DeliveryNoteDispatchFrom DeliveryNoteDispatchFrom_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteDispatchFrom"
    ADD CONSTRAINT "DeliveryNoteDispatchFrom_pkey" PRIMARY KEY ("DeliveryNoteDispatchFromId");


--
-- TOC entry 10127 (class 2606 OID 185959)
-- Name: DeliveryNoteExportDetails DeliveryNoteExportDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteExportDetails"
    ADD CONSTRAINT "DeliveryNoteExportDetails_pkey" PRIMARY KEY ("DeliveryNoteExportDetailsId");


--
-- TOC entry 10125 (class 2606 OID 185950)
-- Name: DeliveryNoteItems DeliveryNoteItems_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteItems"
    ADD CONSTRAINT "DeliveryNoteItems_pkey" PRIMARY KEY ("DeliveryNoteItemsId");


--
-- TOC entry 10119 (class 2606 OID 185923)
-- Name: DeliveryNoteShipTo DeliveryNoteShipTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteShipTo"
    ADD CONSTRAINT "DeliveryNoteShipTo_pkey" PRIMARY KEY ("DeliveryNoteShipToId");


--
-- TOC entry 10129 (class 2606 OID 185968)
-- Name: DeliveryNoteValueDetails DeliveryNoteValueDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteValueDetails"
    ADD CONSTRAINT "DeliveryNoteValueDetails_pkey" PRIMARY KEY ("DeliveryNoteValueDetailsId");


--
-- TOC entry 10115 (class 2606 OID 185905)
-- Name: DeliveryNote DeliveryNote_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNote"
    ADD CONSTRAINT "DeliveryNote_pkey" PRIMARY KEY ("DeliveryNoteId");


--
-- TOC entry 9821 (class 2606 OID 185029)
-- Name: DocumentLastEntry DocumentLastEntry_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DocumentLastEntry"
    ADD CONSTRAINT "DocumentLastEntry_pkey" PRIMARY KEY ("DocumentLastEntryId");


--
-- TOC entry 9806 (class 2606 OID 184994)
-- Name: DocumentSettings DocumentSettings_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DocumentSettings"
    ADD CONSTRAINT "DocumentSettings_pkey" PRIMARY KEY ("DocumentSettingsId");


--
-- TOC entry 9801 (class 2606 OID 184977)
-- Name: Document Document_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Document"
    ADD CONSTRAINT "Document_pkey" PRIMARY KEY ("DocumentId");


--
-- TOC entry 10261 (class 2606 OID 188450)
-- Name: EwayTransportationDetails EWAYTRANS101; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EwayTransportationDetails"
    ADD CONSTRAINT "EWAYTRANS101" UNIQUE ("InvoiceId", "InvoiceType");


--
-- TOC entry 10135 (class 2606 OID 186010)
-- Name: EinvoiceAndEwaylogs EinvoiceAndEwaylogs_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EinvoiceAndEwaylogs"
    ADD CONSTRAINT "EinvoiceAndEwaylogs_pkey" PRIMARY KEY ("LogId");


--
-- TOC entry 10081 (class 2606 OID 185790)
-- Name: EinvoiceDetails EinvoiceDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EinvoiceDetails"
    ADD CONSTRAINT "EinvoiceDetails_pkey" PRIMARY KEY ("EinvoiceDetailsId");


--
-- TOC entry 10207 (class 2606 OID 187404)
-- Name: EinvoiceEwayDispatchDetails EinvoiceEwayDispatchDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EinvoiceEwayDispatchDetails"
    ADD CONSTRAINT "EinvoiceEwayDispatchDetails_pkey" PRIMARY KEY ("EinvoiceEwayDispatchDetailsId");


--
-- TOC entry 10211 (class 2606 OID 187413)
-- Name: EinvoiceEwayExportDetails EinvoiceEwayExportDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EinvoiceEwayExportDetails"
    ADD CONSTRAINT "EinvoiceEwayExportDetails_pkey" PRIMARY KEY ("EinvoiceEwayExportDetailsId");


--
-- TOC entry 9679 (class 2606 OID 184718)
-- Name: EinvoiceSettings EinvoiceSettings_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EinvoiceSettings"
    ADD CONSTRAINT "EinvoiceSettings_pkey" PRIMARY KEY ("EinvoiceSettingsId");


--
-- TOC entry 10083 (class 2606 OID 185801)
-- Name: EwayBillDetails EwayBillDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EwayBillDetails"
    ADD CONSTRAINT "EwayBillDetails_pkey" PRIMARY KEY ("EwayBillDetailsId");


--
-- TOC entry 10255 (class 2606 OID 187844)
-- Name: EwayDetails EwayDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EwayDetails"
    ADD CONSTRAINT "EwayDetails_pkey" PRIMARY KEY ("EwayDetailsId");


--
-- TOC entry 10137 (class 2606 OID 186019)
-- Name: EwayLogs EwayLogs_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EwayLogs"
    ADD CONSTRAINT "EwayLogs_pkey" PRIMARY KEY ("EwayLogsId");


--
-- TOC entry 9681 (class 2606 OID 184728)
-- Name: EwaySettings EwaySettings_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EwaySettings"
    ADD CONSTRAINT "EwaySettings_pkey" PRIMARY KEY ("EwaySettingsId");


--
-- TOC entry 10263 (class 2606 OID 187851)
-- Name: EwayTransportationDetails EwayTransportationDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EwayTransportationDetails"
    ADD CONSTRAINT "EwayTransportationDetails_pkey" PRIMARY KEY ("EwayTransportationDetailsId");


--
-- TOC entry 9677 (class 2606 OID 184708)
-- Name: GSTSettings GSTSettings_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."GSTSettings"
    ADD CONSTRAINT "GSTSettings_pkey" PRIMARY KEY ("GSTSettingsId");


--
-- TOC entry 10091 (class 2606 OID 185810)
-- Name: GridLayout GridLayout_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."GridLayout"
    ADD CONSTRAINT "GridLayout_pkey" PRIMARY KEY ("GridLayoutId");


--
-- TOC entry 9823 (class 2606 OID 185036)
-- Name: InventorySettings InventorySettings_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."InventorySettings"
    ADD CONSTRAINT "InventorySettings_pkey" PRIMARY KEY ("InventorySettingsId");


--
-- TOC entry 10160 (class 2606 OID 187687)
-- Name: LUTMaster LUT104; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."LUTMaster"
    ADD CONSTRAINT "LUT104" UNIQUE ("LUTNumber");


--
-- TOC entry 10163 (class 2606 OID 186075)
-- Name: LUTMaster LUTMaster_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."LUTMaster"
    ADD CONSTRAINT "LUTMaster_pkey" PRIMARY KEY ("LUTMasterId");


--
-- TOC entry 10144 (class 2606 OID 186034)
-- Name: LastDocumentDate LastDocumentDate_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."LastDocumentDate"
    ADD CONSTRAINT "LastDocumentDate_pkey" PRIMARY KEY ("LastDocumentDateId");


--
-- TOC entry 10247 (class 2606 OID 187718)
-- Name: MasterAuditLogs MasterAuditLogs_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."MasterAuditLogs"
    ADD CONSTRAINT "MasterAuditLogs_pkey" PRIMARY KEY ("LogId");


--
-- TOC entry 10266 (class 2606 OID 187879)
-- Name: NICCredentials NICCredentials_EnvironmentCode_key; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."NICCredentials"
    ADD CONSTRAINT "NICCredentials_EnvironmentCode_key" UNIQUE ("EnvironmentCode");


--
-- TOC entry 10156 (class 2606 OID 186058)
-- Name: OtherCharges OtherCharges_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."OtherCharges"
    ADD CONSTRAINT "OtherCharges_pkey" PRIMARY KEY ("OtherChargeId");


--
-- TOC entry 10179 (class 2606 OID 186148)
-- Name: PCNBatchDetails PCNBatchDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PCNBatchDetails"
    ADD CONSTRAINT "PCNBatchDetails_pkey" PRIMARY KEY ("PCNBatchId");


--
-- TOC entry 10187 (class 2606 OID 186188)
-- Name: PCNItemWareHouse PCNItemWareHouse_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PCNItemWareHouse"
    ADD CONSTRAINT "PCNItemWareHouse_pkey" PRIMARY KEY ("PCNItemWHId");


--
-- TOC entry 9827 (class 2606 OID 185054)
-- Name: PrintSettings PrintSettings_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PrintSettings"
    ADD CONSTRAINT "PrintSettings_pkey" PRIMARY KEY ("PrintSettingsId");


--
-- TOC entry 10093 (class 2606 OID 185819)
-- Name: PrintTemplate PrintTemplate_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PrintTemplate"
    ADD CONSTRAINT "PrintTemplate_pkey" PRIMARY KEY ("PrintTemplateId");


--
-- TOC entry 9903 (class 2606 OID 185260)
-- Name: PurchaseBatchDetails PurchaseBatchDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseBatchDetails"
    ADD CONSTRAINT "PurchaseBatchDetails_pkey" PRIMARY KEY ("PurchaseBatchDetailsId");


--
-- TOC entry 9887 (class 2606 OID 185188)
-- Name: PurchaseBillFrom PurchaseBillFrom_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseBillFrom"
    ADD CONSTRAINT "PurchaseBillFrom_pkey" PRIMARY KEY ("PurchaseBillFromId");


--
-- TOC entry 10175 (class 2606 OID 186130)
-- Name: PurchaseCreditNoteBillFrom PurchaseCreditNoteBillFrom_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteBillFrom"
    ADD CONSTRAINT "PurchaseCreditNoteBillFrom_pkey" PRIMARY KEY ("PurchaseCreditNoteBillFromId");


--
-- TOC entry 10165 (class 2606 OID 186084)
-- Name: PurchaseCreditNoteDispatchFrom PurchaseCreditNoteDispatchFrom_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteDispatchFrom"
    ADD CONSTRAINT "PurchaseCreditNoteDispatchFrom_pkey" PRIMARY KEY ("PurchaseCreditNoteDispatchFromId");


--
-- TOC entry 10185 (class 2606 OID 186179)
-- Name: PurchaseCreditNoteEwayBillsDetails PurchaseCreditNoteEwayBillsDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteEwayBillsDetails"
    ADD CONSTRAINT "PurchaseCreditNoteEwayBillsDetails_pkey" PRIMARY KEY ("PurchaseCreditNoteEwayBillsDetailsId");


--
-- TOC entry 10173 (class 2606 OID 186121)
-- Name: PurchaseCreditNoteExportDetails PurchaseCreditNoteExportDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteExportDetails"
    ADD CONSTRAINT "PurchaseCreditNoteExportDetails_pkey" PRIMARY KEY ("PurchaseCreditNoteExportDetailsId");


--
-- TOC entry 10167 (class 2606 OID 186093)
-- Name: PurchaseCreditNoteItems PurchaseCreditNoteItems_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteItems"
    ADD CONSTRAINT "PurchaseCreditNoteItems_pkey" PRIMARY KEY ("PurchaseCreditNoteItemsId");


--
-- TOC entry 10183 (class 2606 OID 186170)
-- Name: PurchaseCreditNoteOtherCharges PurchaseCreditNoteOtherCharges_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteOtherCharges"
    ADD CONSTRAINT "PurchaseCreditNoteOtherCharges_pkey" PRIMARY KEY ("PurchaseCreditNoteOtherChargeId");


--
-- TOC entry 10181 (class 2606 OID 186157)
-- Name: PurchaseCreditNoteOtherDetails PurchaseCreditNoteOtherDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteOtherDetails"
    ADD CONSTRAINT "PurchaseCreditNoteOtherDetails_pkey" PRIMARY KEY ("PurchaseCreditNoteOtherDetailsId");


--
-- TOC entry 10177 (class 2606 OID 186139)
-- Name: PurchaseCreditNoteShipTo PurchaseCreditNoteShipTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteShipTo"
    ADD CONSTRAINT "PurchaseCreditNoteShipTo_pkey" PRIMARY KEY ("PurchaseCreditNoteShipToId");


--
-- TOC entry 10169 (class 2606 OID 186102)
-- Name: PurchaseCreditNoteValueDetails PurchaseCreditNoteValueDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteValueDetails"
    ADD CONSTRAINT "PurchaseCreditNoteValueDetails_pkey" PRIMARY KEY ("PurchaseCreditNoteValueDetailsId");


--
-- TOC entry 10171 (class 2606 OID 186112)
-- Name: PurchaseCreditNote PurchaseCreditNote_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNote"
    ADD CONSTRAINT "PurchaseCreditNote_pkey" PRIMARY KEY ("PurchaseCreditNoteId");


--
-- TOC entry 9901 (class 2606 OID 185251)
-- Name: PurchaseEwayBillsDetails PurchaseEwayBillsDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseEwayBillsDetails"
    ADD CONSTRAINT "PurchaseEwayBillsDetails_pkey" PRIMARY KEY ("PurchaseEwayBillsDetailsId");


--
-- TOC entry 9897 (class 2606 OID 185233)
-- Name: PurchaseImportDetails PurchaseImportDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseImportDetails"
    ADD CONSTRAINT "PurchaseImportDetails_pkey" PRIMARY KEY ("PurchaseImportDetailsId");


--
-- TOC entry 9907 (class 2606 OID 185282)
-- Name: PurchaseItemWareHouse PurchaseItemWareHouse_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseItemWareHouse"
    ADD CONSTRAINT "PurchaseItemWareHouse_pkey" PRIMARY KEY ("PurchaseItemWareHouseId");


--
-- TOC entry 9895 (class 2606 OID 185224)
-- Name: PurchaseItems PurchaseItems_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseItems"
    ADD CONSTRAINT "PurchaseItems_pkey" PRIMARY KEY ("PurchaseItemsId");


--
-- TOC entry 9943 (class 2606 OID 185440)
-- Name: PurchaseOrderBatchDetails PurchaseOrderBatchDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderBatchDetails"
    ADD CONSTRAINT "PurchaseOrderBatchDetails_pkey" PRIMARY KEY ("PurchaseOrderBatchDetailsId");


--
-- TOC entry 9929 (class 2606 OID 185377)
-- Name: PurchaseOrderBillTo PurchaseOrderBillTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderBillTo"
    ADD CONSTRAINT "PurchaseOrderBillTo_pkey" PRIMARY KEY ("PurchaseOrderBillToId");


--
-- TOC entry 9933 (class 2606 OID 185395)
-- Name: PurchaseOrderDetails PurchaseOrderDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderDetails"
    ADD CONSTRAINT "PurchaseOrderDetails_pkey" PRIMARY KEY ("PurchaseOrderDetailsId");


--
-- TOC entry 9935 (class 2606 OID 185404)
-- Name: PurchaseOrderDispatchFrom PurchaseOrderDispatchFrom_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderDispatchFrom"
    ADD CONSTRAINT "PurchaseOrderDispatchFrom_pkey" PRIMARY KEY ("PurchaseOrderDispatchFromId");


--
-- TOC entry 9939 (class 2606 OID 185422)
-- Name: PurchaseOrderExportDetails PurchaseOrderExportDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderExportDetails"
    ADD CONSTRAINT "PurchaseOrderExportDetails_pkey" PRIMARY KEY ("PurchaseOrderExportDetailsId");


--
-- TOC entry 9937 (class 2606 OID 185413)
-- Name: PurchaseOrderItems PurchaseOrderItems_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderItems"
    ADD CONSTRAINT "PurchaseOrderItems_pkey" PRIMARY KEY ("PurchaseOrderItemsId");


--
-- TOC entry 9931 (class 2606 OID 185386)
-- Name: PurchaseOrderShipTo PurchaseOrderShipTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderShipTo"
    ADD CONSTRAINT "PurchaseOrderShipTo_pkey" PRIMARY KEY ("PurchaseOrderShipToId");


--
-- TOC entry 9941 (class 2606 OID 185431)
-- Name: PurchaseOrderValueDetails PurchaseOrderValueDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderValueDetails"
    ADD CONSTRAINT "PurchaseOrderValueDetails_pkey" PRIMARY KEY ("PurchaseOrderValueDetailsId");


--
-- TOC entry 9927 (class 2606 OID 185368)
-- Name: PurchaseOrder PurchaseOrder_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrder"
    ADD CONSTRAINT "PurchaseOrder_pkey" PRIMARY KEY ("PurchaseOrderId");


--
-- TOC entry 9905 (class 2606 OID 185273)
-- Name: PurchaseOtherCharges PurchaseOtherCharges_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOtherCharges"
    ADD CONSTRAINT "PurchaseOtherCharges_pkey" PRIMARY KEY ("PurchaseOtherChargeId");


--
-- TOC entry 9891 (class 2606 OID 185206)
-- Name: PurchaseOtherDetails PurchaseOtherDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOtherDetails"
    ADD CONSTRAINT "PurchaseOtherDetails_pkey" PRIMARY KEY ("PurchaseOtherDetailsId");


--
-- TOC entry 9893 (class 2606 OID 185215)
-- Name: PurchaseReceiptDetails PurchaseReceiptDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReceiptDetails"
    ADD CONSTRAINT "PurchaseReceiptDetails_pkey" PRIMARY KEY ("PurchaseReceiptDetailsId");


--
-- TOC entry 10071 (class 2606 OID 185741)
-- Name: PurchaseReturnBatchDetails PurchaseReturnBatchDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnBatchDetails"
    ADD CONSTRAINT "PurchaseReturnBatchDetails_pkey" PRIMARY KEY ("BatchDetailsId");


--
-- TOC entry 10067 (class 2606 OID 185723)
-- Name: PurchaseReturnBillFrom PurchaseReturnBillFrom_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnBillFrom"
    ADD CONSTRAINT "PurchaseReturnBillFrom_pkey" PRIMARY KEY ("PurchaseReturnBillFromId");


--
-- TOC entry 10057 (class 2606 OID 185677)
-- Name: PurchaseReturnDispatchFrom PurchaseReturnDispatchFrom_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnDispatchFrom"
    ADD CONSTRAINT "PurchaseReturnDispatchFrom_pkey" PRIMARY KEY ("PurchaseReturnDispatchFromId");


--
-- TOC entry 10077 (class 2606 OID 185772)
-- Name: PurchaseReturnEwayBillsDetails PurchaseReturnEwayBillsDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnEwayBillsDetails"
    ADD CONSTRAINT "PurchaseReturnEwayBillsDetails_pkey" PRIMARY KEY ("PurchaseReturnEwayBillsDetailsId");


--
-- TOC entry 10065 (class 2606 OID 185714)
-- Name: PurchaseReturnExportDetails PurchaseReturnExportDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnExportDetails"
    ADD CONSTRAINT "PurchaseReturnExportDetails_pkey" PRIMARY KEY ("PurchaseReturnExportDetailsId");


--
-- TOC entry 10079 (class 2606 OID 185781)
-- Name: PurchaseReturnItemWareHouse PurchaseReturnItemWareHouse_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnItemWareHouse"
    ADD CONSTRAINT "PurchaseReturnItemWareHouse_pkey" PRIMARY KEY ("PRItemWHId");


--
-- TOC entry 10059 (class 2606 OID 185686)
-- Name: PurchaseReturnItems PurchaseReturnItems_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnItems"
    ADD CONSTRAINT "PurchaseReturnItems_pkey" PRIMARY KEY ("PurchaseReturnItemsId");


--
-- TOC entry 10075 (class 2606 OID 185763)
-- Name: PurchaseReturnOtherCharges PurchaseReturnOtherCharges_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnOtherCharges"
    ADD CONSTRAINT "PurchaseReturnOtherCharges_pkey" PRIMARY KEY ("PurchaseReturnOtherChargeId");


--
-- TOC entry 10073 (class 2606 OID 185750)
-- Name: PurchaseReturnOtherDetails PurchaseReturnOtherDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnOtherDetails"
    ADD CONSTRAINT "PurchaseReturnOtherDetails_pkey" PRIMARY KEY ("PurchaseReturnOtherDetailsId");


--
-- TOC entry 10069 (class 2606 OID 185732)
-- Name: PurchaseReturnShipTo PurchaseReturnShipTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnShipTo"
    ADD CONSTRAINT "PurchaseReturnShipTo_pkey" PRIMARY KEY ("PurchaseReturnShipToId");


--
-- TOC entry 10061 (class 2606 OID 185695)
-- Name: PurchaseReturnValueDetails PurchaseReturnValueDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnValueDetails"
    ADD CONSTRAINT "PurchaseReturnValueDetails_pkey" PRIMARY KEY ("PurchaseReturnValueDetailsId");


--
-- TOC entry 10063 (class 2606 OID 185705)
-- Name: PurchaseReturn PurchaseReturn_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturn"
    ADD CONSTRAINT "PurchaseReturn_pkey" PRIMARY KEY ("PurchaseReturnId");


--
-- TOC entry 10133 (class 2606 OID 186001)
-- Name: PurchaseSettings PurchaseSettings_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseSettings"
    ADD CONSTRAINT "PurchaseSettings_pkey" PRIMARY KEY ("PurchaseSettingsId");


--
-- TOC entry 9889 (class 2606 OID 185197)
-- Name: PurchaseShipTo PurchaseShipTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseShipTo"
    ADD CONSTRAINT "PurchaseShipTo_pkey" PRIMARY KEY ("PurchaseShipToId");


--
-- TOC entry 9899 (class 2606 OID 185242)
-- Name: PurchaseValueDetails PurchaseValueDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseValueDetails"
    ADD CONSTRAINT "PurchaseValueDetails_pkey" PRIMARY KEY ("PurchaseValueDetailsId");


--
-- TOC entry 9885 (class 2606 OID 185179)
-- Name: Purchase Purchase_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Purchase"
    ADD CONSTRAINT "Purchase_pkey" PRIMARY KEY ("PurchaseId");


--
-- TOC entry 10203 (class 2606 OID 187256)
-- Name: QuotationItems QuotationItems_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."QuotationItems"
    ADD CONSTRAINT "QuotationItems_pkey" PRIMARY KEY ("QuotationItemsId");


--
-- TOC entry 10201 (class 2606 OID 187247)
-- Name: QuotationOtherCharges QuotationOtherCharges_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."QuotationOtherCharges"
    ADD CONSTRAINT "QuotationOtherCharges_pkey" PRIMARY KEY ("QuotationOtherChargeId");


--
-- TOC entry 10199 (class 2606 OID 187234)
-- Name: QuotationTo QuotationTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."QuotationTo"
    ADD CONSTRAINT "QuotationTo_pkey" PRIMARY KEY ("QuotationToId");


--
-- TOC entry 10205 (class 2606 OID 187265)
-- Name: QuotationValueDetails QuotationValueDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."QuotationValueDetails"
    ADD CONSTRAINT "QuotationValueDetails_pkey" PRIMARY KEY ("QuotationValueDetailsId");


--
-- TOC entry 10197 (class 2606 OID 187225)
-- Name: Quotation Quotation_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Quotation"
    ADD CONSTRAINT "Quotation_pkey" PRIMARY KEY ("QuotationId");


--
-- TOC entry 10113 (class 2606 OID 185898)
-- Name: ReceiptNoteBatchDetails ReceiptNoteBatchDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteBatchDetails"
    ADD CONSTRAINT "ReceiptNoteBatchDetails_pkey" PRIMARY KEY ("ReceiptNoteBatchDetailsId");


--
-- TOC entry 10099 (class 2606 OID 185835)
-- Name: ReceiptNoteBillTo ReceiptNoteBillTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteBillTo"
    ADD CONSTRAINT "ReceiptNoteBillTo_pkey" PRIMARY KEY ("ReceiptNoteBillToId");


--
-- TOC entry 10103 (class 2606 OID 185853)
-- Name: ReceiptNoteDetails ReceiptNoteDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteDetails"
    ADD CONSTRAINT "ReceiptNoteDetails_pkey" PRIMARY KEY ("ReceiptNoteDetailsId");


--
-- TOC entry 10105 (class 2606 OID 185862)
-- Name: ReceiptNoteDispatchFrom ReceiptNoteDispatchFrom_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteDispatchFrom"
    ADD CONSTRAINT "ReceiptNoteDispatchFrom_pkey" PRIMARY KEY ("ReceiptNoteDispatchFromId");


--
-- TOC entry 10109 (class 2606 OID 185880)
-- Name: ReceiptNoteExportDetails ReceiptNoteExportDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteExportDetails"
    ADD CONSTRAINT "ReceiptNoteExportDetails_pkey" PRIMARY KEY ("ReceiptNoteExportDetailsId");


--
-- TOC entry 10107 (class 2606 OID 185871)
-- Name: ReceiptNoteItems ReceiptNoteItems_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteItems"
    ADD CONSTRAINT "ReceiptNoteItems_pkey" PRIMARY KEY ("ReceiptNoteItemsId");


--
-- TOC entry 10101 (class 2606 OID 185844)
-- Name: ReceiptNoteShipTo ReceiptNoteShipTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteShipTo"
    ADD CONSTRAINT "ReceiptNoteShipTo_pkey" PRIMARY KEY ("ReceiptNoteShipToId");


--
-- TOC entry 10111 (class 2606 OID 185889)
-- Name: ReceiptNoteValueDetails ReceiptNoteValueDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteValueDetails"
    ADD CONSTRAINT "ReceiptNoteValueDetails_pkey" PRIMARY KEY ("ReceiptNoteValueDetailsId");


--
-- TOC entry 10097 (class 2606 OID 185826)
-- Name: ReceiptNote ReceiptNote_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNote"
    ADD CONSTRAINT "ReceiptNote_pkey" PRIMARY KEY ("ReceiptNoteId");


--
-- TOC entry 10001 (class 2606 OID 188276)
-- Name: SalesDebitNote SALEDBN104; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNote"
    ADD CONSTRAINT "SALEDBN104" UNIQUE ("Number");


--
-- TOC entry 9945 (class 2606 OID 188274)
-- Name: SalesReturn SALERET104; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturn"
    ADD CONSTRAINT "SALERET104" UNIQUE ("Number");


--
-- TOC entry 9829 (class 2606 OID 188272)
-- Name: Sales SALES104; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Sales"
    ADD CONSTRAINT "SALES104" UNIQUE ("Number");


--
-- TOC entry 10139 (class 2606 OID 187699)
-- Name: SalesPerson SALPRS104; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesPerson"
    ADD CONSTRAINT "SALPRS104" UNIQUE ("Code");


--
-- TOC entry 9782 (class 2606 OID 184934)
-- Name: Shipping SHIP101; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Shipping"
    ADD CONSTRAINT "SHIP101" UNIQUE ("Code");


--
-- TOC entry 9768 (class 2606 OID 187695)
-- Name: SimpleUnit SMPUT104; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SimpleUnit"
    ADD CONSTRAINT "SMPUT104" UNIQUE ("UQCCode");


--
-- TOC entry 9770 (class 2606 OID 184909)
-- Name: SimpleUnit SMPUT105; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SimpleUnit"
    ADD CONSTRAINT "SMPUT105" UNIQUE ("Code");


--
-- TOC entry 9752 (class 2606 OID 184879)
-- Name: StockCategory STKCTG101; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockCategory"
    ADD CONSTRAINT "STKCTG101" UNIQUE ("Code");


--
-- TOC entry 9735 (class 2606 OID 187707)
-- Name: StockGroup STKG104; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockGroup"
    ADD CONSTRAINT "STKG104" UNIQUE ("Name");


--
-- TOC entry 9737 (class 2606 OID 187709)
-- Name: StockGroup STKG106; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockGroup"
    ADD CONSTRAINT "STKG106" UNIQUE ("Code");


--
-- TOC entry 9763 (class 2606 OID 187753)
-- Name: StockGroupGSTInfo STKG111; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockGroupGSTInfo"
    ADD CONSTRAINT "STKG111" UNIQUE ("StockGroupId", "ApplicableFrom");


--
-- TOC entry 9758 (class 2606 OID 187757)
-- Name: StockItemGSTInfo STKG126; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemGSTInfo"
    ADD CONSTRAINT "STKG126" UNIQUE ("StockItemId", "ApplicableFrom");


--
-- TOC entry 9725 (class 2606 OID 187755)
-- Name: StockItem STKIT125; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItem"
    ADD CONSTRAINT "STKIT125" UNIQUE ("Code");


--
-- TOC entry 9727 (class 2606 OID 187866)
-- Name: StockItem STKIT129; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItem"
    ADD CONSTRAINT "STKIT129" UNIQUE ("Name");


--
-- TOC entry 9746 (class 2606 OID 187759)
-- Name: StockItemOpeningBalance STKIT130; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemOpeningBalance"
    ADD CONSTRAINT "STKIT130" UNIQUE ("StockItemId", "WareHouseId");


--
-- TOC entry 9787 (class 2606 OID 184947)
-- Name: SupplierGroup SUPG101; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SupplierGroup"
    ADD CONSTRAINT "SUPG101" UNIQUE ("Code");


--
-- TOC entry 10249 (class 2606 OID 187795)
-- Name: SalesAuditLogs SalesAuditLogs_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesAuditLogs"
    ADD CONSTRAINT "SalesAuditLogs_pkey" PRIMARY KEY ("LogId");


--
-- TOC entry 9877 (class 2606 OID 185159)
-- Name: SalesBatchDetails SalesBatchDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesBatchDetails"
    ADD CONSTRAINT "SalesBatchDetails_pkey" PRIMARY KEY ("SalesBatchDetailsId");


--
-- TOC entry 9839 (class 2606 OID 185074)
-- Name: SalesBillTo SalesBillTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesBillTo"
    ADD CONSTRAINT "SalesBillTo_pkey" PRIMARY KEY ("SalesBillToId");


--
-- TOC entry 10216 (class 2606 OID 188784)
-- Name: SalesContainerList SalesContainerList_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesContainerList"
    ADD CONSTRAINT "SalesContainerList_pkey" PRIMARY KEY ("SalesContainerListId");


--
-- TOC entry 10253 (class 2606 OID 187813)
-- Name: SalesDebitNoteAuditLogs SalesDebitNoteAuditLogs_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteAuditLogs"
    ADD CONSTRAINT "SalesDebitNoteAuditLogs_pkey" PRIMARY KEY ("LogId");


--
-- TOC entry 10043 (class 2606 OID 185646)
-- Name: SalesDebitNoteBatchDetails SalesDebitNoteBatchDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteBatchDetails"
    ADD CONSTRAINT "SalesDebitNoteBatchDetails_pkey" PRIMARY KEY ("SDNBatchId");


--
-- TOC entry 10010 (class 2606 OID 185574)
-- Name: SalesDebitNoteBillTo SalesDebitNoteBillTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteBillTo"
    ADD CONSTRAINT "SalesDebitNoteBillTo_pkey" PRIMARY KEY ("SalesDebitNoteBillToId");


--
-- TOC entry 10223 (class 2606 OID 188936)
-- Name: SalesDebitNoteContainerList SalesDebitNoteContainerList_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteContainerList"
    ADD CONSTRAINT "SalesDebitNoteContainerList_pkey" PRIMARY KEY ("SalesDebitNoteContainerListId");


--
-- TOC entry 10039 (class 2606 OID 188990)
-- Name: SalesDebitNoteEwayBillsDetails SalesDebitNoteEwayBillsDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteEwayBillsDetails"
    ADD CONSTRAINT "SalesDebitNoteEwayBillsDetails_pkey" PRIMARY KEY ("SalesDebitNoteEwayBillsDetailsId");


--
-- TOC entry 10272 (class 2606 OID 188979)
-- Name: SalesDebitNoteHSNSummary SalesDebitNoteHSNSummary_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteHSNSummary"
    ADD CONSTRAINT "SalesDebitNoteHSNSummary_pkey" PRIMARY KEY ("SaleDebitNoteHSNId");


--
-- TOC entry 10030 (class 2606 OID 185619)
-- Name: SalesDebitNoteImportDetails SalesDebitNoteImportDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteImportDetails"
    ADD CONSTRAINT "SalesDebitNoteImportDetails_pkey" PRIMARY KEY ("SalesDebitNoteImportDetailsId");


--
-- TOC entry 10052 (class 2606 OID 185668)
-- Name: SalesDebitNoteItemWareHouse SalesDebitNoteItemWareHouse_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteItemWareHouse"
    ADD CONSTRAINT "SalesDebitNoteItemWareHouse_pkey" PRIMARY KEY ("SDNItemWHId");


--
-- TOC entry 10025 (class 2606 OID 188945)
-- Name: SalesDebitNoteItems SalesDebitNoteItems_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteItems"
    ADD CONSTRAINT "SalesDebitNoteItems_pkey" PRIMARY KEY ("SalesDebitNoteItemsId");


--
-- TOC entry 10320 (class 2606 OID 188649)
-- Name: SalesDebitNoteMain SalesDebitNoteMain_Number_key; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteMain"
    ADD CONSTRAINT "SalesDebitNoteMain_Number_key" UNIQUE ("Number");


--
-- TOC entry 10322 (class 2606 OID 188647)
-- Name: SalesDebitNoteMain SalesDebitNoteMain_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteMain"
    ADD CONSTRAINT "SalesDebitNoteMain_pkey" PRIMARY KEY ("SaleDebitNoteId");


--
-- TOC entry 10047 (class 2606 OID 188967)
-- Name: SalesDebitNoteOtherCharges SalesDebitNoteOtherCharges_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteOtherCharges"
    ADD CONSTRAINT "SalesDebitNoteOtherCharges_pkey" PRIMARY KEY ("SalesDebitNoteOtherChargeId");


--
-- TOC entry 10018 (class 2606 OID 185592)
-- Name: SalesDebitNoteOtherDetails SalesDebitNoteOtherDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteOtherDetails"
    ADD CONSTRAINT "SalesDebitNoteOtherDetails_pkey" PRIMARY KEY ("SalesDebitNoteOtherDetailsId");


--
-- TOC entry 10227 (class 2606 OID 188925)
-- Name: SalesDebitNotePackingList SalesDebitNotePackingList_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNotePackingList"
    ADD CONSTRAINT "SalesDebitNotePackingList_pkey" PRIMARY KEY ("SalesDebitNotePackingListId");


--
-- TOC entry 10021 (class 2606 OID 185601)
-- Name: SalesDebitNoteReceiptDetails SalesDebitNoteReceiptDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteReceiptDetails"
    ADD CONSTRAINT "SalesDebitNoteReceiptDetails_pkey" PRIMARY KEY ("SalesDebitNoteReceiptDetailsId");


--
-- TOC entry 10014 (class 2606 OID 185583)
-- Name: SalesDebitNoteShipTo SalesDebitNoteShipTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteShipTo"
    ADD CONSTRAINT "SalesDebitNoteShipTo_pkey" PRIMARY KEY ("SalesDebitNoteShipToId");


--
-- TOC entry 10035 (class 2606 OID 185628)
-- Name: SalesDebitNoteValueDetails SalesDebitNoteValueDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteValueDetails"
    ADD CONSTRAINT "SalesDebitNoteValueDetails_pkey" PRIMARY KEY ("SalesDebitNoteValueDetailsId");


--
-- TOC entry 10003 (class 2606 OID 185565)
-- Name: SalesDebitNote SalesDebitNote_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNote"
    ADD CONSTRAINT "SalesDebitNote_pkey" PRIMARY KEY ("SaleDebitNoteId");


--
-- TOC entry 9855 (class 2606 OID 185114)
-- Name: SalesDispatchDetails SalesDispatchDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDispatchDetails"
    ADD CONSTRAINT "SalesDispatchDetails_pkey" PRIMARY KEY ("SalesDispatchDetailsId");


--
-- TOC entry 9874 (class 2606 OID 188838)
-- Name: SalesEwayBillsDetails SalesEwayBillsDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesEwayBillsDetails"
    ADD CONSTRAINT "SalesEwayBillsDetails_pkey" PRIMARY KEY ("SalesEwayBillsDetailsId");


--
-- TOC entry 9865 (class 2606 OID 185132)
-- Name: SalesExportDetails SalesExportDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesExportDetails"
    ADD CONSTRAINT "SalesExportDetails_pkey" PRIMARY KEY ("SalesExportDetailsId");


--
-- TOC entry 10268 (class 2606 OID 188827)
-- Name: SalesHSNSummary SalesHSNSummary_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesHSNSummary"
    ADD CONSTRAINT "SalesHSNSummary_pkey" PRIMARY KEY ("SaleHSNId");


--
-- TOC entry 9882 (class 2606 OID 185168)
-- Name: SalesItemWareHouse SalesItemWareHouse_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesItemWareHouse"
    ADD CONSTRAINT "SalesItemWareHouse_pkey" PRIMARY KEY ("SalesItemWareHouseId");


--
-- TOC entry 9860 (class 2606 OID 188793)
-- Name: SalesItems SalesItems_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesItems"
    ADD CONSTRAINT "SalesItems_pkey" PRIMARY KEY ("SalesItemsId");


--
-- TOC entry 10280 (class 2606 OID 188531)
-- Name: SalesMain SalesMain_Number_key; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesMain"
    ADD CONSTRAINT "SalesMain_Number_key" UNIQUE ("Number");


--
-- TOC entry 10282 (class 2606 OID 188529)
-- Name: SalesMain SalesMain_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesMain"
    ADD CONSTRAINT "SalesMain_pkey" PRIMARY KEY ("SaleId");


--
-- TOC entry 9925 (class 2606 OID 185361)
-- Name: SalesOrderBatchDetails SalesOrderBatchDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderBatchDetails"
    ADD CONSTRAINT "SalesOrderBatchDetails_pkey" PRIMARY KEY ("SalesOrderBatchDetailsId");


--
-- TOC entry 9911 (class 2606 OID 185298)
-- Name: SalesOrderBillTo SalesOrderBillTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderBillTo"
    ADD CONSTRAINT "SalesOrderBillTo_pkey" PRIMARY KEY ("SalesOrderBillToId");


--
-- TOC entry 9915 (class 2606 OID 185316)
-- Name: SalesOrderDetails SalesOrderDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderDetails"
    ADD CONSTRAINT "SalesOrderDetails_pkey" PRIMARY KEY ("SalesOrderDetailsId");


--
-- TOC entry 9917 (class 2606 OID 185325)
-- Name: SalesOrderDispatchFrom SalesOrderDispatchFrom_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderDispatchFrom"
    ADD CONSTRAINT "SalesOrderDispatchFrom_pkey" PRIMARY KEY ("SalesOrderDispatchFromId");


--
-- TOC entry 9921 (class 2606 OID 185343)
-- Name: SalesOrderExportDetails SalesOrderExportDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderExportDetails"
    ADD CONSTRAINT "SalesOrderExportDetails_pkey" PRIMARY KEY ("SalesOrderExportDetailsId");


--
-- TOC entry 9919 (class 2606 OID 185334)
-- Name: SalesOrderItems SalesOrderItems_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderItems"
    ADD CONSTRAINT "SalesOrderItems_pkey" PRIMARY KEY ("SalesOrderItemsId");


--
-- TOC entry 9913 (class 2606 OID 185307)
-- Name: SalesOrderShipTo SalesOrderShipTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderShipTo"
    ADD CONSTRAINT "SalesOrderShipTo_pkey" PRIMARY KEY ("SalesOrderShipToId");


--
-- TOC entry 9923 (class 2606 OID 185352)
-- Name: SalesOrderValueDetails SalesOrderValueDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderValueDetails"
    ADD CONSTRAINT "SalesOrderValueDetails_pkey" PRIMARY KEY ("SalesOrderValueDetailsId");


--
-- TOC entry 9909 (class 2606 OID 185289)
-- Name: SalesOrder SalesOrder_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrder"
    ADD CONSTRAINT "SalesOrder_pkey" PRIMARY KEY ("SaleOrderId");


--
-- TOC entry 9851 (class 2606 OID 188815)
-- Name: SalesOtherCharges SalesOtherCharges_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOtherCharges"
    ADD CONSTRAINT "SalesOtherCharges_pkey" PRIMARY KEY ("SalesOtherChargeId");


--
-- TOC entry 9847 (class 2606 OID 185092)
-- Name: SalesOtherDetails SalesOtherDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOtherDetails"
    ADD CONSTRAINT "SalesOtherDetails_pkey" PRIMARY KEY ("SalesOtherDetailsId");


--
-- TOC entry 10220 (class 2606 OID 188773)
-- Name: SalesPackingList SalesPackingList_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesPackingList"
    ADD CONSTRAINT "SalesPackingList_pkey" PRIMARY KEY ("SalesPackingListId");


--
-- TOC entry 10142 (class 2606 OID 186027)
-- Name: SalesPerson SalesPerson_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesPerson"
    ADD CONSTRAINT "SalesPerson_pkey" PRIMARY KEY ("SalesPersonId");


--
-- TOC entry 10251 (class 2606 OID 187804)
-- Name: SalesReturnAuditLogs SalesReturnAuditLogs_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnAuditLogs"
    ADD CONSTRAINT "SalesReturnAuditLogs_pkey" PRIMARY KEY ("LogId");


--
-- TOC entry 9987 (class 2606 OID 185532)
-- Name: SalesReturnBatchDetails SalesReturnBatchDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnBatchDetails"
    ADD CONSTRAINT "SalesReturnBatchDetails_pkey" PRIMARY KEY ("SalesReturnBtchDtlsId");


--
-- TOC entry 9954 (class 2606 OID 185460)
-- Name: SalesReturnBillTo SalesReturnBillTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnBillTo"
    ADD CONSTRAINT "SalesReturnBillTo_pkey" PRIMARY KEY ("SalesReturnBillToId");


--
-- TOC entry 10231 (class 2606 OID 188860)
-- Name: SalesReturnContainerList SalesReturnContainerList_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnContainerList"
    ADD CONSTRAINT "SalesReturnContainerList_pkey" PRIMARY KEY ("SalesReturnContainerListId");


--
-- TOC entry 9983 (class 2606 OID 188914)
-- Name: SalesReturnEwayBillsDetails SalesReturnEwayBillsDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnEwayBillsDetails"
    ADD CONSTRAINT "SalesReturnEwayBillsDetails_pkey" PRIMARY KEY ("SalesReturnEwayBillsDetailsId");


--
-- TOC entry 10276 (class 2606 OID 188903)
-- Name: SalesReturnHSNSummary SalesReturnHSNSummary_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnHSNSummary"
    ADD CONSTRAINT "SalesReturnHSNSummary_pkey" PRIMARY KEY ("SaleReturnHSNId");


--
-- TOC entry 9974 (class 2606 OID 185505)
-- Name: SalesReturnImportDetails SalesReturnImportDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnImportDetails"
    ADD CONSTRAINT "SalesReturnImportDetails_pkey" PRIMARY KEY ("SalesReturnImportDetailsId");


--
-- TOC entry 9996 (class 2606 OID 185554)
-- Name: SalesReturnItemWareHouse SalesReturnItemWareHouse_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnItemWareHouse"
    ADD CONSTRAINT "SalesReturnItemWareHouse_pkey" PRIMARY KEY ("SRItemWHId");


--
-- TOC entry 9969 (class 2606 OID 188869)
-- Name: SalesReturnItems SalesReturnItems_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnItems"
    ADD CONSTRAINT "SalesReturnItems_pkey" PRIMARY KEY ("SalesReturnItemsId");


--
-- TOC entry 10300 (class 2606 OID 188590)
-- Name: SalesReturnMain SalesReturnMain_Number_key; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnMain"
    ADD CONSTRAINT "SalesReturnMain_Number_key" UNIQUE ("Number");


--
-- TOC entry 10302 (class 2606 OID 188588)
-- Name: SalesReturnMain SalesReturnMain_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnMain"
    ADD CONSTRAINT "SalesReturnMain_pkey" PRIMARY KEY ("SaleReturnId");


--
-- TOC entry 9991 (class 2606 OID 188891)
-- Name: SalesReturnOtherCharges SalesReturnOtherCharges_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnOtherCharges"
    ADD CONSTRAINT "SalesReturnOtherCharges_pkey" PRIMARY KEY ("SalesReturnOtherChargeId");


--
-- TOC entry 9962 (class 2606 OID 185478)
-- Name: SalesReturnOtherDetails SalesReturnOtherDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnOtherDetails"
    ADD CONSTRAINT "SalesReturnOtherDetails_pkey" PRIMARY KEY ("SalesReturnOtherDetailsId");


--
-- TOC entry 10235 (class 2606 OID 188849)
-- Name: SalesReturnPackingList SalesReturnPackingList_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnPackingList"
    ADD CONSTRAINT "SalesReturnPackingList_pkey" PRIMARY KEY ("SalesReturnPackingListId");


--
-- TOC entry 9965 (class 2606 OID 185487)
-- Name: SalesReturnReceiptDetails SalesReturnReceiptDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnReceiptDetails"
    ADD CONSTRAINT "SalesReturnReceiptDetails_pkey" PRIMARY KEY ("SalesReturnReceiptDetailsId");


--
-- TOC entry 9958 (class 2606 OID 185469)
-- Name: SalesReturnShipTo SalesReturnShipTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnShipTo"
    ADD CONSTRAINT "SalesReturnShipTo_pkey" PRIMARY KEY ("SalesReturnShipToId");


--
-- TOC entry 9979 (class 2606 OID 185514)
-- Name: SalesReturnValueDetails SalesReturnValueDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnValueDetails"
    ADD CONSTRAINT "SalesReturnValueDetails_pkey" PRIMARY KEY ("SalesReturnValueDetailsId");


--
-- TOC entry 9947 (class 2606 OID 185451)
-- Name: SalesReturn SalesReturn_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturn"
    ADD CONSTRAINT "SalesReturn_pkey" PRIMARY KEY ("SaleReturnId");


--
-- TOC entry 9843 (class 2606 OID 185083)
-- Name: SalesShipTo SalesShipTo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesShipTo"
    ADD CONSTRAINT "SalesShipTo_pkey" PRIMARY KEY ("SalesShipToId");


--
-- TOC entry 9869 (class 2606 OID 185141)
-- Name: SalesValueDetails SalesValueDetails_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesValueDetails"
    ADD CONSTRAINT "SalesValueDetails_pkey" PRIMARY KEY ("SalesValueDetailsId");


--
-- TOC entry 9836 (class 2606 OID 185065)
-- Name: Sales Sales_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Sales"
    ADD CONSTRAINT "Sales_pkey" PRIMARY KEY ("SaleId");


--
-- TOC entry 9785 (class 2606 OID 184932)
-- Name: Shipping Shipping_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Shipping"
    ADD CONSTRAINT "Shipping_pkey" PRIMARY KEY ("ShippingId");


--
-- TOC entry 9773 (class 2606 OID 184907)
-- Name: SimpleUnit SimpleUnit_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SimpleUnit"
    ADD CONSTRAINT "SimpleUnit_pkey" PRIMARY KEY ("SimpleUnitId");


--
-- TOC entry 9756 (class 2606 OID 184877)
-- Name: StockCategory StockCategory_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockCategory"
    ADD CONSTRAINT "StockCategory_pkey" PRIMARY KEY ("StockCategoryId");


--
-- TOC entry 9766 (class 2606 OID 184897)
-- Name: StockGroupGSTInfo StockGroupGSTInfo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockGroupGSTInfo"
    ADD CONSTRAINT "StockGroupGSTInfo_pkey" PRIMARY KEY ("StockGroupGSTInfoId");


--
-- TOC entry 9741 (class 2606 OID 184847)
-- Name: StockGroup StockGroup_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockGroup"
    ADD CONSTRAINT "StockGroup_pkey" PRIMARY KEY ("StockGroupId");


--
-- TOC entry 10146 (class 2606 OID 186044)
-- Name: StockItemBalance StockItemBalance_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemBalance"
    ADD CONSTRAINT "StockItemBalance_pkey" PRIMARY KEY ("StockItemBalanceId");


--
-- TOC entry 9744 (class 2606 OID 184857)
-- Name: StockItemDescription StockItemDescription_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemDescription"
    ADD CONSTRAINT "StockItemDescription_pkey" PRIMARY KEY ("StockItemDescriptionId");


--
-- TOC entry 9761 (class 2606 OID 184888)
-- Name: StockItemGSTInfo StockItemGSTInfo_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemGSTInfo"
    ADD CONSTRAINT "StockItemGSTInfo_pkey" PRIMARY KEY ("StockItemGSTInfoId");


--
-- TOC entry 9750 (class 2606 OID 184866)
-- Name: StockItemOpeningBalance StockItemOpeningBalance_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemOpeningBalance"
    ADD CONSTRAINT "StockItemOpeningBalance_pkey" PRIMARY KEY ("StockItemOpeningBalanceId");


--
-- TOC entry 9733 (class 2606 OID 184835)
-- Name: StockItem StockItem_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItem"
    ADD CONSTRAINT "StockItem_pkey" PRIMARY KEY ("StockItemId");


--
-- TOC entry 9799 (class 2606 OID 184966)
-- Name: SupplierAddress SupplierAddress_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SupplierAddress"
    ADD CONSTRAINT "SupplierAddress_pkey" PRIMARY KEY ("SupplierAddressId");


--
-- TOC entry 9791 (class 2606 OID 184945)
-- Name: SupplierGroup SupplierGroup_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SupplierGroup"
    ADD CONSTRAINT "SupplierGroup_pkey" PRIMARY KEY ("SupplierGroupId");


--
-- TOC entry 9796 (class 2606 OID 184957)
-- Name: Supplier Supplier_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Supplier"
    ADD CONSTRAINT "Supplier_pkey" PRIMARY KEY ("SupplierId");


--
-- TOC entry 9691 (class 2606 OID 187681)
-- Name: TermAndCondition TAC102; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."TermAndCondition"
    ADD CONSTRAINT "TAC102" UNIQUE ("Title");


--
-- TOC entry 9693 (class 2606 OID 187683)
-- Name: TermAndCondition TAC103; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."TermAndCondition"
    ADD CONSTRAINT "TAC103" UNIQUE ("Code");


--
-- TOC entry 10239 (class 2606 OID 187864)
-- Name: Template TEPLT111; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Template"
    ADD CONSTRAINT "TEPLT111" UNIQUE ("Name");


--
-- TOC entry 9808 (class 2606 OID 187691)
-- Name: Transporters TRANS104; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Transporters"
    ADD CONSTRAINT "TRANS104" UNIQUE ("Code");


--
-- TOC entry 9810 (class 2606 OID 187693)
-- Name: Transporters TRANS105; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Transporters"
    ADD CONSTRAINT "TRANS105" UNIQUE ("GSTIN");


--
-- TOC entry 10095 (class 2606 OID 188246)
-- Name: PrintTemplate TemplateId; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PrintTemplate"
    ADD CONSTRAINT "TemplateId" UNIQUE ("TemplateId");


--
-- TOC entry 10245 (class 2606 OID 187529)
-- Name: TemplateSettings TemplateSettings_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."TemplateSettings"
    ADD CONSTRAINT "TemplateSettings_pkey" PRIMARY KEY ("TemplateSettingsId");


--
-- TOC entry 10242 (class 2606 OID 187519)
-- Name: Template Template_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Template"
    ADD CONSTRAINT "Template_pkey" PRIMARY KEY ("TemplateId");


--
-- TOC entry 9675 (class 2606 OID 184693)
-- Name: Tenant_Migrations Tenant_Migrations_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Tenant_Migrations"
    ADD CONSTRAINT "Tenant_Migrations_pkey" PRIMARY KEY (name);


--
-- TOC entry 10340 (class 2606 OID 189272)
-- Name: Tenant_Seeders Tenant_Seeders_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Tenant_Seeders"
    ADD CONSTRAINT "Tenant_Seeders_pkey" PRIMARY KEY (name);


--
-- TOC entry 9696 (class 2606 OID 184757)
-- Name: TermAndCondition TermAndCondition_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."TermAndCondition"
    ADD CONSTRAINT "TermAndCondition_pkey" PRIMARY KEY ("TermAndConditionId");


--
-- TOC entry 9816 (class 2606 OID 185015)
-- Name: TransportersAddress TransportersAddress_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."TransportersAddress"
    ADD CONSTRAINT "TransportersAddress_pkey" PRIMARY KEY ("TransportersAddressId");


--
-- TOC entry 9819 (class 2606 OID 185022)
-- Name: TransportersVehicles TransportersVehicles_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."TransportersVehicles"
    ADD CONSTRAINT "TransportersVehicles_pkey" PRIMARY KEY ("TransportersVehiclesId");


--
-- TOC entry 9813 (class 2606 OID 185004)
-- Name: Transporters Transporters_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Transporters"
    ADD CONSTRAINT "Transporters_pkey" PRIMARY KEY ("TransportersId");


--
-- TOC entry 9775 (class 2606 OID 187705)
-- Name: WareHouse WHO102; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."WareHouse"
    ADD CONSTRAINT "WHO102" UNIQUE ("Name");


--
-- TOC entry 9777 (class 2606 OID 187703)
-- Name: WareHouse WHO104; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."WareHouse"
    ADD CONSTRAINT "WHO104" UNIQUE ("Code");


--
-- TOC entry 9780 (class 2606 OID 184920)
-- Name: WareHouse WareHouse_pkey; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."WareHouse"
    ADD CONSTRAINT "WareHouse_pkey" PRIMARY KEY ("WareHouseId");


--
-- TOC entry 10191 (class 2606 OID 187189)
-- Name: CustomerTurnOver customerId_unique_key; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerTurnOver"
    ADD CONSTRAINT "customerId_unique_key" UNIQUE ("CustomerId");


--
-- TOC entry 10083 (class 2606 OID 185792)
-- Name: EinvoiceDetails einvoice_details_unique_key; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EinvoiceDetails"
    ADD CONSTRAINT einvoice_details_unique_key UNIQUE ("InvoiceId", "InvoiceType");


--
-- TOC entry 10209 (class 2606 OID 187415)
-- Name: EinvoiceEwayDispatchDetails einvoice_eway_dispatch_details_unique_key; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EinvoiceEwayDispatchDetails"
    ADD CONSTRAINT einvoice_eway_dispatch_details_unique_key UNIQUE ("InvoiceId", "InvoiceType");


--
-- TOC entry 10213 (class 2606 OID 187417)
-- Name: EinvoiceEwayExportDetails einvoice_eway_export_details_unique_key; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EinvoiceEwayExportDetails"
    ADD CONSTRAINT einvoice_eway_export_details_unique_key UNIQUE ("InvoiceId", "InvoiceType");


--
-- TOC entry 10089 (class 2606 OID 186937)
-- Name: EwayBillDetails eway_bill_details_unique_key; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EwayBillDetails"
    ADD CONSTRAINT eway_bill_details_unique_key UNIQUE ("InvoiceId", "InvoiceType");


--
-- TOC entry 10257 (class 2606 OID 187874)
-- Name: EwayDetails eway_details; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EwayDetails"
    ADD CONSTRAINT eway_details UNIQUE ("InvoiceId", "InvoiceType");


--
-- TOC entry 10151 (class 2606 OID 187069)
-- Name: StockItemBalance stock_item_balance_unique_key; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemBalance"
    ADD CONSTRAINT stock_item_balance_unique_key UNIQUE ("StockItemId", "WareHouseId");


--
-- TOC entry 10153 (class 2606 OID 188270)
-- Name: StockItemBalance stockitembalance_unique; Type: CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemBalance"
    ADD CONSTRAINT stockitembalance_unique UNIQUE ("StockItemId", "StockGroupId", "WareHouseId");


--
-- TOC entry 9802 (class 1259 OID 188494)
-- Name: AutoNumbering_TemplateId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "AutoNumbering_TemplateId" ON "10083_10833"."AutoNumbering" USING btree ("TemplateId");


--
-- TOC entry 9687 (class 1259 OID 188493)
-- Name: BankAddress_BankId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "BankAddress_BankId" ON "10083_10833"."BankAddress" USING btree ("BankId");


--
-- TOC entry 9684 (class 1259 OID 188498)
-- Name: Bank_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Bank_ActiveStatus" ON "10083_10833"."Bank" USING btree ("ActiveStatus");


--
-- TOC entry 9701 (class 1259 OID 188499)
-- Name: Currency_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Currency_ActiveStatus" ON "10083_10833"."Currency" USING btree ("ActiveStatus");


--
-- TOC entry 9715 (class 1259 OID 188327)
-- Name: CustomerBillingAddress_CustomerId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "CustomerBillingAddress_CustomerId" ON "10083_10833"."CustomerBillingAddress" USING btree ("CustomerId");


--
-- TOC entry 9721 (class 1259 OID 188329)
-- Name: CustomerContactPerson_CustomerId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "CustomerContactPerson_CustomerId" ON "10083_10833"."CustomerContactPerson" USING btree ("CustomerId");


--
-- TOC entry 9704 (class 1259 OID 188501)
-- Name: CustomerGroup_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "CustomerGroup_ActiveStatus" ON "10083_10833"."CustomerGroup" USING btree ("ActiveStatus");


--
-- TOC entry 9705 (class 1259 OID 188330)
-- Name: CustomerGroup_ParentGroupId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "CustomerGroup_ParentGroupId" ON "10083_10833"."CustomerGroup" USING btree ("ParentGroupId");


--
-- TOC entry 9718 (class 1259 OID 188328)
-- Name: CustomerShippingAddress_CustomerId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "CustomerShippingAddress_CustomerId" ON "10083_10833"."CustomerShippingAddress" USING btree ("CustomerId");


--
-- TOC entry 9710 (class 1259 OID 188500)
-- Name: Customer_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Customer_ActiveStatus" ON "10083_10833"."Customer" USING btree ("ActiveStatus");


--
-- TOC entry 9711 (class 1259 OID 188325)
-- Name: Customer_CurrencyId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Customer_CurrencyId" ON "10083_10833"."Customer" USING btree ("CurrencyId");


--
-- TOC entry 9712 (class 1259 OID 188326)
-- Name: Customer_CustomerGroupId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Customer_CustomerGroupId" ON "10083_10833"."Customer" USING btree ("CustomerGroupId");


--
-- TOC entry 10161 (class 1259 OID 188502)
-- Name: LUTMaster_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "LUTMaster_ActiveStatus" ON "10083_10833"."LUTMaster" USING btree ("ActiveStatus");


--
-- TOC entry 10154 (class 1259 OID 188503)
-- Name: OtherCharges_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "OtherCharges_ActiveStatus" ON "10083_10833"."OtherCharges" USING btree ("ActiveStatus");


--
-- TOC entry 9875 (class 1259 OID 188359)
-- Name: SalesBatchDetails_SalesItemsId_index; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesBatchDetails_SalesItemsId_index" ON "10083_10833"."SalesBatchDetails" USING btree ("SalesItemsId");


--
-- TOC entry 9837 (class 1259 OID 188350)
-- Name: SalesBillTo_SaleId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesBillTo_SaleId" ON "10083_10833"."SalesBillTo" USING btree ("SaleId");


--
-- TOC entry 10214 (class 1259 OID 189014)
-- Name: SalesContainerList_SaleId_index; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesContainerList_SaleId_index" ON "10083_10833"."SalesContainerList" USING btree ("SaleId");


--
-- TOC entry 9853 (class 1259 OID 188353)
-- Name: SalesDispatchDetails_SaleId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesDispatchDetails_SaleId" ON "10083_10833"."SalesDispatchDetails" USING btree ("SaleId");


--
-- TOC entry 9871 (class 1259 OID 189074)
-- Name: SalesEwayBillsDetails_SaleId_index; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesEwayBillsDetails_SaleId_index" ON "10083_10833"."SalesEwayBillsDetails" USING btree ("SaleId");


--
-- TOC entry 9872 (class 1259 OID 188361)
-- Name: SalesEwayBillsDetails_TransportersId_index; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesEwayBillsDetails_TransportersId_index" ON "10083_10833"."SalesEwayBillsDetails" USING btree ("TransportersId");


--
-- TOC entry 9862 (class 1259 OID 188355)
-- Name: SalesExportDetails_LUTMasterId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesExportDetails_LUTMasterId" ON "10083_10833"."SalesExportDetails" USING btree ("LUTMasterId");


--
-- TOC entry 9863 (class 1259 OID 188354)
-- Name: SalesExportDetails_SaleId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesExportDetails_SaleId" ON "10083_10833"."SalesExportDetails" USING btree ("SaleId");


--
-- TOC entry 9879 (class 1259 OID 188364)
-- Name: SalesItemWareHouse_SalesItemsId_index; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesItemWareHouse_SalesItemsId_index" ON "10083_10833"."SalesItemWareHouse" USING btree ("SalesItemsId");


--
-- TOC entry 9880 (class 1259 OID 188365)
-- Name: SalesItemWareHouse_WareHouseId_index; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesItemWareHouse_WareHouseId_index" ON "10083_10833"."SalesItemWareHouse" USING btree ("WareHouseId");


--
-- TOC entry 9857 (class 1259 OID 189027)
-- Name: SalesItems_SaleId_index; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesItems_SaleId_index" ON "10083_10833"."SalesItems" USING btree ("SaleId");


--
-- TOC entry 9858 (class 1259 OID 188358)
-- Name: SalesItems_StockItemId_index; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesItems_StockItemId_index" ON "10083_10833"."SalesItems" USING btree ("StockItemId");


--
-- TOC entry 9848 (class 1259 OID 188363)
-- Name: SalesOtherCharges_OtherChargeId_index; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesOtherCharges_OtherChargeId_index" ON "10083_10833"."SalesOtherCharges" USING btree ("OtherChargeId");


--
-- TOC entry 9849 (class 1259 OID 189043)
-- Name: SalesOtherCharges_SaleId_index; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesOtherCharges_SaleId_index" ON "10083_10833"."SalesOtherCharges" USING btree ("SaleId");


--
-- TOC entry 9845 (class 1259 OID 188352)
-- Name: SalesOtherDetails_SaleId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesOtherDetails_SaleId" ON "10083_10833"."SalesOtherDetails" USING btree ("SaleId");


--
-- TOC entry 10218 (class 1259 OID 188999)
-- Name: SalesPackingList_SaleId_index; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesPackingList_SaleId_index" ON "10083_10833"."SalesPackingList" USING btree ("SaleId");


--
-- TOC entry 10140 (class 1259 OID 188504)
-- Name: SalesPerson_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesPerson_ActiveStatus" ON "10083_10833"."SalesPerson" USING btree ("ActiveStatus");


--
-- TOC entry 9841 (class 1259 OID 188351)
-- Name: SalesShipTo_SaleId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesShipTo_SaleId" ON "10083_10833"."SalesShipTo" USING btree ("SaleId");


--
-- TOC entry 9867 (class 1259 OID 188356)
-- Name: SalesValueDetails_SaleId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SalesValueDetails_SaleId" ON "10083_10833"."SalesValueDetails" USING btree ("SaleId");


--
-- TOC entry 9830 (class 1259 OID 188349)
-- Name: Sales_CurrencyId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Sales_CurrencyId" ON "10083_10833"."Sales" USING btree ("CurrencyId");


--
-- TOC entry 9831 (class 1259 OID 188346)
-- Name: Sales_CustomerId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Sales_CustomerId" ON "10083_10833"."Sales" USING btree ("CustomerId");


--
-- TOC entry 9832 (class 1259 OID 188348)
-- Name: Sales_SalesPersonId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Sales_SalesPersonId" ON "10083_10833"."Sales" USING btree ("SalesPersonId");


--
-- TOC entry 9833 (class 1259 OID 188345)
-- Name: Sales_TemplateId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Sales_TemplateId" ON "10083_10833"."Sales" USING btree ("TemplateId");


--
-- TOC entry 9834 (class 1259 OID 188347)
-- Name: Sales_TermAndConditionId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Sales_TermAndConditionId" ON "10083_10833"."Sales" USING btree ("TermAndConditionId");


--
-- TOC entry 9783 (class 1259 OID 188505)
-- Name: Shipping_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Shipping_ActiveStatus" ON "10083_10833"."Shipping" USING btree ("ActiveStatus");


--
-- TOC entry 9771 (class 1259 OID 188506)
-- Name: SimpleUnit_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SimpleUnit_ActiveStatus" ON "10083_10833"."SimpleUnit" USING btree ("ActiveStatus");


--
-- TOC entry 9753 (class 1259 OID 188507)
-- Name: StockCategory_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "StockCategory_ActiveStatus" ON "10083_10833"."StockCategory" USING btree ("ActiveStatus");


--
-- TOC entry 9754 (class 1259 OID 188331)
-- Name: StockCategory_ParentId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "StockCategory_ParentId" ON "10083_10833"."StockCategory" USING btree ("ParentId");


--
-- TOC entry 9764 (class 1259 OID 188333)
-- Name: StockGroupGSTInfo_StockGroupId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "StockGroupGSTInfo_StockGroupId" ON "10083_10833"."StockGroupGSTInfo" USING btree ("StockGroupId");


--
-- TOC entry 9738 (class 1259 OID 188508)
-- Name: StockGroup_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "StockGroup_ActiveStatus" ON "10083_10833"."StockGroup" USING btree ("ActiveStatus");


--
-- TOC entry 9739 (class 1259 OID 188332)
-- Name: StockGroup_ParentGroupId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "StockGroup_ParentGroupId" ON "10083_10833"."StockGroup" USING btree ("ParentGroupId");


--
-- TOC entry 9742 (class 1259 OID 188337)
-- Name: StockItemDescription_StockItemId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "StockItemDescription_StockItemId" ON "10083_10833"."StockItemDescription" USING btree ("StockItemId");


--
-- TOC entry 9759 (class 1259 OID 188338)
-- Name: StockItemGSTInfo_StockItemId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "StockItemGSTInfo_StockItemId" ON "10083_10833"."StockItemGSTInfo" USING btree ("StockItemId");


--
-- TOC entry 9747 (class 1259 OID 188339)
-- Name: StockItemOpeningBalance_StockItemId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "StockItemOpeningBalance_StockItemId" ON "10083_10833"."StockItemOpeningBalance" USING btree ("StockItemId");


--
-- TOC entry 9748 (class 1259 OID 188340)
-- Name: StockItemOpeningBalance_WareHouseId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "StockItemOpeningBalance_WareHouseId" ON "10083_10833"."StockItemOpeningBalance" USING btree ("WareHouseId");


--
-- TOC entry 9728 (class 1259 OID 188509)
-- Name: StockItem_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "StockItem_ActiveStatus" ON "10083_10833"."StockItem" USING btree ("ActiveStatus");


--
-- TOC entry 9729 (class 1259 OID 188335)
-- Name: StockItem_StockCategoryId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "StockItem_StockCategoryId" ON "10083_10833"."StockItem" USING btree ("StockCategoryId");


--
-- TOC entry 9730 (class 1259 OID 188334)
-- Name: StockItem_StockGroupId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "StockItem_StockGroupId" ON "10083_10833"."StockItem" USING btree ("StockGroupId");


--
-- TOC entry 9731 (class 1259 OID 188336)
-- Name: StockItem_UOMId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "StockItem_UOMId" ON "10083_10833"."StockItem" USING btree ("UOMId");


--
-- TOC entry 9797 (class 1259 OID 188343)
-- Name: SupplierAddress_SupplierId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SupplierAddress_SupplierId" ON "10083_10833"."SupplierAddress" USING btree ("SupplierId");


--
-- TOC entry 9788 (class 1259 OID 188511)
-- Name: SupplierGroup_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SupplierGroup_ActiveStatus" ON "10083_10833"."SupplierGroup" USING btree ("ActiveStatus");


--
-- TOC entry 9789 (class 1259 OID 188344)
-- Name: SupplierGroup_ParentGroupId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "SupplierGroup_ParentGroupId" ON "10083_10833"."SupplierGroup" USING btree ("ParentGroupId");


--
-- TOC entry 9792 (class 1259 OID 188510)
-- Name: Supplier_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Supplier_ActiveStatus" ON "10083_10833"."Supplier" USING btree ("ActiveStatus");


--
-- TOC entry 9793 (class 1259 OID 188342)
-- Name: Supplier_CurrencyId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Supplier_CurrencyId" ON "10083_10833"."Supplier" USING btree ("CurrencyId");


--
-- TOC entry 9794 (class 1259 OID 188341)
-- Name: Supplier_SupplierGroupId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Supplier_SupplierGroupId" ON "10083_10833"."Supplier" USING btree ("SupplierGroupId");


--
-- TOC entry 10243 (class 1259 OID 188495)
-- Name: TemplateSettings_TemplateId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "TemplateSettings_TemplateId" ON "10083_10833"."TemplateSettings" USING btree ("TemplateId");


--
-- TOC entry 10240 (class 1259 OID 188512)
-- Name: Template_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Template_ActiveStatus" ON "10083_10833"."Template" USING btree ("ActiveStatus");


--
-- TOC entry 9694 (class 1259 OID 188513)
-- Name: TermAndCondition_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "TermAndCondition_ActiveStatus" ON "10083_10833"."TermAndCondition" USING btree ("ActiveStatus");


--
-- TOC entry 9814 (class 1259 OID 188496)
-- Name: TransportersAddress_TransportersId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "TransportersAddress_TransportersId" ON "10083_10833"."TransportersAddress" USING btree ("TransportersId");


--
-- TOC entry 9817 (class 1259 OID 188497)
-- Name: TransportersVehicles_TransportersId; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "TransportersVehicles_TransportersId" ON "10083_10833"."TransportersVehicles" USING btree ("TransportersId");


--
-- TOC entry 9811 (class 1259 OID 188514)
-- Name: Transporters_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "Transporters_ActiveStatus" ON "10083_10833"."Transporters" USING btree ("ActiveStatus");


--
-- TOC entry 9778 (class 1259 OID 188515)
-- Name: WareHouse_ActiveStatus; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX "WareHouse_ActiveStatus" ON "10083_10833"."WareHouse" USING btree ("ActiveStatus");


--
-- TOC entry 10004 (class 1259 OID 188378)
-- Name: idx_currency_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_currency_id ON "10083_10833"."SalesDebitNote" USING btree ("CurrencyId");


--
-- TOC entry 10005 (class 1259 OID 188376)
-- Name: idx_customer_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_customer_id ON "10083_10833"."SalesDebitNote" USING btree ("CustomerId");


--
-- TOC entry 10084 (class 1259 OID 188456)
-- Name: idx_einvoicedetails_invoice_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_einvoicedetails_invoice_id ON "10083_10833"."EinvoiceDetails" USING btree ("InvoiceId");


--
-- TOC entry 10085 (class 1259 OID 188455)
-- Name: idx_einvoicedetails_invoice_type; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_einvoicedetails_invoice_type ON "10083_10833"."EinvoiceDetails" USING btree ("InvoiceType");


--
-- TOC entry 10258 (class 1259 OID 188368)
-- Name: idx_ewaydetails_invoice_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_ewaydetails_invoice_id ON "10083_10833"."EwayDetails" USING btree ("InvoiceId");


--
-- TOC entry 10259 (class 1259 OID 188454)
-- Name: idx_ewaydetails_invoice_type; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_ewaydetails_invoice_type ON "10083_10833"."EwayDetails" USING btree ("InvoiceType");


--
-- TOC entry 10264 (class 1259 OID 188369)
-- Name: idx_ewaytransportationdetails_invoice_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_ewaytransportationdetails_invoice_id ON "10083_10833"."EwayTransportationDetails" USING btree ("InvoiceId");


--
-- TOC entry 10031 (class 1259 OID 188385)
-- Name: idx_lutmaster_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_lutmaster_id ON "10083_10833"."SalesDebitNoteImportDetails" USING btree ("LUTMasterId");


--
-- TOC entry 10269 (class 1259 OID 189059)
-- Name: idx_sale_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sale_id ON "10083_10833"."SalesHSNSummary" USING btree ("SaleId");


--
-- TOC entry 10032 (class 1259 OID 188384)
-- Name: idx_saledebitnote___id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_saledebitnote___id ON "10083_10833"."SalesDebitNoteImportDetails" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10040 (class 1259 OID 189252)
-- Name: idx_saledebitnote__id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_saledebitnote__id ON "10083_10833"."SalesDebitNoteEwayBillsDetails" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10011 (class 1259 OID 188381)
-- Name: idx_saledebitnote_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_saledebitnote_id ON "10083_10833"."SalesDebitNoteBillTo" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10015 (class 1259 OID 188390)
-- Name: idx_saledebitnote_shipto_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_saledebitnote_shipto_id ON "10083_10833"."SalesDebitNoteShipTo" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10036 (class 1259 OID 188391)
-- Name: idx_saledebitnote_valuedetails_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_saledebitnote_valuedetails_id ON "10083_10833"."SalesDebitNoteValueDetails" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10224 (class 1259 OID 189192)
-- Name: idx_sales_debit_note_container_list_saledebitnoteid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_debit_note_container_list_saledebitnoteid ON "10083_10833"."SalesDebitNoteContainerList" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10273 (class 1259 OID 189237)
-- Name: idx_sales_debit_note_hsn_summary_saledebitnoteid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_debit_note_hsn_summary_saledebitnoteid ON "10083_10833"."SalesDebitNoteHSNSummary" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10026 (class 1259 OID 189205)
-- Name: idx_sales_debit_note_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_debit_note_id ON "10083_10833"."SalesDebitNoteItems" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10053 (class 1259 OID 188397)
-- Name: idx_sales_debit_note_item_warehouse_sdnitems_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_debit_note_item_warehouse_sdnitems_id ON "10083_10833"."SalesDebitNoteItemWareHouse" USING btree ("SDNItemsId");


--
-- TOC entry 10054 (class 1259 OID 188398)
-- Name: idx_sales_debit_note_item_warehouse_warehouse_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_debit_note_item_warehouse_warehouse_id ON "10083_10833"."SalesDebitNoteItemWareHouse" USING btree ("WareHouseId");


--
-- TOC entry 10048 (class 1259 OID 188396)
-- Name: idx_sales_debit_note_other_charges_othercharge_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_debit_note_other_charges_othercharge_id ON "10083_10833"."SalesDebitNoteOtherCharges" USING btree ("OtherChargeId");


--
-- TOC entry 10049 (class 1259 OID 189221)
-- Name: idx_sales_debit_note_other_charges_saledebitnote_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_debit_note_other_charges_saledebitnote_id ON "10083_10833"."SalesDebitNoteOtherCharges" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10019 (class 1259 OID 188388)
-- Name: idx_sales_debit_note_other_details_note_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_debit_note_other_details_note_id ON "10083_10833"."SalesDebitNoteOtherDetails" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10228 (class 1259 OID 189177)
-- Name: idx_sales_debit_note_packing_list_saledebitnoteid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_debit_note_packing_list_saledebitnoteid ON "10083_10833"."SalesDebitNotePackingList" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10022 (class 1259 OID 188389)
-- Name: idx_sales_debit_note_receipt_details_note_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_debit_note_receipt_details_note_id ON "10083_10833"."SalesDebitNoteReceiptDetails" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10006 (class 1259 OID 188379)
-- Name: idx_sales_person_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_person_id ON "10083_10833"."SalesDebitNote" USING btree ("SalesPersonId");


--
-- TOC entry 9988 (class 1259 OID 188406)
-- Name: idx_sales_return_batch_details_salesreturnitemsid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_batch_details_salesreturnitemsid ON "10083_10833"."SalesReturnBatchDetails" USING btree ("SalesReturnItemsId");


--
-- TOC entry 9955 (class 1259 OID 188407)
-- Name: idx_sales_return_bill_to_salereturnid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_bill_to_salereturnid ON "10083_10833"."SalesReturnBillTo" USING btree ("SaleReturnId");


--
-- TOC entry 10232 (class 1259 OID 189103)
-- Name: idx_sales_return_container_list_salesreturnid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_container_list_salesreturnid ON "10083_10833"."SalesReturnContainerList" USING btree ("SaleReturnId");


--
-- TOC entry 9948 (class 1259 OID 188404)
-- Name: idx_sales_return_currencyid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_currencyid ON "10083_10833"."SalesReturn" USING btree ("CurrencyId");


--
-- TOC entry 9949 (class 1259 OID 188402)
-- Name: idx_sales_return_customerid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_customerid ON "10083_10833"."SalesReturn" USING btree ("CustomerId");


--
-- TOC entry 9984 (class 1259 OID 189163)
-- Name: idx_sales_return_eway_bills_details_salereturnid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_eway_bills_details_salereturnid ON "10083_10833"."SalesReturnEwayBillsDetails" USING btree ("SaleReturnId");


--
-- TOC entry 9985 (class 1259 OID 188409)
-- Name: idx_sales_return_eway_bills_details_transportersid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_eway_bills_details_transportersid ON "10083_10833"."SalesReturnEwayBillsDetails" USING btree ("TransportersId");


--
-- TOC entry 10277 (class 1259 OID 189148)
-- Name: idx_sales_return_hsn_summary_salesreturnid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_hsn_summary_salesreturnid ON "10083_10833"."SalesReturnHSNSummary" USING btree ("SaleReturnId");


--
-- TOC entry 9975 (class 1259 OID 188411)
-- Name: idx_sales_return_import_details_lutmasterid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_import_details_lutmasterid ON "10083_10833"."SalesReturnImportDetails" USING btree ("LUTMasterId");


--
-- TOC entry 9976 (class 1259 OID 188410)
-- Name: idx_sales_return_import_details_salereturnid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_import_details_salereturnid ON "10083_10833"."SalesReturnImportDetails" USING btree ("SaleReturnId");


--
-- TOC entry 9997 (class 1259 OID 188420)
-- Name: idx_sales_return_item_warehouse_salesreturnitemsid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_item_warehouse_salesreturnitemsid ON "10083_10833"."SalesReturnItemWareHouse" USING btree ("SalesReturnItemsId");


--
-- TOC entry 9998 (class 1259 OID 188421)
-- Name: idx_sales_return_item_warehouse_warehouseid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_item_warehouse_warehouseid ON "10083_10833"."SalesReturnItemWareHouse" USING btree ("WareHouseId");


--
-- TOC entry 9970 (class 1259 OID 189116)
-- Name: idx_sales_return_items_salereturnid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_items_salereturnid ON "10083_10833"."SalesReturnItems" USING btree ("SaleReturnId");


--
-- TOC entry 9971 (class 1259 OID 188413)
-- Name: idx_sales_return_items_stockitemid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_items_stockitemid ON "10083_10833"."SalesReturnItems" USING btree ("StockItemId");


--
-- TOC entry 9992 (class 1259 OID 188419)
-- Name: idx_sales_return_other_charges_otherchargeid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_other_charges_otherchargeid ON "10083_10833"."SalesReturnOtherCharges" USING btree ("OtherChargeId");


--
-- TOC entry 9993 (class 1259 OID 189132)
-- Name: idx_sales_return_other_charges_salereturnid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_other_charges_salereturnid ON "10083_10833"."SalesReturnOtherCharges" USING btree ("SaleReturnId");


--
-- TOC entry 9963 (class 1259 OID 188414)
-- Name: idx_sales_return_other_details_salereturnid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_other_details_salereturnid ON "10083_10833"."SalesReturnOtherDetails" USING btree ("SaleReturnId");


--
-- TOC entry 10236 (class 1259 OID 189088)
-- Name: idx_sales_return_packing_list_salesreturnid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_packing_list_salesreturnid ON "10083_10833"."SalesReturnPackingList" USING btree ("SaleReturnId");


--
-- TOC entry 9966 (class 1259 OID 188415)
-- Name: idx_sales_return_receipt_details_salereturnid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_receipt_details_salereturnid ON "10083_10833"."SalesReturnReceiptDetails" USING btree ("SaleReturnId");


--
-- TOC entry 9950 (class 1259 OID 188405)
-- Name: idx_sales_return_salespersonid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_salespersonid ON "10083_10833"."SalesReturn" USING btree ("SalesPersonId");


--
-- TOC entry 9959 (class 1259 OID 188416)
-- Name: idx_sales_return_ship_to_salereturnid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_ship_to_salereturnid ON "10083_10833"."SalesReturnShipTo" USING btree ("SaleReturnId");


--
-- TOC entry 9951 (class 1259 OID 188401)
-- Name: idx_sales_return_templateid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_templateid ON "10083_10833"."SalesReturn" USING btree ("TemplateId");


--
-- TOC entry 9952 (class 1259 OID 188403)
-- Name: idx_sales_return_termandconditionid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_termandconditionid ON "10083_10833"."SalesReturn" USING btree ("TermAndConditionId");


--
-- TOC entry 9980 (class 1259 OID 188417)
-- Name: idx_sales_return_value_details_salereturnid; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sales_return_value_details_salereturnid ON "10083_10833"."SalesReturnValueDetails" USING btree ("SaleReturnId");


--
-- TOC entry 10044 (class 1259 OID 188380)
-- Name: idx_sdnitems_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_sdnitems_id ON "10083_10833"."SalesDebitNoteBatchDetails" USING btree ("SDNItemsId");


--
-- TOC entry 10027 (class 1259 OID 188387)
-- Name: idx_stock_item_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_stock_item_id ON "10083_10833"."SalesDebitNoteItems" USING btree ("StockItemId");


--
-- TOC entry 10147 (class 1259 OID 188393)
-- Name: idx_stockitem_balance_stockgroup_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_stockitem_balance_stockgroup_id ON "10083_10833"."StockItemBalance" USING btree ("StockGroupId");


--
-- TOC entry 10148 (class 1259 OID 188392)
-- Name: idx_stockitem_balance_stockitem_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_stockitem_balance_stockitem_id ON "10083_10833"."StockItemBalance" USING btree ("StockItemId");


--
-- TOC entry 10149 (class 1259 OID 188394)
-- Name: idx_stockitem_balance_warehouse_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_stockitem_balance_warehouse_id ON "10083_10833"."StockItemBalance" USING btree ("WareHouseId");


--
-- TOC entry 10007 (class 1259 OID 188375)
-- Name: idx_template_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_template_id ON "10083_10833"."SalesDebitNote" USING btree ("TemplateId");


--
-- TOC entry 10008 (class 1259 OID 188377)
-- Name: idx_term_and_condition_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_term_and_condition_id ON "10083_10833"."SalesDebitNote" USING btree ("TermAndConditionId");


--
-- TOC entry 10041 (class 1259 OID 188383)
-- Name: idx_transporters_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX idx_transporters_id ON "10083_10833"."SalesDebitNoteEwayBillsDetails" USING btree ("TransportersId");


--
-- TOC entry 10323 (class 1259 OID 188690)
-- Name: sales_debit_note_main__bill_to_country_code; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__bill_to_country_code ON "10083_10833"."SalesDebitNoteMain" USING btree ("BillToCountryCode");


--
-- TOC entry 10324 (class 1259 OID 188691)
-- Name: sales_debit_note_main__bill_to_country_name; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__bill_to_country_name ON "10083_10833"."SalesDebitNoteMain" USING btree ("BillToCountryName");


--
-- TOC entry 10325 (class 1259 OID 188695)
-- Name: sales_debit_note_main__bill_to_g_s_t_category; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__bill_to_g_s_t_category ON "10083_10833"."SalesDebitNoteMain" USING btree ("BillToGSTCategory");


--
-- TOC entry 10326 (class 1259 OID 188694)
-- Name: sales_debit_note_main__bill_to_g_s_t_i_n; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__bill_to_g_s_t_i_n ON "10083_10833"."SalesDebitNoteMain" USING btree ("BillToGSTIN");


--
-- TOC entry 10327 (class 1259 OID 188692)
-- Name: sales_debit_note_main__bill_to_p_o_s_code; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__bill_to_p_o_s_code ON "10083_10833"."SalesDebitNoteMain" USING btree ("BillToPOSCode");


--
-- TOC entry 10328 (class 1259 OID 188693)
-- Name: sales_debit_note_main__bill_to_p_o_s_name; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__bill_to_p_o_s_name ON "10083_10833"."SalesDebitNoteMain" USING btree ("BillToPOSName");


--
-- TOC entry 10329 (class 1259 OID 188688)
-- Name: sales_debit_note_main__bill_to_state_code; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__bill_to_state_code ON "10083_10833"."SalesDebitNoteMain" USING btree ("BillToStateCode");


--
-- TOC entry 10330 (class 1259 OID 188689)
-- Name: sales_debit_note_main__bill_to_state_name; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__bill_to_state_name ON "10083_10833"."SalesDebitNoteMain" USING btree ("BillToStateName");


--
-- TOC entry 10331 (class 1259 OID 188687)
-- Name: sales_debit_note_main__currency_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__currency_id ON "10083_10833"."SalesDebitNoteMain" USING btree ("CurrencyId");


--
-- TOC entry 10332 (class 1259 OID 188682)
-- Name: sales_debit_note_main__customer_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__customer_id ON "10083_10833"."SalesDebitNoteMain" USING btree ("CustomerId");


--
-- TOC entry 10333 (class 1259 OID 188684)
-- Name: sales_debit_note_main__date; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__date ON "10083_10833"."SalesDebitNoteMain" USING btree ("Date");


--
-- TOC entry 10334 (class 1259 OID 188683)
-- Name: sales_debit_note_main__number; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__number ON "10083_10833"."SalesDebitNoteMain" USING btree ("Number");


--
-- TOC entry 10335 (class 1259 OID 188680)
-- Name: sales_debit_note_main__sale_debit_note_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__sale_debit_note_id ON "10083_10833"."SalesDebitNoteMain" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10336 (class 1259 OID 188686)
-- Name: sales_debit_note_main__sales_person_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__sales_person_id ON "10083_10833"."SalesDebitNoteMain" USING btree ("SalesPersonId");


--
-- TOC entry 10337 (class 1259 OID 188681)
-- Name: sales_debit_note_main__template_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__template_id ON "10083_10833"."SalesDebitNoteMain" USING btree ("TemplateId");


--
-- TOC entry 10338 (class 1259 OID 188685)
-- Name: sales_debit_note_main__term_and_condition_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_debit_note_main__term_and_condition_id ON "10083_10833"."SalesDebitNoteMain" USING btree ("TermAndConditionId");


--
-- TOC entry 10283 (class 1259 OID 188572)
-- Name: sales_main__bill_to_country_code; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__bill_to_country_code ON "10083_10833"."SalesMain" USING btree ("BillToCountryCode");


--
-- TOC entry 10284 (class 1259 OID 188573)
-- Name: sales_main__bill_to_country_name; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__bill_to_country_name ON "10083_10833"."SalesMain" USING btree ("BillToCountryName");


--
-- TOC entry 10285 (class 1259 OID 188577)
-- Name: sales_main__bill_to_g_s_t_category; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__bill_to_g_s_t_category ON "10083_10833"."SalesMain" USING btree ("BillToGSTCategory");


--
-- TOC entry 10286 (class 1259 OID 188576)
-- Name: sales_main__bill_to_g_s_t_i_n; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__bill_to_g_s_t_i_n ON "10083_10833"."SalesMain" USING btree ("BillToGSTIN");


--
-- TOC entry 10287 (class 1259 OID 188574)
-- Name: sales_main__bill_to_p_o_s_code; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__bill_to_p_o_s_code ON "10083_10833"."SalesMain" USING btree ("BillToPOSCode");


--
-- TOC entry 10288 (class 1259 OID 188575)
-- Name: sales_main__bill_to_p_o_s_name; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__bill_to_p_o_s_name ON "10083_10833"."SalesMain" USING btree ("BillToPOSName");


--
-- TOC entry 10289 (class 1259 OID 188570)
-- Name: sales_main__bill_to_state_code; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__bill_to_state_code ON "10083_10833"."SalesMain" USING btree ("BillToStateCode");


--
-- TOC entry 10290 (class 1259 OID 188571)
-- Name: sales_main__bill_to_state_name; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__bill_to_state_name ON "10083_10833"."SalesMain" USING btree ("BillToStateName");


--
-- TOC entry 10291 (class 1259 OID 188569)
-- Name: sales_main__currency_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__currency_id ON "10083_10833"."SalesMain" USING btree ("CurrencyId");


--
-- TOC entry 10292 (class 1259 OID 188564)
-- Name: sales_main__customer_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__customer_id ON "10083_10833"."SalesMain" USING btree ("CustomerId");


--
-- TOC entry 10293 (class 1259 OID 188566)
-- Name: sales_main__date; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__date ON "10083_10833"."SalesMain" USING btree ("Date");


--
-- TOC entry 10294 (class 1259 OID 188565)
-- Name: sales_main__number; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__number ON "10083_10833"."SalesMain" USING btree ("Number");


--
-- TOC entry 10295 (class 1259 OID 188562)
-- Name: sales_main__sale_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__sale_id ON "10083_10833"."SalesMain" USING btree ("SaleId");


--
-- TOC entry 10296 (class 1259 OID 188568)
-- Name: sales_main__sales_person_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__sales_person_id ON "10083_10833"."SalesMain" USING btree ("SalesPersonId");


--
-- TOC entry 10297 (class 1259 OID 188563)
-- Name: sales_main__template_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__template_id ON "10083_10833"."SalesMain" USING btree ("TemplateId");


--
-- TOC entry 10298 (class 1259 OID 188567)
-- Name: sales_main__term_and_condition_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_main__term_and_condition_id ON "10083_10833"."SalesMain" USING btree ("TermAndConditionId");


--
-- TOC entry 10303 (class 1259 OID 188631)
-- Name: sales_return_main__bill_to_country_code; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__bill_to_country_code ON "10083_10833"."SalesReturnMain" USING btree ("BillToCountryCode");


--
-- TOC entry 10304 (class 1259 OID 188632)
-- Name: sales_return_main__bill_to_country_name; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__bill_to_country_name ON "10083_10833"."SalesReturnMain" USING btree ("BillToCountryName");


--
-- TOC entry 10305 (class 1259 OID 188636)
-- Name: sales_return_main__bill_to_g_s_t_category; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__bill_to_g_s_t_category ON "10083_10833"."SalesReturnMain" USING btree ("BillToGSTCategory");


--
-- TOC entry 10306 (class 1259 OID 188635)
-- Name: sales_return_main__bill_to_g_s_t_i_n; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__bill_to_g_s_t_i_n ON "10083_10833"."SalesReturnMain" USING btree ("BillToGSTIN");


--
-- TOC entry 10307 (class 1259 OID 188633)
-- Name: sales_return_main__bill_to_p_o_s_code; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__bill_to_p_o_s_code ON "10083_10833"."SalesReturnMain" USING btree ("BillToPOSCode");


--
-- TOC entry 10308 (class 1259 OID 188634)
-- Name: sales_return_main__bill_to_p_o_s_name; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__bill_to_p_o_s_name ON "10083_10833"."SalesReturnMain" USING btree ("BillToPOSName");


--
-- TOC entry 10309 (class 1259 OID 188629)
-- Name: sales_return_main__bill_to_state_code; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__bill_to_state_code ON "10083_10833"."SalesReturnMain" USING btree ("BillToStateCode");


--
-- TOC entry 10310 (class 1259 OID 188630)
-- Name: sales_return_main__bill_to_state_name; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__bill_to_state_name ON "10083_10833"."SalesReturnMain" USING btree ("BillToStateName");


--
-- TOC entry 10311 (class 1259 OID 188628)
-- Name: sales_return_main__currency_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__currency_id ON "10083_10833"."SalesReturnMain" USING btree ("CurrencyId");


--
-- TOC entry 10312 (class 1259 OID 188623)
-- Name: sales_return_main__customer_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__customer_id ON "10083_10833"."SalesReturnMain" USING btree ("CustomerId");


--
-- TOC entry 10313 (class 1259 OID 188625)
-- Name: sales_return_main__date; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__date ON "10083_10833"."SalesReturnMain" USING btree ("Date");


--
-- TOC entry 10314 (class 1259 OID 188624)
-- Name: sales_return_main__number; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__number ON "10083_10833"."SalesReturnMain" USING btree ("Number");


--
-- TOC entry 10315 (class 1259 OID 188621)
-- Name: sales_return_main__sale_return_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__sale_return_id ON "10083_10833"."SalesReturnMain" USING btree ("SaleReturnId");


--
-- TOC entry 10316 (class 1259 OID 188627)
-- Name: sales_return_main__sales_person_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__sales_person_id ON "10083_10833"."SalesReturnMain" USING btree ("SalesPersonId");


--
-- TOC entry 10317 (class 1259 OID 188622)
-- Name: sales_return_main__template_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__template_id ON "10083_10833"."SalesReturnMain" USING btree ("TemplateId");


--
-- TOC entry 10318 (class 1259 OID 188626)
-- Name: sales_return_main__term_and_condition_id; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX sales_return_main__term_and_condition_id ON "10083_10833"."SalesReturnMain" USING btree ("TermAndConditionId");


--
-- TOC entry 9878 (class 1259 OID 188467)
-- Name: salesbatchdetails_salesitemsid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesbatchdetails_salesitemsid_idx ON "10083_10833"."SalesBatchDetails" USING btree ("SalesItemsId");


--
-- TOC entry 9840 (class 1259 OID 188458)
-- Name: salesbillto_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesbillto_saleid_idx ON "10083_10833"."SalesBillTo" USING btree ("SaleId");


--
-- TOC entry 10217 (class 1259 OID 189015)
-- Name: salescontainerlist_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salescontainerlist_saleid_idx ON "10083_10833"."SalesContainerList" USING btree ("SaleId");


--
-- TOC entry 10045 (class 1259 OID 188491)
-- Name: salesdebitnotebatchdetails_salesitemsid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesdebitnotebatchdetails_salesitemsid_idx ON "10083_10833"."SalesDebitNoteBatchDetails" USING btree ("SDNItemsId");


--
-- TOC entry 10012 (class 1259 OID 188482)
-- Name: salesdebitnotebillto_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesdebitnotebillto_saleid_idx ON "10083_10833"."SalesDebitNoteBillTo" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10225 (class 1259 OID 189193)
-- Name: salesdebitnotecontainerlist_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesdebitnotecontainerlist_saleid_idx ON "10083_10833"."SalesDebitNoteContainerList" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10274 (class 1259 OID 189238)
-- Name: salesdebitnotehsnsummary_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesdebitnotehsnsummary_saleid_idx ON "10083_10833"."SalesDebitNoteHSNSummary" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10033 (class 1259 OID 188488)
-- Name: salesdebitnoteimportdetails_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesdebitnoteimportdetails_saleid_idx ON "10083_10833"."SalesDebitNoteImportDetails" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10028 (class 1259 OID 189206)
-- Name: salesdebitnoteitems_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesdebitnoteitems_saleid_idx ON "10083_10833"."SalesDebitNoteItems" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10055 (class 1259 OID 188492)
-- Name: salesdebitnoteitemwarehouse_salesitemsid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesdebitnoteitemwarehouse_salesitemsid_idx ON "10083_10833"."SalesDebitNoteItemWareHouse" USING btree ("SDNItemsId");


--
-- TOC entry 10050 (class 1259 OID 189222)
-- Name: salesdebitnoteothercharges_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesdebitnoteothercharges_saleid_idx ON "10083_10833"."SalesDebitNoteOtherCharges" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10229 (class 1259 OID 189178)
-- Name: salesdebitnotepackinglist_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesdebitnotepackinglist_saleid_idx ON "10083_10833"."SalesDebitNotePackingList" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10023 (class 1259 OID 188489)
-- Name: salesdebitnotereceiptdetails_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesdebitnotereceiptdetails_saleid_idx ON "10083_10833"."SalesDebitNoteReceiptDetails" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10016 (class 1259 OID 188481)
-- Name: salesdebitnoteshipto_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesdebitnoteshipto_saleid_idx ON "10083_10833"."SalesDebitNoteShipTo" USING btree ("SaleDebitNoteId");


--
-- TOC entry 10037 (class 1259 OID 188487)
-- Name: salesdebitnotevaluedetails_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesdebitnotevaluedetails_saleid_idx ON "10083_10833"."SalesDebitNoteValueDetails" USING btree ("SaleDebitNoteId");


--
-- TOC entry 9856 (class 1259 OID 188465)
-- Name: salesdispatchdetails_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesdispatchdetails_saleid_idx ON "10083_10833"."SalesDispatchDetails" USING btree ("SaleId");


--
-- TOC entry 9866 (class 1259 OID 188464)
-- Name: salesexportdetails_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesexportdetails_saleid_idx ON "10083_10833"."SalesExportDetails" USING btree ("SaleId");


--
-- TOC entry 10270 (class 1259 OID 189060)
-- Name: saleshsnsummary_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX saleshsnsummary_saleid_idx ON "10083_10833"."SalesHSNSummary" USING btree ("SaleId");


--
-- TOC entry 9861 (class 1259 OID 189028)
-- Name: salesitems_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesitems_saleid_idx ON "10083_10833"."SalesItems" USING btree ("SaleId");


--
-- TOC entry 9883 (class 1259 OID 188468)
-- Name: salesitemwarehouse_salesitemsid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesitemwarehouse_salesitemsid_idx ON "10083_10833"."SalesItemWareHouse" USING btree ("SalesItemsId");


--
-- TOC entry 9852 (class 1259 OID 189044)
-- Name: salesothercharges_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesothercharges_saleid_idx ON "10083_10833"."SalesOtherCharges" USING btree ("SaleId");


--
-- TOC entry 10221 (class 1259 OID 189000)
-- Name: salespackinglist_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salespackinglist_saleid_idx ON "10083_10833"."SalesPackingList" USING btree ("SaleId");


--
-- TOC entry 9989 (class 1259 OID 188479)
-- Name: salesreturnbatchdetails_salesitemsid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesreturnbatchdetails_salesitemsid_idx ON "10083_10833"."SalesReturnBatchDetails" USING btree ("SalesReturnItemsId");


--
-- TOC entry 9956 (class 1259 OID 188470)
-- Name: salesreturnbillto_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesreturnbillto_saleid_idx ON "10083_10833"."SalesReturnBillTo" USING btree ("SaleReturnId");


--
-- TOC entry 10233 (class 1259 OID 189104)
-- Name: salesreturncontainerlist_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesreturncontainerlist_saleid_idx ON "10083_10833"."SalesReturnContainerList" USING btree ("SaleReturnId");


--
-- TOC entry 10278 (class 1259 OID 189149)
-- Name: salesreturnhsnsummary_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesreturnhsnsummary_saleid_idx ON "10083_10833"."SalesReturnHSNSummary" USING btree ("SaleReturnId");


--
-- TOC entry 9977 (class 1259 OID 188476)
-- Name: salesreturnimportdetails_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesreturnimportdetails_saleid_idx ON "10083_10833"."SalesReturnImportDetails" USING btree ("SaleReturnId");


--
-- TOC entry 9972 (class 1259 OID 189117)
-- Name: salesreturnitems_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesreturnitems_saleid_idx ON "10083_10833"."SalesReturnItems" USING btree ("SaleReturnId");


--
-- TOC entry 9999 (class 1259 OID 188480)
-- Name: salesreturnitemwarehouse_salesitemsid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesreturnitemwarehouse_salesitemsid_idx ON "10083_10833"."SalesReturnItemWareHouse" USING btree ("SalesReturnItemsId");


--
-- TOC entry 9994 (class 1259 OID 189133)
-- Name: salesreturnothercharges_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesreturnothercharges_saleid_idx ON "10083_10833"."SalesReturnOtherCharges" USING btree ("SaleReturnId");


--
-- TOC entry 10237 (class 1259 OID 189089)
-- Name: salesreturnpackinglist_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesreturnpackinglist_saleid_idx ON "10083_10833"."SalesReturnPackingList" USING btree ("SaleReturnId");


--
-- TOC entry 9967 (class 1259 OID 188477)
-- Name: salesreturnreceiptdetails_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesreturnreceiptdetails_saleid_idx ON "10083_10833"."SalesReturnReceiptDetails" USING btree ("SaleReturnId");


--
-- TOC entry 9960 (class 1259 OID 188469)
-- Name: salesreturnshipto_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesreturnshipto_saleid_idx ON "10083_10833"."SalesReturnShipTo" USING btree ("SaleReturnId");


--
-- TOC entry 9981 (class 1259 OID 188475)
-- Name: salesreturnvaluedetails_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesreturnvaluedetails_saleid_idx ON "10083_10833"."SalesReturnValueDetails" USING btree ("SaleReturnId");


--
-- TOC entry 9844 (class 1259 OID 188457)
-- Name: salesshipto_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesshipto_saleid_idx ON "10083_10833"."SalesShipTo" USING btree ("SaleId");


--
-- TOC entry 9870 (class 1259 OID 188463)
-- Name: salesvaluedetails_saleid_idx; Type: INDEX; Schema: 10083_10833; Owner: 10083
--

CREATE INDEX salesvaluedetails_saleid_idx ON "10083_10833"."SalesValueDetails" USING btree ("SaleId");


--
-- TOC entry 10344 (class 2606 OID 186226)
-- Name: Customer CUST113; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Customer"
    ADD CONSTRAINT "CUST113" FOREIGN KEY ("CustomerGroupId") REFERENCES "10083_10833"."CustomerGroup"("CustomerGroupId");


--
-- TOC entry 10345 (class 2606 OID 186231)
-- Name: Customer CUST114; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Customer"
    ADD CONSTRAINT "CUST114" FOREIGN KEY ("CurrencyId") REFERENCES "10083_10833"."Currency"("CurrencyId");


--
-- TOC entry 10343 (class 2606 OID 186221)
-- Name: CustomerGroup CUSTG101; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerGroup"
    ADD CONSTRAINT "CUSTG101" FOREIGN KEY ("ParentGroupId") REFERENCES "10083_10833"."CustomerGroup"("CustomerGroupId");


--
-- TOC entry 10557 (class 2606 OID 187852)
-- Name: EwayTransportationDetails ETRNSDET101; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."EwayTransportationDetails"
    ADD CONSTRAINT "ETRNSDET101" FOREIGN KEY ("TransportersId") REFERENCES "10083_10833"."Transporters"("TransportersId");


--
-- TOC entry 10389 (class 2606 OID 186456)
-- Name: Purchase PUR101; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Purchase"
    ADD CONSTRAINT "PUR101" FOREIGN KEY ("CurrencyId") REFERENCES "10083_10833"."Currency"("CurrencyId");


--
-- TOC entry 10390 (class 2606 OID 186451)
-- Name: Purchase PUR102; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Purchase"
    ADD CONSTRAINT "PUR102" FOREIGN KEY ("SupplierId") REFERENCES "10083_10833"."Supplier"("SupplierId");


--
-- TOC entry 10391 (class 2606 OID 187550)
-- Name: Purchase PUR103; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Purchase"
    ADD CONSTRAINT "PUR103" FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10392 (class 2606 OID 186441)
-- Name: Purchase PUR104; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Purchase"
    ADD CONSTRAINT "PUR104" FOREIGN KEY ("TermAndConditionId") REFERENCES "10083_10833"."TermAndCondition"("TermAndConditionId");


--
-- TOC entry 10393 (class 2606 OID 186461)
-- Name: Purchase PUR105; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Purchase"
    ADD CONSTRAINT "PUR105" FOREIGN KEY ("SalesPersonId") REFERENCES "10083_10833"."SalesPerson"("SalesPersonId");


--
-- TOC entry 10404 (class 2606 OID 186516)
-- Name: PurchaseOtherCharges PUR106; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOtherCharges"
    ADD CONSTRAINT "PUR106" FOREIGN KEY ("OtherChargeId") REFERENCES "10083_10833"."OtherCharges"("OtherChargeId");


--
-- TOC entry 10398 (class 2606 OID 186491)
-- Name: PurchaseItems PUR107; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseItems"
    ADD CONSTRAINT "PUR107" FOREIGN KEY ("StockItemId") REFERENCES "10083_10833"."StockItem"("StockItemId");


--
-- TOC entry 10406 (class 2606 OID 186531)
-- Name: PurchaseItemWareHouse PUR108; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseItemWareHouse"
    ADD CONSTRAINT "PUR108" FOREIGN KEY ("WareHouseId") REFERENCES "10083_10833"."WareHouse"("WareHouseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10522 (class 2606 OID 187105)
-- Name: PurchaseCreditNote PURCDN101; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNote"
    ADD CONSTRAINT "PURCDN101" FOREIGN KEY ("CurrencyId") REFERENCES "10083_10833"."Currency"("CurrencyId");


--
-- TOC entry 10523 (class 2606 OID 187100)
-- Name: PurchaseCreditNote PURCDN102; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNote"
    ADD CONSTRAINT "PURCDN102" FOREIGN KEY ("SupplierId") REFERENCES "10083_10833"."Supplier"("SupplierId");


--
-- TOC entry 10524 (class 2606 OID 187555)
-- Name: PurchaseCreditNote PURCDN103; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNote"
    ADD CONSTRAINT "PURCDN103" FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10525 (class 2606 OID 187090)
-- Name: PurchaseCreditNote PURCDN104; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNote"
    ADD CONSTRAINT "PURCDN104" FOREIGN KEY ("TermAndConditionId") REFERENCES "10083_10833"."TermAndCondition"("TermAndConditionId");


--
-- TOC entry 10526 (class 2606 OID 187110)
-- Name: PurchaseCreditNote PURCDN105; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNote"
    ADD CONSTRAINT "PURCDN105" FOREIGN KEY ("SalesPersonId") REFERENCES "10083_10833"."SalesPerson"("SalesPersonId");


--
-- TOC entry 10532 (class 2606 OID 187150)
-- Name: PurchaseCreditNoteOtherCharges PURCDN106; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteOtherCharges"
    ADD CONSTRAINT "PURCDN106" FOREIGN KEY ("OtherChargeId") REFERENCES "10083_10833"."OtherCharges"("OtherChargeId");


--
-- TOC entry 10519 (class 2606 OID 187080)
-- Name: PurchaseCreditNoteItems PURCDN107; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteItems"
    ADD CONSTRAINT "PURCDN107" FOREIGN KEY ("StockItemId") REFERENCES "10083_10833"."StockItem"("StockItemId");


--
-- TOC entry 10535 (class 2606 OID 187155)
-- Name: PCNItemWareHouse PURCDN108; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PCNItemWareHouse"
    ADD CONSTRAINT "PURCDN108" FOREIGN KEY ("WareHouseId") REFERENCES "10083_10833"."WareHouse"("WareHouseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10476 (class 2606 OID 186871)
-- Name: PurchaseReturn PURRET101; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturn"
    ADD CONSTRAINT "PURRET101" FOREIGN KEY ("CurrencyId") REFERENCES "10083_10833"."Currency"("CurrencyId");


--
-- TOC entry 10477 (class 2606 OID 186866)
-- Name: PurchaseReturn PURRET102; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturn"
    ADD CONSTRAINT "PURRET102" FOREIGN KEY ("SupplierId") REFERENCES "10083_10833"."Supplier"("SupplierId");


--
-- TOC entry 10478 (class 2606 OID 187565)
-- Name: PurchaseReturn PURRET103; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturn"
    ADD CONSTRAINT "PURRET103" FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10479 (class 2606 OID 186856)
-- Name: PurchaseReturn PURRET104; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturn"
    ADD CONSTRAINT "PURRET104" FOREIGN KEY ("TermAndConditionId") REFERENCES "10083_10833"."TermAndCondition"("TermAndConditionId");


--
-- TOC entry 10480 (class 2606 OID 186876)
-- Name: PurchaseReturn PURRET105; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturn"
    ADD CONSTRAINT "PURRET105" FOREIGN KEY ("SalesPersonId") REFERENCES "10083_10833"."SalesPerson"("SalesPersonId");


--
-- TOC entry 10486 (class 2606 OID 186921)
-- Name: PurchaseReturnOtherCharges PURRET106; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnOtherCharges"
    ADD CONSTRAINT "PURRET106" FOREIGN KEY ("OtherChargeId") REFERENCES "10083_10833"."OtherCharges"("OtherChargeId");


--
-- TOC entry 10473 (class 2606 OID 186846)
-- Name: PurchaseReturnItems PURRET107; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnItems"
    ADD CONSTRAINT "PURRET107" FOREIGN KEY ("StockItemId") REFERENCES "10083_10833"."StockItem"("StockItemId");


--
-- TOC entry 10489 (class 2606 OID 186926)
-- Name: PurchaseReturnItemWareHouse PURRET108; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnItemWareHouse"
    ADD CONSTRAINT "PURRET108" FOREIGN KEY ("WareHouseId") REFERENCES "10083_10833"."WareHouse"("WareHouseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10451 (class 2606 OID 186776)
-- Name: SalesDebitNote SALEDBN101; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNote"
    ADD CONSTRAINT "SALEDBN101" FOREIGN KEY ("CustomerId") REFERENCES "10083_10833"."Customer"("CustomerId");


--
-- TOC entry 10452 (class 2606 OID 187585)
-- Name: SalesDebitNote SALEDBN102; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNote"
    ADD CONSTRAINT "SALEDBN102" FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10453 (class 2606 OID 186781)
-- Name: SalesDebitNote SALEDBN106; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNote"
    ADD CONSTRAINT "SALEDBN106" FOREIGN KEY ("TermAndConditionId") REFERENCES "10083_10833"."TermAndCondition"("TermAndConditionId");


--
-- TOC entry 10454 (class 2606 OID 186786)
-- Name: SalesDebitNote SALEDBN107; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNote"
    ADD CONSTRAINT "SALEDBN107" FOREIGN KEY ("CurrencyId") REFERENCES "10083_10833"."Currency"("CurrencyId");


--
-- TOC entry 10455 (class 2606 OID 186791)
-- Name: SalesDebitNote SALEDBN108; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNote"
    ADD CONSTRAINT "SALEDBN108" FOREIGN KEY ("SalesPersonId") REFERENCES "10083_10833"."SalesPerson"("SalesPersonId");


--
-- TOC entry 10460 (class 2606 OID 186766)
-- Name: SalesDebitNoteItems SALEDBN109; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteItems"
    ADD CONSTRAINT "SALEDBN109" FOREIGN KEY ("StockItemId") REFERENCES "10083_10833"."StockItem"("StockItemId");


--
-- TOC entry 10462 (class 2606 OID 187370)
-- Name: SalesDebitNoteImportDetails SALEDBN110; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteImportDetails"
    ADD CONSTRAINT "SALEDBN110" FOREIGN KEY ("LUTMasterId") REFERENCES "10083_10833"."LUTMaster"("LUTMasterId");


--
-- TOC entry 10465 (class 2606 OID 187385)
-- Name: SalesDebitNoteEwayBillsDetails SALEDBN111; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteEwayBillsDetails"
    ADD CONSTRAINT "SALEDBN111" FOREIGN KEY ("TransportersId") REFERENCES "10083_10833"."Transporters"("TransportersId");


--
-- TOC entry 10468 (class 2606 OID 186821)
-- Name: SalesDebitNoteOtherCharges SALEDBN112; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteOtherCharges"
    ADD CONSTRAINT "SALEDBN112" FOREIGN KEY ("OtherChargeId") REFERENCES "10083_10833"."OtherCharges"("OtherChargeId");


--
-- TOC entry 10470 (class 2606 OID 186826)
-- Name: SalesDebitNoteItemWareHouse SALEDBN113; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteItemWareHouse"
    ADD CONSTRAINT "SALEDBN113" FOREIGN KEY ("WareHouseId") REFERENCES "10083_10833"."WareHouse"("WareHouseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10430 (class 2606 OID 186681)
-- Name: SalesReturn SALERET101; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturn"
    ADD CONSTRAINT "SALERET101" FOREIGN KEY ("CustomerId") REFERENCES "10083_10833"."Customer"("CustomerId");


--
-- TOC entry 10431 (class 2606 OID 187600)
-- Name: SalesReturn SALERET102; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturn"
    ADD CONSTRAINT "SALERET102" FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10432 (class 2606 OID 186686)
-- Name: SalesReturn SALERET106; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturn"
    ADD CONSTRAINT "SALERET106" FOREIGN KEY ("TermAndConditionId") REFERENCES "10083_10833"."TermAndCondition"("TermAndConditionId");


--
-- TOC entry 10433 (class 2606 OID 186691)
-- Name: SalesReturn SALERET107; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturn"
    ADD CONSTRAINT "SALERET107" FOREIGN KEY ("CurrencyId") REFERENCES "10083_10833"."Currency"("CurrencyId");


--
-- TOC entry 10434 (class 2606 OID 186696)
-- Name: SalesReturn SALERET108; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturn"
    ADD CONSTRAINT "SALERET108" FOREIGN KEY ("SalesPersonId") REFERENCES "10083_10833"."SalesPerson"("SalesPersonId");


--
-- TOC entry 10439 (class 2606 OID 186671)
-- Name: SalesReturnItems SALERET109; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnItems"
    ADD CONSTRAINT "SALERET109" FOREIGN KEY ("StockItemId") REFERENCES "10083_10833"."StockItem"("StockItemId");


--
-- TOC entry 10441 (class 2606 OID 187365)
-- Name: SalesReturnImportDetails SALERET110; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnImportDetails"
    ADD CONSTRAINT "SALERET110" FOREIGN KEY ("LUTMasterId") REFERENCES "10083_10833"."LUTMaster"("LUTMasterId");


--
-- TOC entry 10444 (class 2606 OID 187380)
-- Name: SalesReturnEwayBillsDetails SALERET111; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnEwayBillsDetails"
    ADD CONSTRAINT "SALERET111" FOREIGN KEY ("TransportersId") REFERENCES "10083_10833"."Transporters"("TransportersId");


--
-- TOC entry 10447 (class 2606 OID 186726)
-- Name: SalesReturnOtherCharges SALERET112; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnOtherCharges"
    ADD CONSTRAINT "SALERET112" FOREIGN KEY ("OtherChargeId") REFERENCES "10083_10833"."OtherCharges"("OtherChargeId");


--
-- TOC entry 10449 (class 2606 OID 186731)
-- Name: SalesReturnItemWareHouse SALERET113; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnItemWareHouse"
    ADD CONSTRAINT "SALERET113" FOREIGN KEY ("WareHouseId") REFERENCES "10083_10833"."WareHouse"("WareHouseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10368 (class 2606 OID 186391)
-- Name: Sales SALES101; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Sales"
    ADD CONSTRAINT "SALES101" FOREIGN KEY ("CustomerId") REFERENCES "10083_10833"."Customer"("CustomerId");


--
-- TOC entry 10369 (class 2606 OID 187580)
-- Name: Sales SALES102; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Sales"
    ADD CONSTRAINT "SALES102" FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10370 (class 2606 OID 186396)
-- Name: Sales SALES106; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Sales"
    ADD CONSTRAINT "SALES106" FOREIGN KEY ("TermAndConditionId") REFERENCES "10083_10833"."TermAndCondition"("TermAndConditionId");


--
-- TOC entry 10371 (class 2606 OID 186401)
-- Name: Sales SALES107; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Sales"
    ADD CONSTRAINT "SALES107" FOREIGN KEY ("CurrencyId") REFERENCES "10083_10833"."Currency"("CurrencyId");


--
-- TOC entry 10372 (class 2606 OID 186406)
-- Name: Sales SALES108; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Sales"
    ADD CONSTRAINT "SALES108" FOREIGN KEY ("SalesPersonId") REFERENCES "10083_10833"."SalesPerson"("SalesPersonId");


--
-- TOC entry 10379 (class 2606 OID 186381)
-- Name: SalesItems SALES109; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesItems"
    ADD CONSTRAINT "SALES109" FOREIGN KEY ("StockItemId") REFERENCES "10083_10833"."StockItem"("StockItemId");


--
-- TOC entry 10381 (class 2606 OID 187360)
-- Name: SalesExportDetails SALES110; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesExportDetails"
    ADD CONSTRAINT "SALES110" FOREIGN KEY ("LUTMasterId") REFERENCES "10083_10833"."LUTMaster"("LUTMasterId");


--
-- TOC entry 10384 (class 2606 OID 187375)
-- Name: SalesEwayBillsDetails SALES111; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesEwayBillsDetails"
    ADD CONSTRAINT "SALES111" FOREIGN KEY ("TransportersId") REFERENCES "10083_10833"."Transporters"("TransportersId");


--
-- TOC entry 10376 (class 2606 OID 186356)
-- Name: SalesOtherCharges SALES112; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOtherCharges"
    ADD CONSTRAINT "SALES112" FOREIGN KEY ("OtherChargeId") REFERENCES "10083_10833"."OtherCharges"("OtherChargeId");


--
-- TOC entry 10387 (class 2606 OID 186436)
-- Name: SalesItemWareHouse SALES113; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesItemWareHouse"
    ADD CONSTRAINT "SALES113" FOREIGN KEY ("WareHouseId") REFERENCES "10083_10833"."WareHouse"("WareHouseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10356 (class 2606 OID 186291)
-- Name: StockCategory STKCTG102; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockCategory"
    ADD CONSTRAINT "STKCTG102" FOREIGN KEY ("ParentId") REFERENCES "10083_10833"."StockCategory"("StockCategoryId");


--
-- TOC entry 10352 (class 2606 OID 187719)
-- Name: StockGroup STKG108; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockGroup"
    ADD CONSTRAINT "STKG108" FOREIGN KEY ("ParentGroupId") REFERENCES "10083_10833"."StockGroup"("StockGroupId");


--
-- TOC entry 10349 (class 2606 OID 187729)
-- Name: StockItem STKIT108; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItem"
    ADD CONSTRAINT "STKIT108" FOREIGN KEY ("StockGroupId") REFERENCES "10083_10833"."StockGroup"("StockGroupId");


--
-- TOC entry 10350 (class 2606 OID 187734)
-- Name: StockItem STKIT109; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItem"
    ADD CONSTRAINT "STKIT109" FOREIGN KEY ("UOMId") REFERENCES "10083_10833"."SimpleUnit"("SimpleUnitId");


--
-- TOC entry 10351 (class 2606 OID 187724)
-- Name: StockItem STKIT111; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItem"
    ADD CONSTRAINT "STKIT111" FOREIGN KEY ("StockCategoryId") REFERENCES "10083_10833"."StockCategory"("StockCategoryId");


--
-- TOC entry 10354 (class 2606 OID 186286)
-- Name: StockItemOpeningBalance STKIT131; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemOpeningBalance"
    ADD CONSTRAINT "STKIT131" FOREIGN KEY ("WareHouseId") REFERENCES "10083_10833"."WareHouse"("WareHouseId");


--
-- TOC entry 10360 (class 2606 OID 186321)
-- Name: Supplier SUP101; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Supplier"
    ADD CONSTRAINT "SUP101" FOREIGN KEY ("CurrencyId") REFERENCES "10083_10833"."Currency"("CurrencyId");


--
-- TOC entry 10361 (class 2606 OID 186316)
-- Name: Supplier SUP102; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Supplier"
    ADD CONSTRAINT "SUP102" FOREIGN KEY ("SupplierGroupId") REFERENCES "10083_10833"."SupplierGroup"("SupplierGroupId");


--
-- TOC entry 10359 (class 2606 OID 186326)
-- Name: SupplierGroup SUPG102; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SupplierGroup"
    ADD CONSTRAINT "SUPG102" FOREIGN KEY ("ParentGroupId") REFERENCES "10083_10833"."SupplierGroup"("SupplierGroupId");


--
-- TOC entry 10573 (class 2606 OID 188670)
-- Name: SalesDebitNoteMain SalesDebitNoteMain_CurrencyId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteMain"
    ADD CONSTRAINT "SalesDebitNoteMain_CurrencyId_fkey" FOREIGN KEY ("CurrencyId") REFERENCES "10083_10833"."Currency"("CurrencyId");


--
-- TOC entry 10574 (class 2606 OID 188655)
-- Name: SalesDebitNoteMain SalesDebitNoteMain_CustomerId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteMain"
    ADD CONSTRAINT "SalesDebitNoteMain_CustomerId_fkey" FOREIGN KEY ("CustomerId") REFERENCES "10083_10833"."Customer"("CustomerId");


--
-- TOC entry 10575 (class 2606 OID 188675)
-- Name: SalesDebitNoteMain SalesDebitNoteMain_LUTMasterId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteMain"
    ADD CONSTRAINT "SalesDebitNoteMain_LUTMasterId_fkey" FOREIGN KEY ("LUTMasterId") REFERENCES "10083_10833"."LUTMaster"("LUTMasterId");


--
-- TOC entry 10576 (class 2606 OID 188665)
-- Name: SalesDebitNoteMain SalesDebitNoteMain_SalesPersonId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteMain"
    ADD CONSTRAINT "SalesDebitNoteMain_SalesPersonId_fkey" FOREIGN KEY ("SalesPersonId") REFERENCES "10083_10833"."SalesPerson"("SalesPersonId");


--
-- TOC entry 10577 (class 2606 OID 188650)
-- Name: SalesDebitNoteMain SalesDebitNoteMain_TemplateId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteMain"
    ADD CONSTRAINT "SalesDebitNoteMain_TemplateId_fkey" FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10578 (class 2606 OID 188660)
-- Name: SalesDebitNoteMain SalesDebitNoteMain_TermAndConditionId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteMain"
    ADD CONSTRAINT "SalesDebitNoteMain_TermAndConditionId_fkey" FOREIGN KEY ("TermAndConditionId") REFERENCES "10083_10833"."TermAndCondition"("TermAndConditionId");


--
-- TOC entry 10561 (class 2606 OID 188552)
-- Name: SalesMain SalesMain_CurrencyId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesMain"
    ADD CONSTRAINT "SalesMain_CurrencyId_fkey" FOREIGN KEY ("CurrencyId") REFERENCES "10083_10833"."Currency"("CurrencyId");


--
-- TOC entry 10562 (class 2606 OID 188537)
-- Name: SalesMain SalesMain_CustomerId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesMain"
    ADD CONSTRAINT "SalesMain_CustomerId_fkey" FOREIGN KEY ("CustomerId") REFERENCES "10083_10833"."Customer"("CustomerId");


--
-- TOC entry 10563 (class 2606 OID 188557)
-- Name: SalesMain SalesMain_LUTMasterId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesMain"
    ADD CONSTRAINT "SalesMain_LUTMasterId_fkey" FOREIGN KEY ("LUTMasterId") REFERENCES "10083_10833"."LUTMaster"("LUTMasterId");


--
-- TOC entry 10564 (class 2606 OID 188547)
-- Name: SalesMain SalesMain_SalesPersonId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesMain"
    ADD CONSTRAINT "SalesMain_SalesPersonId_fkey" FOREIGN KEY ("SalesPersonId") REFERENCES "10083_10833"."SalesPerson"("SalesPersonId");


--
-- TOC entry 10565 (class 2606 OID 188532)
-- Name: SalesMain SalesMain_TemplateId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesMain"
    ADD CONSTRAINT "SalesMain_TemplateId_fkey" FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10566 (class 2606 OID 188542)
-- Name: SalesMain SalesMain_TermAndConditionId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesMain"
    ADD CONSTRAINT "SalesMain_TermAndConditionId_fkey" FOREIGN KEY ("TermAndConditionId") REFERENCES "10083_10833"."TermAndCondition"("TermAndConditionId");


--
-- TOC entry 10567 (class 2606 OID 188611)
-- Name: SalesReturnMain SalesReturnMain_CurrencyId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnMain"
    ADD CONSTRAINT "SalesReturnMain_CurrencyId_fkey" FOREIGN KEY ("CurrencyId") REFERENCES "10083_10833"."Currency"("CurrencyId");


--
-- TOC entry 10568 (class 2606 OID 188596)
-- Name: SalesReturnMain SalesReturnMain_CustomerId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnMain"
    ADD CONSTRAINT "SalesReturnMain_CustomerId_fkey" FOREIGN KEY ("CustomerId") REFERENCES "10083_10833"."Customer"("CustomerId");


--
-- TOC entry 10569 (class 2606 OID 188616)
-- Name: SalesReturnMain SalesReturnMain_LUTMasterId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnMain"
    ADD CONSTRAINT "SalesReturnMain_LUTMasterId_fkey" FOREIGN KEY ("LUTMasterId") REFERENCES "10083_10833"."LUTMaster"("LUTMasterId");


--
-- TOC entry 10570 (class 2606 OID 188606)
-- Name: SalesReturnMain SalesReturnMain_SalesPersonId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnMain"
    ADD CONSTRAINT "SalesReturnMain_SalesPersonId_fkey" FOREIGN KEY ("SalesPersonId") REFERENCES "10083_10833"."SalesPerson"("SalesPersonId");


--
-- TOC entry 10571 (class 2606 OID 188591)
-- Name: SalesReturnMain SalesReturnMain_TemplateId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnMain"
    ADD CONSTRAINT "SalesReturnMain_TemplateId_fkey" FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10572 (class 2606 OID 188601)
-- Name: SalesReturnMain SalesReturnMain_TermAndConditionId_fkey; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnMain"
    ADD CONSTRAINT "SalesReturnMain_TermAndConditionId_fkey" FOREIGN KEY ("TermAndConditionId") REFERENCES "10083_10833"."TermAndCondition"("TermAndConditionId");


--
-- TOC entry 10538 (class 2606 OID 187206)
-- Name: AuditLogs fk_AuditLogs_AuditDocuments; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."AuditLogs"
    ADD CONSTRAINT "fk_AuditLogs_AuditDocuments" FOREIGN KEY ("DocumentId") REFERENCES "10083_10833"."AuditDocuments"("AuditDocumentId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10407 (class 2606 OID 186526)
-- Name: PurchaseItemWareHouse fk_Purchases_items_Purchase_Item_WareHouse; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseItemWareHouse"
    ADD CONSTRAINT "fk_Purchases_items_Purchase_Item_WareHouse" FOREIGN KEY ("PurchaseItemsId") REFERENCES "10083_10833"."PurchaseItems"("PurchaseItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10515 (class 2606 OID 187058)
-- Name: StockItemBalance fk_StockItemBalance_StockGroup; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemBalance"
    ADD CONSTRAINT "fk_StockItemBalance_StockGroup" FOREIGN KEY ("StockGroupId") REFERENCES "10083_10833"."StockGroup"("StockGroupId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10516 (class 2606 OID 187053)
-- Name: StockItemBalance fk_StockItemBalance_StockItem; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemBalance"
    ADD CONSTRAINT "fk_StockItemBalance_StockItem" FOREIGN KEY ("StockItemId") REFERENCES "10083_10833"."StockItem"("StockItemId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10517 (class 2606 OID 187063)
-- Name: StockItemBalance fk_StockItemBalance_WareHouse; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemBalance"
    ADD CONSTRAINT "fk_StockItemBalance_WareHouse" FOREIGN KEY ("WareHouseId") REFERENCES "10083_10833"."WareHouse"("WareHouseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10362 (class 2606 OID 186881)
-- Name: SupplierAddress fk_SupplierAddress_supplier; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SupplierAddress"
    ADD CONSTRAINT "fk_SupplierAddress_supplier" FOREIGN KEY ("SupplierId") REFERENCES "10083_10833"."Supplier"("SupplierId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10342 (class 2606 OID 186216)
-- Name: BankAddress fk_bankaddress_bank; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."BankAddress"
    ADD CONSTRAINT fk_bankaddress_bank FOREIGN KEY ("BankId") REFERENCES "10083_10833"."Bank"("BankId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10341 (class 2606 OID 184684)
-- Name: CompanyContactDetails fk_company_companycontactdetails; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CompanyContactDetails"
    ADD CONSTRAINT fk_company_companycontactdetails FOREIGN KEY ("CompanyId") REFERENCES "10083_10833"."Company"("CompanyId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10537 (class 2606 OID 187183)
-- Name: CustomerTurnOver fk_customer_customerTurnOver; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerTurnOver"
    ADD CONSTRAINT "fk_customer_customerTurnOver" FOREIGN KEY ("CustomerId") REFERENCES "10083_10833"."Customer"("CustomerId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10346 (class 2606 OID 186236)
-- Name: CustomerBillingAddress fk_customer_customerbillingaddress; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerBillingAddress"
    ADD CONSTRAINT fk_customer_customerbillingaddress FOREIGN KEY ("CustomerId") REFERENCES "10083_10833"."Customer"("CustomerId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10348 (class 2606 OID 186246)
-- Name: CustomerContactPerson fk_customer_customercontactperson; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerContactPerson"
    ADD CONSTRAINT fk_customer_customercontactperson FOREIGN KEY ("CustomerId") REFERENCES "10083_10833"."Customer"("CustomerId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10347 (class 2606 OID 186241)
-- Name: CustomerShippingAddress fk_customer_customershippingaddress; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."CustomerShippingAddress"
    ADD CONSTRAINT fk_customer_customershippingaddress FOREIGN KEY ("CustomerId") REFERENCES "10083_10833"."Customer"("CustomerId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10513 (class 2606 OID 187048)
-- Name: DeliveryNoteBatchDetails fk_deliveryNote_deliveryNoteBatchDetails; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteBatchDetails"
    ADD CONSTRAINT "fk_deliveryNote_deliveryNoteBatchDetails" FOREIGN KEY ("DeliveryNoteItemsId") REFERENCES "10083_10833"."DeliveryNoteItems"("DeliveryNoteItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10512 (class 2606 OID 187043)
-- Name: DeliveryNoteValueDetails fk_deliveryNote_deliveryNoteValueDetails; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteValueDetails"
    ADD CONSTRAINT "fk_deliveryNote_deliveryNoteValueDetails" FOREIGN KEY ("DeliveryNoteId") REFERENCES "10083_10833"."DeliveryNote"("DeliveryNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10509 (class 2606 OID 187023)
-- Name: DeliveryNoteItems fk_deliveryNote_stockItems; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteItems"
    ADD CONSTRAINT "fk_deliveryNote_stockItems" FOREIGN KEY ("StockItemId") REFERENCES "10083_10833"."StockItem"("StockItemId");


--
-- TOC entry 10503 (class 2606 OID 187595)
-- Name: DeliveryNote fk_deliveryNote_template; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNote"
    ADD CONSTRAINT "fk_deliveryNote_template" FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10505 (class 2606 OID 187008)
-- Name: DeliveryNoteBillTo fk_delivery_Note_Bill_To; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteBillTo"
    ADD CONSTRAINT "fk_delivery_Note_Bill_To" FOREIGN KEY ("DeliveryNoteId") REFERENCES "10083_10833"."DeliveryNote"("DeliveryNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10507 (class 2606 OID 186998)
-- Name: DeliveryNoteDetails fk_delivery_Note_Details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteDetails"
    ADD CONSTRAINT "fk_delivery_Note_Details" FOREIGN KEY ("DeliveryNoteId") REFERENCES "10083_10833"."DeliveryNote"("DeliveryNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10508 (class 2606 OID 187013)
-- Name: DeliveryNoteDispatchFrom fk_delivery_Note_Dispatch_From; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteDispatchFrom"
    ADD CONSTRAINT "fk_delivery_Note_Dispatch_From" FOREIGN KEY ("DeliveryNoteId") REFERENCES "10083_10833"."DeliveryNote"("DeliveryNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10510 (class 2606 OID 187018)
-- Name: DeliveryNoteItems fk_delivery_Note_Items; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteItems"
    ADD CONSTRAINT "fk_delivery_Note_Items" FOREIGN KEY ("DeliveryNoteId") REFERENCES "10083_10833"."DeliveryNote"("DeliveryNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10506 (class 2606 OID 187003)
-- Name: DeliveryNoteShipTo fk_delivery_Note_Ship_To; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteShipTo"
    ADD CONSTRAINT "fk_delivery_Note_Ship_To" FOREIGN KEY ("DeliveryNoteId") REFERENCES "10083_10833"."DeliveryNote"("DeliveryNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10504 (class 2606 OID 187033)
-- Name: DeliveryNote fk_delivery_note_customer; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNote"
    ADD CONSTRAINT fk_delivery_note_customer FOREIGN KEY ("CustomerId") REFERENCES "10083_10833"."Customer"("CustomerId");


--
-- TOC entry 10511 (class 2606 OID 187038)
-- Name: DeliveryNoteExportDetails fk_delivery_note_deliveryNoteExportDetails; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DeliveryNoteExportDetails"
    ADD CONSTRAINT "fk_delivery_note_deliveryNoteExportDetails" FOREIGN KEY ("DeliveryNoteId") REFERENCES "10083_10833"."DeliveryNote"("DeliveryNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10364 (class 2606 OID 186311)
-- Name: DocumentSettings fk_document_settings_document; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DocumentSettings"
    ADD CONSTRAINT fk_document_settings_document FOREIGN KEY ("DocumentId") REFERENCES "10083_10833"."Document"("DocumentId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10545 (class 2606 OID 187296)
-- Name: QuotationOtherCharges fk_other_charges_quotation_other_charges; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."QuotationOtherCharges"
    ADD CONSTRAINT fk_other_charges_quotation_other_charges FOREIGN KEY ("OtherChargeId") REFERENCES "10083_10833"."OtherCharges"("OtherChargeId");


--
-- TOC entry 10491 (class 2606 OID 187641)
-- Name: PrintTemplate fk_print_template_template; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PrintTemplate"
    ADD CONSTRAINT fk_print_template_template FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10484 (class 2606 OID 186901)
-- Name: PurchaseReturnBatchDetails fk_purchase_batch_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnBatchDetails"
    ADD CONSTRAINT fk_purchase_batch_details FOREIGN KEY ("PRItemId") REFERENCES "10083_10833"."PurchaseReturnItems"("PurchaseReturnItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10530 (class 2606 OID 187130)
-- Name: PCNBatchDetails fk_purchase_credit_note_batch_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PCNBatchDetails"
    ADD CONSTRAINT fk_purchase_credit_note_batch_details FOREIGN KEY ("PCNItemId") REFERENCES "10083_10833"."PurchaseCreditNoteItems"("PurchaseCreditNoteItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10528 (class 2606 OID 187120)
-- Name: PurchaseCreditNoteBillFrom fk_purchase_credit_note_bill_from; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteBillFrom"
    ADD CONSTRAINT fk_purchase_credit_note_bill_from FOREIGN KEY ("PurchaseCreditNoteId") REFERENCES "10083_10833"."PurchaseCreditNote"("PurchaseCreditNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10518 (class 2606 OID 187075)
-- Name: PurchaseCreditNoteDispatchFrom fk_purchase_credit_note_dispatch; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteDispatchFrom"
    ADD CONSTRAINT fk_purchase_credit_note_dispatch FOREIGN KEY ("PurchaseCreditNoteId") REFERENCES "10083_10833"."PurchaseCreditNote"("PurchaseCreditNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10534 (class 2606 OID 187140)
-- Name: PurchaseCreditNoteEwayBillsDetails fk_purchase_credit_note_eway_bills_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteEwayBillsDetails"
    ADD CONSTRAINT fk_purchase_credit_note_eway_bills_details FOREIGN KEY ("PurchaseCreditNoteId") REFERENCES "10083_10833"."PurchaseCreditNote"("PurchaseCreditNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10527 (class 2606 OID 187115)
-- Name: PurchaseCreditNoteExportDetails fk_purchase_credit_note_export_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteExportDetails"
    ADD CONSTRAINT fk_purchase_credit_note_export_details FOREIGN KEY ("PurchaseCreditNoteId") REFERENCES "10083_10833"."PurchaseCreditNote"("PurchaseCreditNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10536 (class 2606 OID 187160)
-- Name: PCNItemWareHouse fk_purchase_credit_note_items_purchase_credit_note_item_wareHou; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PCNItemWareHouse"
    ADD CONSTRAINT "fk_purchase_credit_note_items_purchase_credit_note_item_wareHou" FOREIGN KEY ("PCNItemId") REFERENCES "10083_10833"."PurchaseCreditNoteItems"("PurchaseCreditNoteItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10520 (class 2606 OID 187070)
-- Name: PurchaseCreditNoteItems fk_purchase_credit_note_main; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteItems"
    ADD CONSTRAINT fk_purchase_credit_note_main FOREIGN KEY ("PurchaseCreditNoteId") REFERENCES "10083_10833"."PurchaseCreditNote"("PurchaseCreditNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10531 (class 2606 OID 187125)
-- Name: PurchaseCreditNoteOtherDetails fk_purchase_credit_note_other_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteOtherDetails"
    ADD CONSTRAINT fk_purchase_credit_note_other_details FOREIGN KEY ("PurchaseCreditNoteId") REFERENCES "10083_10833"."PurchaseCreditNote"("PurchaseCreditNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10533 (class 2606 OID 187145)
-- Name: PurchaseCreditNoteOtherCharges fk_purchase_credit_note_other_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteOtherCharges"
    ADD CONSTRAINT fk_purchase_credit_note_other_details FOREIGN KEY ("PurchaseCreditNoteId") REFERENCES "10083_10833"."PurchaseCreditNote"("PurchaseCreditNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10529 (class 2606 OID 187135)
-- Name: PurchaseCreditNoteShipTo fk_purchase_credit_note_ship_to; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteShipTo"
    ADD CONSTRAINT fk_purchase_credit_note_ship_to FOREIGN KEY ("PurchaseCreditNoteId") REFERENCES "10083_10833"."PurchaseCreditNote"("PurchaseCreditNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10521 (class 2606 OID 187085)
-- Name: PurchaseCreditNoteValueDetails fk_purchase_credit_note_value_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseCreditNoteValueDetails"
    ADD CONSTRAINT fk_purchase_credit_note_value_details FOREIGN KEY ("PurchaseCreditNoteId") REFERENCES "10083_10833"."PurchaseCreditNote"("PurchaseCreditNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10488 (class 2606 OID 186911)
-- Name: PurchaseReturnEwayBillsDetails fk_purchase_eway_bills_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnEwayBillsDetails"
    ADD CONSTRAINT fk_purchase_eway_bills_details FOREIGN KEY ("PurchaseReturnId") REFERENCES "10083_10833"."PurchaseReturn"("PurchaseReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10429 (class 2606 OID 186641)
-- Name: PurchaseOrderBatchDetails fk_purchase_order_batch_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderBatchDetails"
    ADD CONSTRAINT fk_purchase_order_batch_details FOREIGN KEY ("PurchaseOrderItemsId") REFERENCES "10083_10833"."PurchaseOrderItems"("PurchaseOrderItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10421 (class 2606 OID 186601)
-- Name: PurchaseOrderBillTo fk_purchase_order_bill_to; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderBillTo"
    ADD CONSTRAINT fk_purchase_order_bill_to FOREIGN KEY ("PurchaseOrderId") REFERENCES "10083_10833"."PurchaseOrder"("PurchaseOrderId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10423 (class 2606 OID 186591)
-- Name: PurchaseOrderDetails fk_purchase_order_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderDetails"
    ADD CONSTRAINT fk_purchase_order_details FOREIGN KEY ("PurchaseOrderId") REFERENCES "10083_10833"."PurchaseOrder"("PurchaseOrderId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10424 (class 2606 OID 186606)
-- Name: PurchaseOrderDispatchFrom fk_purchase_order_dispatch_from; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderDispatchFrom"
    ADD CONSTRAINT fk_purchase_order_dispatch_from FOREIGN KEY ("PurchaseOrderId") REFERENCES "10083_10833"."PurchaseOrder"("PurchaseOrderId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10427 (class 2606 OID 186631)
-- Name: PurchaseOrderExportDetails fk_purchase_order_export_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderExportDetails"
    ADD CONSTRAINT fk_purchase_order_export_details FOREIGN KEY ("PurchaseOrderId") REFERENCES "10083_10833"."PurchaseOrder"("PurchaseOrderId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10425 (class 2606 OID 186611)
-- Name: PurchaseOrderItems fk_purchase_order_items; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderItems"
    ADD CONSTRAINT fk_purchase_order_items FOREIGN KEY ("PurchaseOrderId") REFERENCES "10083_10833"."PurchaseOrder"("PurchaseOrderId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10422 (class 2606 OID 186596)
-- Name: PurchaseOrderShipTo fk_purchase_order_ship_to; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderShipTo"
    ADD CONSTRAINT fk_purchase_order_ship_to FOREIGN KEY ("PurchaseOrderId") REFERENCES "10083_10833"."PurchaseOrder"("PurchaseOrderId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10426 (class 2606 OID 186616)
-- Name: PurchaseOrderItems fk_purchase_order_stock_items; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderItems"
    ADD CONSTRAINT fk_purchase_order_stock_items FOREIGN KEY ("StockItemId") REFERENCES "10083_10833"."StockItem"("StockItemId");


--
-- TOC entry 10419 (class 2606 OID 186626)
-- Name: PurchaseOrder fk_purchase_order_supplier; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrder"
    ADD CONSTRAINT fk_purchase_order_supplier FOREIGN KEY ("SupplierId") REFERENCES "10083_10833"."Supplier"("SupplierId");


--
-- TOC entry 10420 (class 2606 OID 187560)
-- Name: PurchaseOrder fk_purchase_order_template; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrder"
    ADD CONSTRAINT fk_purchase_order_template FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10428 (class 2606 OID 186636)
-- Name: PurchaseOrderValueDetails fk_purchase_order_value_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOrderValueDetails"
    ADD CONSTRAINT fk_purchase_order_value_details FOREIGN KEY ("PurchaseOrderId") REFERENCES "10083_10833"."PurchaseOrder"("PurchaseOrderId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10403 (class 2606 OID 186511)
-- Name: PurchaseBatchDetails fk_purchase_purchase_batch_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseBatchDetails"
    ADD CONSTRAINT fk_purchase_purchase_batch_details FOREIGN KEY ("PurchaseItemsId") REFERENCES "10083_10833"."PurchaseItems"("PurchaseItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10394 (class 2606 OID 186476)
-- Name: PurchaseBillFrom fk_purchase_purchase_bill_from; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseBillFrom"
    ADD CONSTRAINT fk_purchase_purchase_bill_from FOREIGN KEY ("PurchaseId") REFERENCES "10083_10833"."Purchase"("PurchaseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10402 (class 2606 OID 186501)
-- Name: PurchaseEwayBillsDetails fk_purchase_purchase_eway_bills; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseEwayBillsDetails"
    ADD CONSTRAINT fk_purchase_purchase_eway_bills FOREIGN KEY ("PurchaseId") REFERENCES "10083_10833"."Purchase"("PurchaseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10400 (class 2606 OID 186496)
-- Name: PurchaseImportDetails fk_purchase_purchase_import_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseImportDetails"
    ADD CONSTRAINT fk_purchase_purchase_import_details FOREIGN KEY ("PurchaseId") REFERENCES "10083_10833"."Purchase"("PurchaseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10399 (class 2606 OID 186486)
-- Name: PurchaseItems fk_purchase_purchase_items; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseItems"
    ADD CONSTRAINT fk_purchase_purchase_items FOREIGN KEY ("PurchaseId") REFERENCES "10083_10833"."Purchase"("PurchaseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10396 (class 2606 OID 186466)
-- Name: PurchaseOtherDetails fk_purchase_purchase_other_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOtherDetails"
    ADD CONSTRAINT fk_purchase_purchase_other_details FOREIGN KEY ("PurchaseId") REFERENCES "10083_10833"."Purchase"("PurchaseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10397 (class 2606 OID 186481)
-- Name: PurchaseReceiptDetails fk_purchase_purchase_receipt_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReceiptDetails"
    ADD CONSTRAINT fk_purchase_purchase_receipt_details FOREIGN KEY ("PurchaseId") REFERENCES "10083_10833"."Purchase"("PurchaseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10395 (class 2606 OID 186471)
-- Name: PurchaseShipTo fk_purchase_purchase_ship; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseShipTo"
    ADD CONSTRAINT fk_purchase_purchase_ship FOREIGN KEY ("PurchaseId") REFERENCES "10083_10833"."Purchase"("PurchaseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10401 (class 2606 OID 186506)
-- Name: PurchaseValueDetails fk_purchase_purchase_value_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseValueDetails"
    ADD CONSTRAINT fk_purchase_purchase_value_details FOREIGN KEY ("PurchaseId") REFERENCES "10083_10833"."Purchase"("PurchaseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10482 (class 2606 OID 186891)
-- Name: PurchaseReturnBillFrom fk_purchase_return_bill_from; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnBillFrom"
    ADD CONSTRAINT fk_purchase_return_bill_from FOREIGN KEY ("PurchaseReturnId") REFERENCES "10083_10833"."PurchaseReturn"("PurchaseReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10472 (class 2606 OID 186841)
-- Name: PurchaseReturnDispatchFrom fk_purchase_return_dispatch; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnDispatchFrom"
    ADD CONSTRAINT fk_purchase_return_dispatch FOREIGN KEY ("PurchaseReturnId") REFERENCES "10083_10833"."PurchaseReturn"("PurchaseReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10481 (class 2606 OID 186886)
-- Name: PurchaseReturnExportDetails fk_purchase_return_export_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnExportDetails"
    ADD CONSTRAINT fk_purchase_return_export_details FOREIGN KEY ("PurchaseReturnId") REFERENCES "10083_10833"."PurchaseReturn"("PurchaseReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10490 (class 2606 OID 186931)
-- Name: PurchaseReturnItemWareHouse fk_purchase_return_items_purchase_return_item_wareHouse; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnItemWareHouse"
    ADD CONSTRAINT "fk_purchase_return_items_purchase_return_item_wareHouse" FOREIGN KEY ("PRItemId") REFERENCES "10083_10833"."PurchaseReturnItems"("PurchaseReturnItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10474 (class 2606 OID 186836)
-- Name: PurchaseReturnItems fk_purchase_return_main; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnItems"
    ADD CONSTRAINT fk_purchase_return_main FOREIGN KEY ("PurchaseReturnId") REFERENCES "10083_10833"."PurchaseReturn"("PurchaseReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10405 (class 2606 OID 186521)
-- Name: PurchaseOtherCharges fk_purchase_return_other_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseOtherCharges"
    ADD CONSTRAINT fk_purchase_return_other_details FOREIGN KEY ("PurchaseId") REFERENCES "10083_10833"."Purchase"("PurchaseId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10485 (class 2606 OID 186896)
-- Name: PurchaseReturnOtherDetails fk_purchase_return_other_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnOtherDetails"
    ADD CONSTRAINT fk_purchase_return_other_details FOREIGN KEY ("PurchaseReturnId") REFERENCES "10083_10833"."PurchaseReturn"("PurchaseReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10487 (class 2606 OID 186916)
-- Name: PurchaseReturnOtherCharges fk_purchase_return_other_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnOtherCharges"
    ADD CONSTRAINT fk_purchase_return_other_details FOREIGN KEY ("PurchaseReturnId") REFERENCES "10083_10833"."PurchaseReturn"("PurchaseReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10483 (class 2606 OID 186906)
-- Name: PurchaseReturnShipTo fk_purchase_return_ship_to; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnShipTo"
    ADD CONSTRAINT fk_purchase_return_ship_to FOREIGN KEY ("PurchaseReturnId") REFERENCES "10083_10833"."PurchaseReturn"("PurchaseReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10475 (class 2606 OID 186851)
-- Name: PurchaseReturnValueDetails fk_purchase_return_value_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseReturnValueDetails"
    ADD CONSTRAINT fk_purchase_return_value_details FOREIGN KEY ("PurchaseReturnId") REFERENCES "10083_10833"."PurchaseReturn"("PurchaseReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10514 (class 2606 OID 187605)
-- Name: PurchaseSettings fk_purchase_settings_template; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."PurchaseSettings"
    ADD CONSTRAINT fk_purchase_settings_template FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10539 (class 2606 OID 187281)
-- Name: Quotation fk_quotation_currency; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Quotation"
    ADD CONSTRAINT fk_quotation_currency FOREIGN KEY ("CurrencyId") REFERENCES "10083_10833"."Currency"("CurrencyId");


--
-- TOC entry 10540 (class 2606 OID 187271)
-- Name: Quotation fk_quotation_customer; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Quotation"
    ADD CONSTRAINT fk_quotation_customer FOREIGN KEY ("CustomerId") REFERENCES "10083_10833"."Customer"("CustomerId");


--
-- TOC entry 10547 (class 2606 OID 187311)
-- Name: QuotationItems fk_quotation_quotation_items; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."QuotationItems"
    ADD CONSTRAINT fk_quotation_quotation_items FOREIGN KEY ("QuotationId") REFERENCES "10083_10833"."Quotation"("QuotationId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10546 (class 2606 OID 187291)
-- Name: QuotationOtherCharges fk_quotation_quotation_other_charges; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."QuotationOtherCharges"
    ADD CONSTRAINT fk_quotation_quotation_other_charges FOREIGN KEY ("QuotationId") REFERENCES "10083_10833"."Quotation"("QuotationId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10544 (class 2606 OID 187301)
-- Name: QuotationTo fk_quotation_quotation_to; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."QuotationTo"
    ADD CONSTRAINT fk_quotation_quotation_to FOREIGN KEY ("QuotationId") REFERENCES "10083_10833"."Quotation"("QuotationId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10549 (class 2606 OID 187306)
-- Name: QuotationValueDetails fk_quotation_quotation_value_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."QuotationValueDetails"
    ADD CONSTRAINT fk_quotation_quotation_value_details FOREIGN KEY ("QuotationId") REFERENCES "10083_10833"."Quotation"("QuotationId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10548 (class 2606 OID 187316)
-- Name: QuotationItems fk_quotation_stock_item; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."QuotationItems"
    ADD CONSTRAINT fk_quotation_stock_item FOREIGN KEY ("StockItemId") REFERENCES "10083_10833"."StockItem"("StockItemId");


--
-- TOC entry 10541 (class 2606 OID 187570)
-- Name: Quotation fk_quotation_template; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Quotation"
    ADD CONSTRAINT fk_quotation_template FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10542 (class 2606 OID 187276)
-- Name: Quotation fk_quotation_termsAndConditions; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Quotation"
    ADD CONSTRAINT "fk_quotation_termsAndConditions" FOREIGN KEY ("TermAndConditionId") REFERENCES "10083_10833"."TermAndCondition"("TermAndConditionId");


--
-- TOC entry 10502 (class 2606 OID 186993)
-- Name: ReceiptNoteBatchDetails fk_receipt_note_batch_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteBatchDetails"
    ADD CONSTRAINT fk_receipt_note_batch_details FOREIGN KEY ("ReceiptNoteItemsId") REFERENCES "10083_10833"."ReceiptNoteItems"("ReceiptNoteItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10494 (class 2606 OID 186953)
-- Name: ReceiptNoteBillTo fk_receipt_note_bill_to; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteBillTo"
    ADD CONSTRAINT fk_receipt_note_bill_to FOREIGN KEY ("ReceiptNoteId") REFERENCES "10083_10833"."ReceiptNote"("ReceiptNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10492 (class 2606 OID 186978)
-- Name: ReceiptNote fk_receipt_note_customer; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNote"
    ADD CONSTRAINT fk_receipt_note_customer FOREIGN KEY ("CustomerId") REFERENCES "10083_10833"."Customer"("CustomerId");


--
-- TOC entry 10496 (class 2606 OID 186943)
-- Name: ReceiptNoteDetails fk_receipt_note_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteDetails"
    ADD CONSTRAINT fk_receipt_note_details FOREIGN KEY ("ReceiptNoteId") REFERENCES "10083_10833"."ReceiptNote"("ReceiptNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10497 (class 2606 OID 186958)
-- Name: ReceiptNoteDispatchFrom fk_receipt_note_dispatch_from; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteDispatchFrom"
    ADD CONSTRAINT fk_receipt_note_dispatch_from FOREIGN KEY ("ReceiptNoteId") REFERENCES "10083_10833"."ReceiptNote"("ReceiptNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10500 (class 2606 OID 186983)
-- Name: ReceiptNoteExportDetails fk_receipt_note_export_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteExportDetails"
    ADD CONSTRAINT fk_receipt_note_export_details FOREIGN KEY ("ReceiptNoteId") REFERENCES "10083_10833"."ReceiptNote"("ReceiptNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10498 (class 2606 OID 186963)
-- Name: ReceiptNoteItems fk_receipt_note_items; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteItems"
    ADD CONSTRAINT fk_receipt_note_items FOREIGN KEY ("ReceiptNoteId") REFERENCES "10083_10833"."ReceiptNote"("ReceiptNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10495 (class 2606 OID 186948)
-- Name: ReceiptNoteShipTo fk_receipt_note_ship_to; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteShipTo"
    ADD CONSTRAINT fk_receipt_note_ship_to FOREIGN KEY ("ReceiptNoteId") REFERENCES "10083_10833"."ReceiptNote"("ReceiptNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10499 (class 2606 OID 186968)
-- Name: ReceiptNoteItems fk_receipt_note_stockitem; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteItems"
    ADD CONSTRAINT fk_receipt_note_stockitem FOREIGN KEY ("StockItemId") REFERENCES "10083_10833"."StockItem"("StockItemId");


--
-- TOC entry 10493 (class 2606 OID 187575)
-- Name: ReceiptNote fk_receipt_note_template; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNote"
    ADD CONSTRAINT fk_receipt_note_template FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10501 (class 2606 OID 186988)
-- Name: ReceiptNoteValueDetails fk_receipt_note_value_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."ReceiptNoteValueDetails"
    ADD CONSTRAINT fk_receipt_note_value_details FOREIGN KEY ("ReceiptNoteId") REFERENCES "10083_10833"."ReceiptNote"("ReceiptNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10412 (class 2606 OID 186536)
-- Name: SalesOrderDetails fk_sale_order_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderDetails"
    ADD CONSTRAINT fk_sale_order_details FOREIGN KEY ("SaleOrderId") REFERENCES "10083_10833"."SalesOrder"("SaleOrderId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10467 (class 2606 OID 188946)
-- Name: SalesDebitNoteBatchDetails fk_sales_debit_note_batch_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteBatchDetails"
    ADD CONSTRAINT fk_sales_debit_note_batch_details FOREIGN KEY ("SDNItemsId") REFERENCES "10083_10833"."SalesDebitNoteItems"("SalesDebitNoteItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10456 (class 2606 OID 186751)
-- Name: SalesDebitNoteBillTo fk_sales_debit_note_bill_to; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteBillTo"
    ADD CONSTRAINT fk_sales_debit_note_bill_to FOREIGN KEY ("SaleDebitNoteId") REFERENCES "10083_10833"."SalesDebitNote"("SaleDebitNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10466 (class 2606 OID 189253)
-- Name: SalesDebitNoteEwayBillsDetails fk_sales_debit_note_eway_bills_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteEwayBillsDetails"
    ADD CONSTRAINT fk_sales_debit_note_eway_bills_details FOREIGN KEY ("SaleDebitNoteId") REFERENCES "10083_10833"."SalesDebitNote"("SaleDebitNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10463 (class 2606 OID 186796)
-- Name: SalesDebitNoteImportDetails fk_sales_debit_note_import_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteImportDetails"
    ADD CONSTRAINT fk_sales_debit_note_import_details FOREIGN KEY ("SaleDebitNoteId") REFERENCES "10083_10833"."SalesDebitNote"("SaleDebitNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10471 (class 2606 OID 188951)
-- Name: SalesDebitNoteItemWareHouse fk_sales_debit_note_items_ware_house; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteItemWareHouse"
    ADD CONSTRAINT fk_sales_debit_note_items_ware_house FOREIGN KEY ("SDNItemsId") REFERENCES "10083_10833"."SalesDebitNoteItems"("SalesDebitNoteItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10458 (class 2606 OID 186741)
-- Name: SalesDebitNoteOtherDetails fk_sales_debit_note_other_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteOtherDetails"
    ADD CONSTRAINT fk_sales_debit_note_other_details FOREIGN KEY ("SaleDebitNoteId") REFERENCES "10083_10833"."SalesDebitNote"("SaleDebitNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10459 (class 2606 OID 186756)
-- Name: SalesDebitNoteReceiptDetails fk_sales_debit_note_receipt_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteReceiptDetails"
    ADD CONSTRAINT fk_sales_debit_note_receipt_details FOREIGN KEY ("SaleDebitNoteId") REFERENCES "10083_10833"."SalesDebitNote"("SaleDebitNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10457 (class 2606 OID 186746)
-- Name: SalesDebitNoteShipTo fk_sales_debit_note_ship_to; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteShipTo"
    ADD CONSTRAINT fk_sales_debit_note_ship_to FOREIGN KEY ("SaleDebitNoteId") REFERENCES "10083_10833"."SalesDebitNote"("SaleDebitNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10464 (class 2606 OID 186801)
-- Name: SalesDebitNoteValueDetails fk_sales_debit_note_value_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteValueDetails"
    ADD CONSTRAINT fk_sales_debit_note_value_details FOREIGN KEY ("SaleDebitNoteId") REFERENCES "10083_10833"."SalesDebitNote"("SaleDebitNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10385 (class 2606 OID 189075)
-- Name: SalesEwayBillsDetails fk_sales_eway_bills_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesEwayBillsDetails"
    ADD CONSTRAINT fk_sales_eway_bills_details FOREIGN KEY ("SaleId") REFERENCES "10083_10833"."Sales"("SaleId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10388 (class 2606 OID 188799)
-- Name: SalesItemWareHouse fk_sales_items_sales_Item_WareHouse; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesItemWareHouse"
    ADD CONSTRAINT "fk_sales_items_sales_Item_WareHouse" FOREIGN KEY ("SalesItemsId") REFERENCES "10083_10833"."SalesItems"("SalesItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10411 (class 2606 OID 186541)
-- Name: SalesOrderShipTo fk_sales_order_ship_to; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderShipTo"
    ADD CONSTRAINT fk_sales_order_ship_to FOREIGN KEY ("SaleOrderId") REFERENCES "10083_10833"."SalesOrder"("SaleOrderId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10418 (class 2606 OID 186586)
-- Name: SalesOrderBatchDetails fk_sales_orders_batch_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderBatchDetails"
    ADD CONSTRAINT fk_sales_orders_batch_details FOREIGN KEY ("SalesOrderItemsId") REFERENCES "10083_10833"."SalesOrderItems"("SalesOrderItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10410 (class 2606 OID 186546)
-- Name: SalesOrderBillTo fk_sales_orders_bill_to; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderBillTo"
    ADD CONSTRAINT fk_sales_orders_bill_to FOREIGN KEY ("SaleOrderId") REFERENCES "10083_10833"."SalesOrder"("SaleOrderId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10408 (class 2606 OID 186571)
-- Name: SalesOrder fk_sales_orders_customer; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrder"
    ADD CONSTRAINT fk_sales_orders_customer FOREIGN KEY ("CustomerId") REFERENCES "10083_10833"."Customer"("CustomerId");


--
-- TOC entry 10413 (class 2606 OID 186551)
-- Name: SalesOrderDispatchFrom fk_sales_orders_dispatch_from; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderDispatchFrom"
    ADD CONSTRAINT fk_sales_orders_dispatch_from FOREIGN KEY ("SaleOrderId") REFERENCES "10083_10833"."SalesOrder"("SaleOrderId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10416 (class 2606 OID 186576)
-- Name: SalesOrderExportDetails fk_sales_orders_export_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderExportDetails"
    ADD CONSTRAINT fk_sales_orders_export_details FOREIGN KEY ("SaleOrderId") REFERENCES "10083_10833"."SalesOrder"("SaleOrderId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10414 (class 2606 OID 186556)
-- Name: SalesOrderItems fk_sales_orders_main; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderItems"
    ADD CONSTRAINT fk_sales_orders_main FOREIGN KEY ("SaleOrderId") REFERENCES "10083_10833"."SalesOrder"("SaleOrderId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10415 (class 2606 OID 186561)
-- Name: SalesOrderItems fk_sales_orders_stock_item; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderItems"
    ADD CONSTRAINT fk_sales_orders_stock_item FOREIGN KEY ("StockItemId") REFERENCES "10083_10833"."StockItem"("StockItemId");


--
-- TOC entry 10409 (class 2606 OID 187590)
-- Name: SalesOrder fk_sales_orders_template; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrder"
    ADD CONSTRAINT fk_sales_orders_template FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10417 (class 2606 OID 186581)
-- Name: SalesOrderValueDetails fk_sales_orders_value_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOrderValueDetails"
    ADD CONSTRAINT fk_sales_orders_value_details FOREIGN KEY ("SaleOrderId") REFERENCES "10083_10833"."SalesOrder"("SaleOrderId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10543 (class 2606 OID 187286)
-- Name: Quotation fk_sales_person_quotation; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."Quotation"
    ADD CONSTRAINT fk_sales_person_quotation FOREIGN KEY ("SalesPersonId") REFERENCES "10083_10833"."SalesPerson"("SalesPersonId");


--
-- TOC entry 10446 (class 2606 OID 188870)
-- Name: SalesReturnBatchDetails fk_sales_return_batch_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnBatchDetails"
    ADD CONSTRAINT fk_sales_return_batch_details FOREIGN KEY ("SalesReturnItemsId") REFERENCES "10083_10833"."SalesReturnItems"("SalesReturnItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10435 (class 2606 OID 186656)
-- Name: SalesReturnBillTo fk_sales_return_bill_to; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnBillTo"
    ADD CONSTRAINT fk_sales_return_bill_to FOREIGN KEY ("SaleReturnId") REFERENCES "10083_10833"."SalesReturn"("SaleReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10445 (class 2606 OID 189164)
-- Name: SalesReturnEwayBillsDetails fk_sales_return_eway_bills_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnEwayBillsDetails"
    ADD CONSTRAINT fk_sales_return_eway_bills_details FOREIGN KEY ("SaleReturnId") REFERENCES "10083_10833"."SalesReturn"("SaleReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10442 (class 2606 OID 186701)
-- Name: SalesReturnImportDetails fk_sales_return_import_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnImportDetails"
    ADD CONSTRAINT fk_sales_return_import_details FOREIGN KEY ("SaleReturnId") REFERENCES "10083_10833"."SalesReturn"("SaleReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10450 (class 2606 OID 188875)
-- Name: SalesReturnItemWareHouse fk_sales_return_items_sales_return_other_charges; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnItemWareHouse"
    ADD CONSTRAINT fk_sales_return_items_sales_return_other_charges FOREIGN KEY ("SalesReturnItemsId") REFERENCES "10083_10833"."SalesReturnItems"("SalesReturnItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10437 (class 2606 OID 186646)
-- Name: SalesReturnOtherDetails fk_sales_return_other_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnOtherDetails"
    ADD CONSTRAINT fk_sales_return_other_details FOREIGN KEY ("SaleReturnId") REFERENCES "10083_10833"."SalesReturn"("SaleReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10438 (class 2606 OID 186661)
-- Name: SalesReturnReceiptDetails fk_sales_return_receipt_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnReceiptDetails"
    ADD CONSTRAINT fk_sales_return_receipt_details FOREIGN KEY ("SaleReturnId") REFERENCES "10083_10833"."SalesReturn"("SaleReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10436 (class 2606 OID 186651)
-- Name: SalesReturnShipTo fk_sales_return_ship_to; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnShipTo"
    ADD CONSTRAINT fk_sales_return_ship_to FOREIGN KEY ("SaleReturnId") REFERENCES "10083_10833"."SalesReturn"("SaleReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10443 (class 2606 OID 186706)
-- Name: SalesReturnValueDetails fk_sales_return_value_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnValueDetails"
    ADD CONSTRAINT fk_sales_return_value_details FOREIGN KEY ("SaleReturnId") REFERENCES "10083_10833"."SalesReturn"("SaleReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10374 (class 2606 OID 186361)
-- Name: SalesShipTo fk_sales_sale_ship_to; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesShipTo"
    ADD CONSTRAINT fk_sales_sale_ship_to FOREIGN KEY ("SaleId") REFERENCES "10083_10833"."Sales"("SaleId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10386 (class 2606 OID 188794)
-- Name: SalesBatchDetails fk_sales_sales_batch_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesBatchDetails"
    ADD CONSTRAINT fk_sales_sales_batch_details FOREIGN KEY ("SalesItemsId") REFERENCES "10083_10833"."SalesItems"("SalesItemsId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10373 (class 2606 OID 186366)
-- Name: SalesBillTo fk_sales_sales_bill_to; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesBillTo"
    ADD CONSTRAINT fk_sales_sales_bill_to FOREIGN KEY ("SaleId") REFERENCES "10083_10833"."Sales"("SaleId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10378 (class 2606 OID 186371)
-- Name: SalesDispatchDetails fk_sales_sales_dispatch_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDispatchDetails"
    ADD CONSTRAINT fk_sales_sales_dispatch_details FOREIGN KEY ("SaleId") REFERENCES "10083_10833"."Sales"("SaleId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10382 (class 2606 OID 186411)
-- Name: SalesExportDetails fk_sales_sales_export_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesExportDetails"
    ADD CONSTRAINT fk_sales_sales_export_details FOREIGN KEY ("SaleId") REFERENCES "10083_10833"."Sales"("SaleId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10375 (class 2606 OID 186346)
-- Name: SalesOtherDetails fk_sales_sales_other_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOtherDetails"
    ADD CONSTRAINT fk_sales_sales_other_details FOREIGN KEY ("SaleId") REFERENCES "10083_10833"."Sales"("SaleId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10383 (class 2606 OID 186416)
-- Name: SalesValueDetails fk_sales_sales_value_details; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesValueDetails"
    ADD CONSTRAINT fk_sales_sales_value_details FOREIGN KEY ("SaleId") REFERENCES "10083_10833"."Sales"("SaleId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10358 (class 2606 OID 186256)
-- Name: StockGroupGSTInfo fk_stockGroup_stockGroupGSTInfo; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockGroupGSTInfo"
    ADD CONSTRAINT "fk_stockGroup_stockGroupGSTInfo" FOREIGN KEY ("StockGroupId") REFERENCES "10083_10833"."StockGroup"("StockGroupId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10353 (class 2606 OID 186301)
-- Name: StockItemDescription fk_stockItem_stockItemDescription; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemDescription"
    ADD CONSTRAINT "fk_stockItem_stockItemDescription" FOREIGN KEY ("StockItemId") REFERENCES "10083_10833"."StockItem"("StockItemId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10357 (class 2606 OID 186296)
-- Name: StockItemGSTInfo fk_stockItem_stockItemGSTInfo; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemGSTInfo"
    ADD CONSTRAINT "fk_stockItem_stockItemGSTInfo" FOREIGN KEY ("StockItemId") REFERENCES "10083_10833"."StockItem"("StockItemId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10355 (class 2606 OID 186281)
-- Name: StockItemOpeningBalance fk_stockItem_stockItemOpeningBalance; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."StockItemOpeningBalance"
    ADD CONSTRAINT "fk_stockItem_stockItemOpeningBalance" FOREIGN KEY ("StockItemId") REFERENCES "10083_10833"."StockItem"("StockItemId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10363 (class 2606 OID 187631)
-- Name: AutoNumbering fk_template_auto_numbering; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."AutoNumbering"
    ADD CONSTRAINT fk_template_auto_numbering FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10367 (class 2606 OID 187540)
-- Name: DocumentLastEntry fk_template_last_entry_template; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."DocumentLastEntry"
    ADD CONSTRAINT fk_template_last_entry_template FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId");


--
-- TOC entry 10556 (class 2606 OID 187636)
-- Name: TemplateSettings fk_template_settings_template; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."TemplateSettings"
    ADD CONSTRAINT fk_template_settings_template FOREIGN KEY ("TemplateId") REFERENCES "10083_10833"."Template"("TemplateId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10365 (class 2606 OID 186331)
-- Name: TransportersAddress fk_transporters_address_transporters; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."TransportersAddress"
    ADD CONSTRAINT fk_transporters_address_transporters FOREIGN KEY ("TransportersId") REFERENCES "10083_10833"."Transporters"("TransportersId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10366 (class 2606 OID 186336)
-- Name: TransportersVehicles fk_transporters_vehicles; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."TransportersVehicles"
    ADD CONSTRAINT fk_transporters_vehicles FOREIGN KEY ("TransportersId") REFERENCES "10083_10833"."Transporters"("TransportersId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10550 (class 2606 OID 189016)
-- Name: SalesContainerList salescontainerlist_salesmain_fk; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesContainerList"
    ADD CONSTRAINT salescontainerlist_salesmain_fk FOREIGN KEY ("SaleId") REFERENCES "10083_10833"."SalesMain"("SaleId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10552 (class 2606 OID 189194)
-- Name: SalesDebitNoteContainerList salesdebitnotecontainerlist_salesmain_fk; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteContainerList"
    ADD CONSTRAINT salesdebitnotecontainerlist_salesmain_fk FOREIGN KEY ("SaleDebitNoteId") REFERENCES "10083_10833"."SalesDebitNoteMain"("SaleDebitNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10559 (class 2606 OID 189239)
-- Name: SalesDebitNoteHSNSummary salesdebitnotehsnsummary_salesmain_fk; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteHSNSummary"
    ADD CONSTRAINT salesdebitnotehsnsummary_salesmain_fk FOREIGN KEY ("SaleDebitNoteId") REFERENCES "10083_10833"."SalesDebitNoteMain"("SaleDebitNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10461 (class 2606 OID 189207)
-- Name: SalesDebitNoteItems salesdebitnoteitems_salesmain_fk; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteItems"
    ADD CONSTRAINT salesdebitnoteitems_salesmain_fk FOREIGN KEY ("SaleDebitNoteId") REFERENCES "10083_10833"."SalesDebitNoteMain"("SaleDebitNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10469 (class 2606 OID 189223)
-- Name: SalesDebitNoteOtherCharges salesdebitnoteothercharges_salesmain_fk; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNoteOtherCharges"
    ADD CONSTRAINT salesdebitnoteothercharges_salesmain_fk FOREIGN KEY ("SaleDebitNoteId") REFERENCES "10083_10833"."SalesDebitNoteMain"("SaleDebitNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10553 (class 2606 OID 189179)
-- Name: SalesDebitNotePackingList salesdebitnotepackinglist_salesmain_fk; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesDebitNotePackingList"
    ADD CONSTRAINT salesdebitnotepackinglist_salesmain_fk FOREIGN KEY ("SaleDebitNoteId") REFERENCES "10083_10833"."SalesDebitNoteMain"("SaleDebitNoteId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10558 (class 2606 OID 189061)
-- Name: SalesHSNSummary saleshsnsummary_salesmain_fk; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesHSNSummary"
    ADD CONSTRAINT saleshsnsummary_salesmain_fk FOREIGN KEY ("SaleId") REFERENCES "10083_10833"."SalesMain"("SaleId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10380 (class 2606 OID 189029)
-- Name: SalesItems salesitems_salesmain_fk; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesItems"
    ADD CONSTRAINT salesitems_salesmain_fk FOREIGN KEY ("SaleId") REFERENCES "10083_10833"."SalesMain"("SaleId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10377 (class 2606 OID 189045)
-- Name: SalesOtherCharges salesothercharges_salesmain_fk; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesOtherCharges"
    ADD CONSTRAINT salesothercharges_salesmain_fk FOREIGN KEY ("SaleId") REFERENCES "10083_10833"."SalesMain"("SaleId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10551 (class 2606 OID 189001)
-- Name: SalesPackingList salespackinglist_salesmain_fk; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesPackingList"
    ADD CONSTRAINT salespackinglist_salesmain_fk FOREIGN KEY ("SaleId") REFERENCES "10083_10833"."SalesMain"("SaleId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10554 (class 2606 OID 189105)
-- Name: SalesReturnContainerList salesreturncontainerlist_salesmain_fk; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnContainerList"
    ADD CONSTRAINT salesreturncontainerlist_salesmain_fk FOREIGN KEY ("SaleReturnId") REFERENCES "10083_10833"."SalesReturnMain"("SaleReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10560 (class 2606 OID 189150)
-- Name: SalesReturnHSNSummary salesreturnhsnsummary_salesmain_fk; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnHSNSummary"
    ADD CONSTRAINT salesreturnhsnsummary_salesmain_fk FOREIGN KEY ("SaleReturnId") REFERENCES "10083_10833"."SalesReturnMain"("SaleReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10440 (class 2606 OID 189118)
-- Name: SalesReturnItems salesreturnitems_salesmain_fk; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnItems"
    ADD CONSTRAINT salesreturnitems_salesmain_fk FOREIGN KEY ("SaleReturnId") REFERENCES "10083_10833"."SalesReturnMain"("SaleReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10448 (class 2606 OID 189134)
-- Name: SalesReturnOtherCharges salesreturnothercharges_salesmain_fk; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnOtherCharges"
    ADD CONSTRAINT salesreturnothercharges_salesmain_fk FOREIGN KEY ("SaleReturnId") REFERENCES "10083_10833"."SalesReturnMain"("SaleReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


--
-- TOC entry 10555 (class 2606 OID 189090)
-- Name: SalesReturnPackingList salesreturnpackinglist_salesmain_fk; Type: FK CONSTRAINT; Schema: 10083_10833; Owner: 10083
--

ALTER TABLE ONLY "10083_10833"."SalesReturnPackingList"
    ADD CONSTRAINT salesreturnpackinglist_salesmain_fk FOREIGN KEY ("SaleReturnId") REFERENCES "10083_10833"."SalesReturnMain"("SaleReturnId") ON UPDATE CASCADE ON DELETE CASCADE;


-- Completed on 2025-07-21 11:29:17

--
-- PostgreSQL database dump complete
--
